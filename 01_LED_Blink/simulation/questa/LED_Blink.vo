// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 23.1std.0 Build 991 11/28/2023 SC Lite Edition"

// DATE "12/23/2023 22:55:32"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module LED_Blink (
	led0,
	led1,
	led2,
	led3,
	clk);
output 	led0;
output 	led1;
output 	led2;
output 	led3;
input 	clk;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \led0_cnt[0]~43 ;
wire \led0_cnt[1]~45 ;
wire \led0_cnt[1]~45COUT1_65 ;
wire \led0_cnt[2]~47 ;
wire \led0_cnt[2]~47COUT1_66 ;
wire \led0_cnt[3]~49 ;
wire \led0_cnt[3]~49COUT1_67 ;
wire \led0_cnt[4]~51 ;
wire \led0_cnt[4]~51COUT1_68 ;
wire \led0_cnt[5]~53 ;
wire \led0_cnt[6]~55 ;
wire \led0_cnt[6]~55COUT1_69 ;
wire \led0_cnt[7]~57 ;
wire \led0_cnt[7]~57COUT1_70 ;
wire \led0_cnt[8]~59 ;
wire \led0_cnt[8]~59COUT1_71 ;
wire \led0_cnt[9]~61 ;
wire \led0_cnt[9]~61COUT1_72 ;
wire \led0_cnt[10]~63 ;
wire \led0_cnt[11]~21 ;
wire \led0_cnt[11]~21COUT1_73 ;
wire \led0_cnt[12]~17 ;
wire \led0_cnt[12]~17COUT1_74 ;
wire \led0_cnt[13]~19 ;
wire \led0_cnt[13]~19COUT1_75 ;
wire \led0_cnt[14]~15 ;
wire \led0_cnt[14]~15COUT1_76 ;
wire \led0_cnt[15]~13 ;
wire \led0_cnt[16]~9 ;
wire \led0_cnt[16]~9COUT1_77 ;
wire \led0_cnt[17]~11 ;
wire \led0_cnt[17]~11COUT1_78 ;
wire \led0_cnt[18]~1 ;
wire \led0_cnt[18]~1COUT1_79 ;
wire \led0_cnt[19]~23 ;
wire \led0_cnt[19]~23COUT1_80 ;
wire \led0_cnt[20]~25 ;
wire \led0_cnt[21]~27 ;
wire \led0_cnt[21]~27COUT1_81 ;
wire \led0_cnt[22]~3 ;
wire \led0_cnt[22]~3COUT1_82 ;
wire \led0_cnt[23]~5 ;
wire \led0_cnt[23]~5COUT1_83 ;
wire \led0_cnt[24]~31 ;
wire \led0_cnt[24]~31COUT1_84 ;
wire \led0_cnt[25]~33 ;
wire \LessThan0~0_combout ;
wire \led0_cnt[26]~7 ;
wire \led0_cnt[26]~7COUT1_85 ;
wire \led0_cnt[27]~29 ;
wire \led0_cnt[27]~29COUT1_86 ;
wire \led0_cnt[28]~35 ;
wire \led0_cnt[28]~35COUT1_87 ;
wire \led0_cnt[29]~37 ;
wire \led0_cnt[29]~37COUT1_88 ;
wire \led0_cnt[30]~39 ;
wire \LessThan0~7_combout ;
wire \LessThan0~4_combout ;
wire \LessThan0~5_combout ;
wire \LessThan0~6_combout ;
wire \LessThan0~2_combout ;
wire \LessThan0~1_combout ;
wire \LessThan0~3_combout ;
wire \LessThan0~8_combout ;
wire \LessThan0~9_combout ;
wire \LessThan0~10_combout ;
wire \LessThan0~11_combout ;
wire \LessThan0~12_combout ;
wire \LessThan0~13_combout ;
wire \led0_status~regout ;
wire \led1_cnt[0]~5 ;
wire \led1_cnt[1]~7 ;
wire \led1_cnt[1]~7COUT1_65 ;
wire \led1_cnt[2]~9 ;
wire \led1_cnt[2]~9COUT1_66 ;
wire \led1_cnt[3]~11 ;
wire \led1_cnt[3]~11COUT1_67 ;
wire \led1_cnt[4]~15 ;
wire \led1_cnt[4]~15COUT1_68 ;
wire \led1_cnt[5]~17 ;
wire \led1_cnt[6]~19 ;
wire \led1_cnt[6]~19COUT1_69 ;
wire \led1_cnt[7]~21 ;
wire \led1_cnt[7]~21COUT1_70 ;
wire \led1_cnt[8]~13 ;
wire \led1_cnt[8]~13COUT1_71 ;
wire \led1_cnt[9]~35 ;
wire \led1_cnt[9]~35COUT1_72 ;
wire \led1_cnt[10]~39 ;
wire \led1_cnt[11]~25 ;
wire \led1_cnt[11]~25COUT1_73 ;
wire \led1_cnt[12]~27 ;
wire \led1_cnt[12]~27COUT1_74 ;
wire \led1_cnt[13]~37 ;
wire \led1_cnt[13]~37COUT1_75 ;
wire \led1_cnt[14]~23 ;
wire \led1_cnt[14]~23COUT1_76 ;
wire \led1_cnt[15]~41 ;
wire \led1_cnt[16]~43 ;
wire \led1_cnt[16]~43COUT1_77 ;
wire \led1_cnt[17]~29 ;
wire \led1_cnt[17]~29COUT1_78 ;
wire \led1_cnt[18]~59 ;
wire \led1_cnt[18]~59COUT1_79 ;
wire \led1_cnt[19]~61 ;
wire \led1_cnt[19]~61COUT1_80 ;
wire \led1_cnt[20]~63 ;
wire \led1_cnt[21]~3 ;
wire \led1_cnt[21]~3COUT1_81 ;
wire \led1_cnt[22]~31 ;
wire \led1_cnt[22]~31COUT1_82 ;
wire \led1_cnt[23]~55 ;
wire \led1_cnt[23]~55COUT1_83 ;
wire \led1_cnt[24]~57 ;
wire \led1_cnt[24]~57COUT1_84 ;
wire \led1_cnt[25]~33 ;
wire \led1_cnt[26]~45 ;
wire \led1_cnt[26]~45COUT1_85 ;
wire \led1_cnt[27]~47 ;
wire \led1_cnt[27]~47COUT1_86 ;
wire \led1_cnt[28]~49 ;
wire \led1_cnt[28]~49COUT1_87 ;
wire \led1_cnt[29]~51 ;
wire \led1_cnt[29]~51COUT1_88 ;
wire \led1_cnt[30]~53 ;
wire \LessThan1~29_combout ;
wire \LessThan1~30_combout ;
wire \LessThan1~31_combout ;
wire \LessThan1~32_combout ;
wire \LessThan1~26_combout ;
wire \LessThan1~27_combout ;
wire \LessThan1~23_combout ;
wire \LessThan1~24_combout ;
wire \LessThan1~25_combout ;
wire \LessThan1~28_combout ;
wire \LessThan1~9_combout ;
wire \LessThan1~6_combout ;
wire \LessThan1~3_combout ;
wire \LessThan1~34_combout ;
wire \LessThan1~33_combout ;
wire \led1_status~regout ;
wire \led2_cnt[0]~21 ;
wire \led2_cnt[1]~23 ;
wire \led2_cnt[1]~23COUT1_65 ;
wire \led2_cnt[2]~25 ;
wire \led2_cnt[2]~25COUT1_66 ;
wire \led2_cnt[3]~27 ;
wire \led2_cnt[3]~27COUT1_67 ;
wire \led2_cnt[4]~29 ;
wire \led2_cnt[4]~29COUT1_68 ;
wire \led2_cnt[5]~31 ;
wire \led2_cnt[6]~33 ;
wire \led2_cnt[6]~33COUT1_69 ;
wire \led2_cnt[7]~35 ;
wire \led2_cnt[7]~35COUT1_70 ;
wire \led2_cnt[8]~5 ;
wire \led2_cnt[8]~5COUT1_71 ;
wire \led2_cnt[9]~43 ;
wire \led2_cnt[9]~43COUT1_72 ;
wire \led2_cnt[10]~7 ;
wire \led2_cnt[11]~9 ;
wire \led2_cnt[11]~9COUT1_73 ;
wire \led2_cnt[12]~41 ;
wire \led2_cnt[12]~41COUT1_74 ;
wire \led2_cnt[13]~11 ;
wire \led2_cnt[13]~11COUT1_75 ;
wire \led2_cnt[14]~37 ;
wire \led2_cnt[14]~37COUT1_76 ;
wire \led2_cnt[15]~39 ;
wire \led2_cnt[16]~13 ;
wire \led2_cnt[16]~13COUT1_77 ;
wire \led2_cnt[17]~45 ;
wire \led2_cnt[17]~45COUT1_78 ;
wire \led2_cnt[18]~47 ;
wire \led2_cnt[18]~47COUT1_79 ;
wire \led2_cnt[19]~49 ;
wire \led2_cnt[19]~49COUT1_80 ;
wire \led2_cnt[20]~15 ;
wire \led2_cnt[21]~17 ;
wire \led2_cnt[21]~17COUT1_81 ;
wire \led2_cnt[22]~53 ;
wire \led2_cnt[22]~53COUT1_82 ;
wire \led2_cnt[23]~55 ;
wire \led2_cnt[23]~55COUT1_83 ;
wire \led2_cnt[24]~19 ;
wire \led2_cnt[24]~19COUT1_84 ;
wire \led2_cnt[25]~51 ;
wire \led2_cnt[26]~57 ;
wire \led2_cnt[26]~57COUT1_85 ;
wire \led2_cnt[27]~59 ;
wire \led2_cnt[27]~59COUT1_86 ;
wire \led2_cnt[28]~61 ;
wire \led2_cnt[28]~61COUT1_87 ;
wire \led2_cnt[29]~63 ;
wire \led2_cnt[29]~63COUT1_88 ;
wire \led2_cnt[30]~1 ;
wire \LessThan2~11_combout ;
wire \LessThan2~10_combout ;
wire \LessThan2~8_combout ;
wire \LessThan2~9_combout ;
wire \LessThan2~6_combout ;
wire \LessThan2~5_combout ;
wire \LessThan2~0_combout ;
wire \LessThan2~7_combout ;
wire \LessThan2~12_combout ;
wire \LessThan2~1_combout ;
wire \LessThan2~2_combout ;
wire \LessThan2~3_combout ;
wire \LessThan2~4_combout ;
wire \LessThan2~13_combout ;
wire \led2_status~regout ;
wire \led3_cnt[0]~23 ;
wire \led3_cnt[1]~25 ;
wire \led3_cnt[1]~25COUT1_65 ;
wire \led3_cnt[2]~27 ;
wire \led3_cnt[2]~27COUT1_66 ;
wire \led3_cnt[3]~29 ;
wire \led3_cnt[3]~29COUT1_67 ;
wire \led3_cnt[4]~31 ;
wire \led3_cnt[4]~31COUT1_68 ;
wire \led3_cnt[5]~33 ;
wire \led3_cnt[6]~35 ;
wire \led3_cnt[6]~35COUT1_69 ;
wire \led3_cnt[7]~9 ;
wire \led3_cnt[7]~9COUT1_70 ;
wire \led3_cnt[8]~43 ;
wire \led3_cnt[8]~43COUT1_71 ;
wire \led3_cnt[9]~17 ;
wire \led3_cnt[9]~17COUT1_72 ;
wire \led3_cnt[10]~7 ;
wire \led3_cnt[11]~41 ;
wire \led3_cnt[11]~41COUT1_73 ;
wire \led3_cnt[12]~13 ;
wire \led3_cnt[12]~13COUT1_74 ;
wire \led3_cnt[13]~37 ;
wire \led3_cnt[13]~37COUT1_75 ;
wire \led3_cnt[14]~39 ;
wire \led3_cnt[14]~39COUT1_76 ;
wire \led3_cnt[15]~15 ;
wire \led3_cnt[16]~59 ;
wire \led3_cnt[16]~59COUT1_77 ;
wire \led3_cnt[17]~61 ;
wire \led3_cnt[17]~61COUT1_78 ;
wire \led3_cnt[18]~63 ;
wire \led3_cnt[18]~63COUT1_79 ;
wire \led3_cnt[19]~19 ;
wire \led3_cnt[19]~19COUT1_80 ;
wire \led3_cnt[20]~21 ;
wire \led3_cnt[21]~55 ;
wire \led3_cnt[21]~55COUT1_81 ;
wire \led3_cnt[22]~57 ;
wire \led3_cnt[22]~57COUT1_82 ;
wire \led3_cnt[23]~11 ;
wire \led3_cnt[23]~11COUT1_83 ;
wire \led3_cnt[24]~45 ;
wire \led3_cnt[24]~45COUT1_84 ;
wire \led3_cnt[25]~47 ;
wire \led3_cnt[26]~49 ;
wire \led3_cnt[26]~49COUT1_85 ;
wire \led3_cnt[27]~51 ;
wire \led3_cnt[27]~51COUT1_86 ;
wire \led3_cnt[28]~53 ;
wire \led3_cnt[28]~53COUT1_87 ;
wire \led3_cnt[29]~1 ;
wire \led3_cnt[29]~1COUT1_88 ;
wire \led3_cnt[30]~3 ;
wire \LessThan3~5_combout ;
wire \LessThan3~6_combout ;
wire \LessThan3~7_combout ;
wire \LessThan3~0_combout ;
wire \LessThan3~8_combout ;
wire \LessThan3~9_combout ;
wire \LessThan3~10_combout ;
wire \LessThan3~11_combout ;
wire \LessThan3~12_combout ;
wire \LessThan3~1_combout ;
wire \LessThan3~2_combout ;
wire \LessThan3~3_combout ;
wire \LessThan3~4_combout ;
wire \LessThan3~13_combout ;
wire \LessThan3~14_combout ;
wire \led3_status~regout ;
wire [31:0] led0_cnt;
wire [31:0] led1_cnt;
wire [31:0] led2_cnt;
wire [31:0] led3_cnt;


// Location: PIN_64,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y3_N4
maxii_lcell \led0_cnt[0] (
// Equation(s):
// led0_cnt[0] = DFFEAS((!led0_cnt[0]), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[0]~43  = CARRY((led0_cnt[0]))

	.clk(\clk~combout ),
	.dataa(led0_cnt[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[0]),
	.cout(\led0_cnt[0]~43 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led0_cnt[0] .lut_mask = "55aa";
defparam \led0_cnt[0] .operation_mode = "arithmetic";
defparam \led0_cnt[0] .output_mode = "reg_only";
defparam \led0_cnt[0] .register_cascade_mode = "off";
defparam \led0_cnt[0] .sum_lutc_input = "datac";
defparam \led0_cnt[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N5
maxii_lcell \led0_cnt[1] (
// Equation(s):
// led0_cnt[1] = DFFEAS(led0_cnt[1] $ ((((\led0_cnt[0]~43 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[1]~45  = CARRY(((!\led0_cnt[0]~43 )) # (!led0_cnt[1]))
// \led0_cnt[1]~45COUT1_65  = CARRY(((!\led0_cnt[0]~43 )) # (!led0_cnt[1]))

	.clk(\clk~combout ),
	.dataa(led0_cnt[1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[0]~43 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[1]),
	.cout(),
	.cout0(\led0_cnt[1]~45 ),
	.cout1(\led0_cnt[1]~45COUT1_65 ));
// synopsys translate_off
defparam \led0_cnt[1] .cin_used = "true";
defparam \led0_cnt[1] .lut_mask = "5a5f";
defparam \led0_cnt[1] .operation_mode = "arithmetic";
defparam \led0_cnt[1] .output_mode = "reg_only";
defparam \led0_cnt[1] .register_cascade_mode = "off";
defparam \led0_cnt[1] .sum_lutc_input = "cin";
defparam \led0_cnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N6
maxii_lcell \led0_cnt[2] (
// Equation(s):
// led0_cnt[2] = DFFEAS(led0_cnt[2] $ ((((!(!\led0_cnt[0]~43  & \led0_cnt[1]~45 ) # (\led0_cnt[0]~43  & \led0_cnt[1]~45COUT1_65 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[2]~47  = CARRY((led0_cnt[2] & ((!\led0_cnt[1]~45 ))))
// \led0_cnt[2]~47COUT1_66  = CARRY((led0_cnt[2] & ((!\led0_cnt[1]~45COUT1_65 ))))

	.clk(\clk~combout ),
	.dataa(led0_cnt[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[0]~43 ),
	.cin0(\led0_cnt[1]~45 ),
	.cin1(\led0_cnt[1]~45COUT1_65 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[2]),
	.cout(),
	.cout0(\led0_cnt[2]~47 ),
	.cout1(\led0_cnt[2]~47COUT1_66 ));
// synopsys translate_off
defparam \led0_cnt[2] .cin0_used = "true";
defparam \led0_cnt[2] .cin1_used = "true";
defparam \led0_cnt[2] .cin_used = "true";
defparam \led0_cnt[2] .lut_mask = "a50a";
defparam \led0_cnt[2] .operation_mode = "arithmetic";
defparam \led0_cnt[2] .output_mode = "reg_only";
defparam \led0_cnt[2] .register_cascade_mode = "off";
defparam \led0_cnt[2] .sum_lutc_input = "cin";
defparam \led0_cnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N7
maxii_lcell \led0_cnt[3] (
// Equation(s):
// led0_cnt[3] = DFFEAS((led0_cnt[3] $ (((!\led0_cnt[0]~43  & \led0_cnt[2]~47 ) # (\led0_cnt[0]~43  & \led0_cnt[2]~47COUT1_66 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[3]~49  = CARRY(((!\led0_cnt[2]~47 ) # (!led0_cnt[3])))
// \led0_cnt[3]~49COUT1_67  = CARRY(((!\led0_cnt[2]~47COUT1_66 ) # (!led0_cnt[3])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[0]~43 ),
	.cin0(\led0_cnt[2]~47 ),
	.cin1(\led0_cnt[2]~47COUT1_66 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[3]),
	.cout(),
	.cout0(\led0_cnt[3]~49 ),
	.cout1(\led0_cnt[3]~49COUT1_67 ));
// synopsys translate_off
defparam \led0_cnt[3] .cin0_used = "true";
defparam \led0_cnt[3] .cin1_used = "true";
defparam \led0_cnt[3] .cin_used = "true";
defparam \led0_cnt[3] .lut_mask = "3c3f";
defparam \led0_cnt[3] .operation_mode = "arithmetic";
defparam \led0_cnt[3] .output_mode = "reg_only";
defparam \led0_cnt[3] .register_cascade_mode = "off";
defparam \led0_cnt[3] .sum_lutc_input = "cin";
defparam \led0_cnt[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N8
maxii_lcell \led0_cnt[4] (
// Equation(s):
// led0_cnt[4] = DFFEAS(led0_cnt[4] $ ((((!(!\led0_cnt[0]~43  & \led0_cnt[3]~49 ) # (\led0_cnt[0]~43  & \led0_cnt[3]~49COUT1_67 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[4]~51  = CARRY((led0_cnt[4] & ((!\led0_cnt[3]~49 ))))
// \led0_cnt[4]~51COUT1_68  = CARRY((led0_cnt[4] & ((!\led0_cnt[3]~49COUT1_67 ))))

	.clk(\clk~combout ),
	.dataa(led0_cnt[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[0]~43 ),
	.cin0(\led0_cnt[3]~49 ),
	.cin1(\led0_cnt[3]~49COUT1_67 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[4]),
	.cout(),
	.cout0(\led0_cnt[4]~51 ),
	.cout1(\led0_cnt[4]~51COUT1_68 ));
// synopsys translate_off
defparam \led0_cnt[4] .cin0_used = "true";
defparam \led0_cnt[4] .cin1_used = "true";
defparam \led0_cnt[4] .cin_used = "true";
defparam \led0_cnt[4] .lut_mask = "a50a";
defparam \led0_cnt[4] .operation_mode = "arithmetic";
defparam \led0_cnt[4] .output_mode = "reg_only";
defparam \led0_cnt[4] .register_cascade_mode = "off";
defparam \led0_cnt[4] .sum_lutc_input = "cin";
defparam \led0_cnt[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N9
maxii_lcell \led0_cnt[5] (
// Equation(s):
// led0_cnt[5] = DFFEAS((led0_cnt[5] $ (((!\led0_cnt[0]~43  & \led0_cnt[4]~51 ) # (\led0_cnt[0]~43  & \led0_cnt[4]~51COUT1_68 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[5]~53  = CARRY(((!\led0_cnt[4]~51COUT1_68 ) # (!led0_cnt[5])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[0]~43 ),
	.cin0(\led0_cnt[4]~51 ),
	.cin1(\led0_cnt[4]~51COUT1_68 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[5]),
	.cout(\led0_cnt[5]~53 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led0_cnt[5] .cin0_used = "true";
defparam \led0_cnt[5] .cin1_used = "true";
defparam \led0_cnt[5] .cin_used = "true";
defparam \led0_cnt[5] .lut_mask = "3c3f";
defparam \led0_cnt[5] .operation_mode = "arithmetic";
defparam \led0_cnt[5] .output_mode = "reg_only";
defparam \led0_cnt[5] .register_cascade_mode = "off";
defparam \led0_cnt[5] .sum_lutc_input = "cin";
defparam \led0_cnt[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N0
maxii_lcell \led0_cnt[6] (
// Equation(s):
// led0_cnt[6] = DFFEAS((led0_cnt[6] $ ((!\led0_cnt[5]~53 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[6]~55  = CARRY(((led0_cnt[6] & !\led0_cnt[5]~53 )))
// \led0_cnt[6]~55COUT1_69  = CARRY(((led0_cnt[6] & !\led0_cnt[5]~53 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[5]~53 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[6]),
	.cout(),
	.cout0(\led0_cnt[6]~55 ),
	.cout1(\led0_cnt[6]~55COUT1_69 ));
// synopsys translate_off
defparam \led0_cnt[6] .cin_used = "true";
defparam \led0_cnt[6] .lut_mask = "c30c";
defparam \led0_cnt[6] .operation_mode = "arithmetic";
defparam \led0_cnt[6] .output_mode = "reg_only";
defparam \led0_cnt[6] .register_cascade_mode = "off";
defparam \led0_cnt[6] .sum_lutc_input = "cin";
defparam \led0_cnt[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N1
maxii_lcell \led0_cnt[7] (
// Equation(s):
// led0_cnt[7] = DFFEAS((led0_cnt[7] $ (((!\led0_cnt[5]~53  & \led0_cnt[6]~55 ) # (\led0_cnt[5]~53  & \led0_cnt[6]~55COUT1_69 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[7]~57  = CARRY(((!\led0_cnt[6]~55 ) # (!led0_cnt[7])))
// \led0_cnt[7]~57COUT1_70  = CARRY(((!\led0_cnt[6]~55COUT1_69 ) # (!led0_cnt[7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[5]~53 ),
	.cin0(\led0_cnt[6]~55 ),
	.cin1(\led0_cnt[6]~55COUT1_69 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[7]),
	.cout(),
	.cout0(\led0_cnt[7]~57 ),
	.cout1(\led0_cnt[7]~57COUT1_70 ));
// synopsys translate_off
defparam \led0_cnt[7] .cin0_used = "true";
defparam \led0_cnt[7] .cin1_used = "true";
defparam \led0_cnt[7] .cin_used = "true";
defparam \led0_cnt[7] .lut_mask = "3c3f";
defparam \led0_cnt[7] .operation_mode = "arithmetic";
defparam \led0_cnt[7] .output_mode = "reg_only";
defparam \led0_cnt[7] .register_cascade_mode = "off";
defparam \led0_cnt[7] .sum_lutc_input = "cin";
defparam \led0_cnt[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N2
maxii_lcell \led0_cnt[8] (
// Equation(s):
// led0_cnt[8] = DFFEAS((led0_cnt[8] $ ((!(!\led0_cnt[5]~53  & \led0_cnt[7]~57 ) # (\led0_cnt[5]~53  & \led0_cnt[7]~57COUT1_70 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[8]~59  = CARRY(((led0_cnt[8] & !\led0_cnt[7]~57 )))
// \led0_cnt[8]~59COUT1_71  = CARRY(((led0_cnt[8] & !\led0_cnt[7]~57COUT1_70 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[5]~53 ),
	.cin0(\led0_cnt[7]~57 ),
	.cin1(\led0_cnt[7]~57COUT1_70 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[8]),
	.cout(),
	.cout0(\led0_cnt[8]~59 ),
	.cout1(\led0_cnt[8]~59COUT1_71 ));
// synopsys translate_off
defparam \led0_cnt[8] .cin0_used = "true";
defparam \led0_cnt[8] .cin1_used = "true";
defparam \led0_cnt[8] .cin_used = "true";
defparam \led0_cnt[8] .lut_mask = "c30c";
defparam \led0_cnt[8] .operation_mode = "arithmetic";
defparam \led0_cnt[8] .output_mode = "reg_only";
defparam \led0_cnt[8] .register_cascade_mode = "off";
defparam \led0_cnt[8] .sum_lutc_input = "cin";
defparam \led0_cnt[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N3
maxii_lcell \led0_cnt[9] (
// Equation(s):
// led0_cnt[9] = DFFEAS(led0_cnt[9] $ (((((!\led0_cnt[5]~53  & \led0_cnt[8]~59 ) # (\led0_cnt[5]~53  & \led0_cnt[8]~59COUT1_71 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[9]~61  = CARRY(((!\led0_cnt[8]~59 )) # (!led0_cnt[9]))
// \led0_cnt[9]~61COUT1_72  = CARRY(((!\led0_cnt[8]~59COUT1_71 )) # (!led0_cnt[9]))

	.clk(\clk~combout ),
	.dataa(led0_cnt[9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[5]~53 ),
	.cin0(\led0_cnt[8]~59 ),
	.cin1(\led0_cnt[8]~59COUT1_71 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[9]),
	.cout(),
	.cout0(\led0_cnt[9]~61 ),
	.cout1(\led0_cnt[9]~61COUT1_72 ));
// synopsys translate_off
defparam \led0_cnt[9] .cin0_used = "true";
defparam \led0_cnt[9] .cin1_used = "true";
defparam \led0_cnt[9] .cin_used = "true";
defparam \led0_cnt[9] .lut_mask = "5a5f";
defparam \led0_cnt[9] .operation_mode = "arithmetic";
defparam \led0_cnt[9] .output_mode = "reg_only";
defparam \led0_cnt[9] .register_cascade_mode = "off";
defparam \led0_cnt[9] .sum_lutc_input = "cin";
defparam \led0_cnt[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N4
maxii_lcell \led0_cnt[10] (
// Equation(s):
// led0_cnt[10] = DFFEAS(led0_cnt[10] $ ((((!(!\led0_cnt[5]~53  & \led0_cnt[9]~61 ) # (\led0_cnt[5]~53  & \led0_cnt[9]~61COUT1_72 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[10]~63  = CARRY((led0_cnt[10] & ((!\led0_cnt[9]~61COUT1_72 ))))

	.clk(\clk~combout ),
	.dataa(led0_cnt[10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[5]~53 ),
	.cin0(\led0_cnt[9]~61 ),
	.cin1(\led0_cnt[9]~61COUT1_72 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[10]),
	.cout(\led0_cnt[10]~63 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led0_cnt[10] .cin0_used = "true";
defparam \led0_cnt[10] .cin1_used = "true";
defparam \led0_cnt[10] .cin_used = "true";
defparam \led0_cnt[10] .lut_mask = "a50a";
defparam \led0_cnt[10] .operation_mode = "arithmetic";
defparam \led0_cnt[10] .output_mode = "reg_only";
defparam \led0_cnt[10] .register_cascade_mode = "off";
defparam \led0_cnt[10] .sum_lutc_input = "cin";
defparam \led0_cnt[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N5
maxii_lcell \led0_cnt[11] (
// Equation(s):
// led0_cnt[11] = DFFEAS(led0_cnt[11] $ ((((\led0_cnt[10]~63 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[11]~21  = CARRY(((!\led0_cnt[10]~63 )) # (!led0_cnt[11]))
// \led0_cnt[11]~21COUT1_73  = CARRY(((!\led0_cnt[10]~63 )) # (!led0_cnt[11]))

	.clk(\clk~combout ),
	.dataa(led0_cnt[11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[10]~63 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[11]),
	.cout(),
	.cout0(\led0_cnt[11]~21 ),
	.cout1(\led0_cnt[11]~21COUT1_73 ));
// synopsys translate_off
defparam \led0_cnt[11] .cin_used = "true";
defparam \led0_cnt[11] .lut_mask = "5a5f";
defparam \led0_cnt[11] .operation_mode = "arithmetic";
defparam \led0_cnt[11] .output_mode = "reg_only";
defparam \led0_cnt[11] .register_cascade_mode = "off";
defparam \led0_cnt[11] .sum_lutc_input = "cin";
defparam \led0_cnt[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N6
maxii_lcell \led0_cnt[12] (
// Equation(s):
// led0_cnt[12] = DFFEAS(led0_cnt[12] $ ((((!(!\led0_cnt[10]~63  & \led0_cnt[11]~21 ) # (\led0_cnt[10]~63  & \led0_cnt[11]~21COUT1_73 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[12]~17  = CARRY((led0_cnt[12] & ((!\led0_cnt[11]~21 ))))
// \led0_cnt[12]~17COUT1_74  = CARRY((led0_cnt[12] & ((!\led0_cnt[11]~21COUT1_73 ))))

	.clk(\clk~combout ),
	.dataa(led0_cnt[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[10]~63 ),
	.cin0(\led0_cnt[11]~21 ),
	.cin1(\led0_cnt[11]~21COUT1_73 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[12]),
	.cout(),
	.cout0(\led0_cnt[12]~17 ),
	.cout1(\led0_cnt[12]~17COUT1_74 ));
// synopsys translate_off
defparam \led0_cnt[12] .cin0_used = "true";
defparam \led0_cnt[12] .cin1_used = "true";
defparam \led0_cnt[12] .cin_used = "true";
defparam \led0_cnt[12] .lut_mask = "a50a";
defparam \led0_cnt[12] .operation_mode = "arithmetic";
defparam \led0_cnt[12] .output_mode = "reg_only";
defparam \led0_cnt[12] .register_cascade_mode = "off";
defparam \led0_cnt[12] .sum_lutc_input = "cin";
defparam \led0_cnt[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N7
maxii_lcell \led0_cnt[13] (
// Equation(s):
// led0_cnt[13] = DFFEAS((led0_cnt[13] $ (((!\led0_cnt[10]~63  & \led0_cnt[12]~17 ) # (\led0_cnt[10]~63  & \led0_cnt[12]~17COUT1_74 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[13]~19  = CARRY(((!\led0_cnt[12]~17 ) # (!led0_cnt[13])))
// \led0_cnt[13]~19COUT1_75  = CARRY(((!\led0_cnt[12]~17COUT1_74 ) # (!led0_cnt[13])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[13]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[10]~63 ),
	.cin0(\led0_cnt[12]~17 ),
	.cin1(\led0_cnt[12]~17COUT1_74 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[13]),
	.cout(),
	.cout0(\led0_cnt[13]~19 ),
	.cout1(\led0_cnt[13]~19COUT1_75 ));
// synopsys translate_off
defparam \led0_cnt[13] .cin0_used = "true";
defparam \led0_cnt[13] .cin1_used = "true";
defparam \led0_cnt[13] .cin_used = "true";
defparam \led0_cnt[13] .lut_mask = "3c3f";
defparam \led0_cnt[13] .operation_mode = "arithmetic";
defparam \led0_cnt[13] .output_mode = "reg_only";
defparam \led0_cnt[13] .register_cascade_mode = "off";
defparam \led0_cnt[13] .sum_lutc_input = "cin";
defparam \led0_cnt[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N8
maxii_lcell \led0_cnt[14] (
// Equation(s):
// led0_cnt[14] = DFFEAS(led0_cnt[14] $ ((((!(!\led0_cnt[10]~63  & \led0_cnt[13]~19 ) # (\led0_cnt[10]~63  & \led0_cnt[13]~19COUT1_75 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[14]~15  = CARRY((led0_cnt[14] & ((!\led0_cnt[13]~19 ))))
// \led0_cnt[14]~15COUT1_76  = CARRY((led0_cnt[14] & ((!\led0_cnt[13]~19COUT1_75 ))))

	.clk(\clk~combout ),
	.dataa(led0_cnt[14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[10]~63 ),
	.cin0(\led0_cnt[13]~19 ),
	.cin1(\led0_cnt[13]~19COUT1_75 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[14]),
	.cout(),
	.cout0(\led0_cnt[14]~15 ),
	.cout1(\led0_cnt[14]~15COUT1_76 ));
// synopsys translate_off
defparam \led0_cnt[14] .cin0_used = "true";
defparam \led0_cnt[14] .cin1_used = "true";
defparam \led0_cnt[14] .cin_used = "true";
defparam \led0_cnt[14] .lut_mask = "a50a";
defparam \led0_cnt[14] .operation_mode = "arithmetic";
defparam \led0_cnt[14] .output_mode = "reg_only";
defparam \led0_cnt[14] .register_cascade_mode = "off";
defparam \led0_cnt[14] .sum_lutc_input = "cin";
defparam \led0_cnt[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N9
maxii_lcell \led0_cnt[15] (
// Equation(s):
// led0_cnt[15] = DFFEAS((led0_cnt[15] $ (((!\led0_cnt[10]~63  & \led0_cnt[14]~15 ) # (\led0_cnt[10]~63  & \led0_cnt[14]~15COUT1_76 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[15]~13  = CARRY(((!\led0_cnt[14]~15COUT1_76 ) # (!led0_cnt[15])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[10]~63 ),
	.cin0(\led0_cnt[14]~15 ),
	.cin1(\led0_cnt[14]~15COUT1_76 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[15]),
	.cout(\led0_cnt[15]~13 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led0_cnt[15] .cin0_used = "true";
defparam \led0_cnt[15] .cin1_used = "true";
defparam \led0_cnt[15] .cin_used = "true";
defparam \led0_cnt[15] .lut_mask = "3c3f";
defparam \led0_cnt[15] .operation_mode = "arithmetic";
defparam \led0_cnt[15] .output_mode = "reg_only";
defparam \led0_cnt[15] .register_cascade_mode = "off";
defparam \led0_cnt[15] .sum_lutc_input = "cin";
defparam \led0_cnt[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N0
maxii_lcell \led0_cnt[16] (
// Equation(s):
// led0_cnt[16] = DFFEAS((led0_cnt[16] $ ((!\led0_cnt[15]~13 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[16]~9  = CARRY(((led0_cnt[16] & !\led0_cnt[15]~13 )))
// \led0_cnt[16]~9COUT1_77  = CARRY(((led0_cnt[16] & !\led0_cnt[15]~13 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[15]~13 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[16]),
	.cout(),
	.cout0(\led0_cnt[16]~9 ),
	.cout1(\led0_cnt[16]~9COUT1_77 ));
// synopsys translate_off
defparam \led0_cnt[16] .cin_used = "true";
defparam \led0_cnt[16] .lut_mask = "c30c";
defparam \led0_cnt[16] .operation_mode = "arithmetic";
defparam \led0_cnt[16] .output_mode = "reg_only";
defparam \led0_cnt[16] .register_cascade_mode = "off";
defparam \led0_cnt[16] .sum_lutc_input = "cin";
defparam \led0_cnt[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N1
maxii_lcell \led0_cnt[17] (
// Equation(s):
// led0_cnt[17] = DFFEAS((led0_cnt[17] $ (((!\led0_cnt[15]~13  & \led0_cnt[16]~9 ) # (\led0_cnt[15]~13  & \led0_cnt[16]~9COUT1_77 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[17]~11  = CARRY(((!\led0_cnt[16]~9 ) # (!led0_cnt[17])))
// \led0_cnt[17]~11COUT1_78  = CARRY(((!\led0_cnt[16]~9COUT1_77 ) # (!led0_cnt[17])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[15]~13 ),
	.cin0(\led0_cnt[16]~9 ),
	.cin1(\led0_cnt[16]~9COUT1_77 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[17]),
	.cout(),
	.cout0(\led0_cnt[17]~11 ),
	.cout1(\led0_cnt[17]~11COUT1_78 ));
// synopsys translate_off
defparam \led0_cnt[17] .cin0_used = "true";
defparam \led0_cnt[17] .cin1_used = "true";
defparam \led0_cnt[17] .cin_used = "true";
defparam \led0_cnt[17] .lut_mask = "3c3f";
defparam \led0_cnt[17] .operation_mode = "arithmetic";
defparam \led0_cnt[17] .output_mode = "reg_only";
defparam \led0_cnt[17] .register_cascade_mode = "off";
defparam \led0_cnt[17] .sum_lutc_input = "cin";
defparam \led0_cnt[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N2
maxii_lcell \led0_cnt[18] (
// Equation(s):
// led0_cnt[18] = DFFEAS((led0_cnt[18] $ ((!(!\led0_cnt[15]~13  & \led0_cnt[17]~11 ) # (\led0_cnt[15]~13  & \led0_cnt[17]~11COUT1_78 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[18]~1  = CARRY(((led0_cnt[18] & !\led0_cnt[17]~11 )))
// \led0_cnt[18]~1COUT1_79  = CARRY(((led0_cnt[18] & !\led0_cnt[17]~11COUT1_78 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[18]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[15]~13 ),
	.cin0(\led0_cnt[17]~11 ),
	.cin1(\led0_cnt[17]~11COUT1_78 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[18]),
	.cout(),
	.cout0(\led0_cnt[18]~1 ),
	.cout1(\led0_cnt[18]~1COUT1_79 ));
// synopsys translate_off
defparam \led0_cnt[18] .cin0_used = "true";
defparam \led0_cnt[18] .cin1_used = "true";
defparam \led0_cnt[18] .cin_used = "true";
defparam \led0_cnt[18] .lut_mask = "c30c";
defparam \led0_cnt[18] .operation_mode = "arithmetic";
defparam \led0_cnt[18] .output_mode = "reg_only";
defparam \led0_cnt[18] .register_cascade_mode = "off";
defparam \led0_cnt[18] .sum_lutc_input = "cin";
defparam \led0_cnt[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N3
maxii_lcell \led0_cnt[19] (
// Equation(s):
// led0_cnt[19] = DFFEAS(led0_cnt[19] $ (((((!\led0_cnt[15]~13  & \led0_cnt[18]~1 ) # (\led0_cnt[15]~13  & \led0_cnt[18]~1COUT1_79 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[19]~23  = CARRY(((!\led0_cnt[18]~1 )) # (!led0_cnt[19]))
// \led0_cnt[19]~23COUT1_80  = CARRY(((!\led0_cnt[18]~1COUT1_79 )) # (!led0_cnt[19]))

	.clk(\clk~combout ),
	.dataa(led0_cnt[19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[15]~13 ),
	.cin0(\led0_cnt[18]~1 ),
	.cin1(\led0_cnt[18]~1COUT1_79 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[19]),
	.cout(),
	.cout0(\led0_cnt[19]~23 ),
	.cout1(\led0_cnt[19]~23COUT1_80 ));
// synopsys translate_off
defparam \led0_cnt[19] .cin0_used = "true";
defparam \led0_cnt[19] .cin1_used = "true";
defparam \led0_cnt[19] .cin_used = "true";
defparam \led0_cnt[19] .lut_mask = "5a5f";
defparam \led0_cnt[19] .operation_mode = "arithmetic";
defparam \led0_cnt[19] .output_mode = "reg_only";
defparam \led0_cnt[19] .register_cascade_mode = "off";
defparam \led0_cnt[19] .sum_lutc_input = "cin";
defparam \led0_cnt[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N4
maxii_lcell \led0_cnt[20] (
// Equation(s):
// led0_cnt[20] = DFFEAS(led0_cnt[20] $ ((((!(!\led0_cnt[15]~13  & \led0_cnt[19]~23 ) # (\led0_cnt[15]~13  & \led0_cnt[19]~23COUT1_80 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[20]~25  = CARRY((led0_cnt[20] & ((!\led0_cnt[19]~23COUT1_80 ))))

	.clk(\clk~combout ),
	.dataa(led0_cnt[20]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[15]~13 ),
	.cin0(\led0_cnt[19]~23 ),
	.cin1(\led0_cnt[19]~23COUT1_80 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[20]),
	.cout(\led0_cnt[20]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led0_cnt[20] .cin0_used = "true";
defparam \led0_cnt[20] .cin1_used = "true";
defparam \led0_cnt[20] .cin_used = "true";
defparam \led0_cnt[20] .lut_mask = "a50a";
defparam \led0_cnt[20] .operation_mode = "arithmetic";
defparam \led0_cnt[20] .output_mode = "reg_only";
defparam \led0_cnt[20] .register_cascade_mode = "off";
defparam \led0_cnt[20] .sum_lutc_input = "cin";
defparam \led0_cnt[20] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N5
maxii_lcell \led0_cnt[21] (
// Equation(s):
// led0_cnt[21] = DFFEAS(led0_cnt[21] $ ((((\led0_cnt[20]~25 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[21]~27  = CARRY(((!\led0_cnt[20]~25 )) # (!led0_cnt[21]))
// \led0_cnt[21]~27COUT1_81  = CARRY(((!\led0_cnt[20]~25 )) # (!led0_cnt[21]))

	.clk(\clk~combout ),
	.dataa(led0_cnt[21]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[20]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[21]),
	.cout(),
	.cout0(\led0_cnt[21]~27 ),
	.cout1(\led0_cnt[21]~27COUT1_81 ));
// synopsys translate_off
defparam \led0_cnt[21] .cin_used = "true";
defparam \led0_cnt[21] .lut_mask = "5a5f";
defparam \led0_cnt[21] .operation_mode = "arithmetic";
defparam \led0_cnt[21] .output_mode = "reg_only";
defparam \led0_cnt[21] .register_cascade_mode = "off";
defparam \led0_cnt[21] .sum_lutc_input = "cin";
defparam \led0_cnt[21] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N6
maxii_lcell \led0_cnt[22] (
// Equation(s):
// led0_cnt[22] = DFFEAS(led0_cnt[22] $ ((((!(!\led0_cnt[20]~25  & \led0_cnt[21]~27 ) # (\led0_cnt[20]~25  & \led0_cnt[21]~27COUT1_81 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[22]~3  = CARRY((led0_cnt[22] & ((!\led0_cnt[21]~27 ))))
// \led0_cnt[22]~3COUT1_82  = CARRY((led0_cnt[22] & ((!\led0_cnt[21]~27COUT1_81 ))))

	.clk(\clk~combout ),
	.dataa(led0_cnt[22]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[20]~25 ),
	.cin0(\led0_cnt[21]~27 ),
	.cin1(\led0_cnt[21]~27COUT1_81 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[22]),
	.cout(),
	.cout0(\led0_cnt[22]~3 ),
	.cout1(\led0_cnt[22]~3COUT1_82 ));
// synopsys translate_off
defparam \led0_cnt[22] .cin0_used = "true";
defparam \led0_cnt[22] .cin1_used = "true";
defparam \led0_cnt[22] .cin_used = "true";
defparam \led0_cnt[22] .lut_mask = "a50a";
defparam \led0_cnt[22] .operation_mode = "arithmetic";
defparam \led0_cnt[22] .output_mode = "reg_only";
defparam \led0_cnt[22] .register_cascade_mode = "off";
defparam \led0_cnt[22] .sum_lutc_input = "cin";
defparam \led0_cnt[22] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N7
maxii_lcell \led0_cnt[23] (
// Equation(s):
// led0_cnt[23] = DFFEAS((led0_cnt[23] $ (((!\led0_cnt[20]~25  & \led0_cnt[22]~3 ) # (\led0_cnt[20]~25  & \led0_cnt[22]~3COUT1_82 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[23]~5  = CARRY(((!\led0_cnt[22]~3 ) # (!led0_cnt[23])))
// \led0_cnt[23]~5COUT1_83  = CARRY(((!\led0_cnt[22]~3COUT1_82 ) # (!led0_cnt[23])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[23]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[20]~25 ),
	.cin0(\led0_cnt[22]~3 ),
	.cin1(\led0_cnt[22]~3COUT1_82 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[23]),
	.cout(),
	.cout0(\led0_cnt[23]~5 ),
	.cout1(\led0_cnt[23]~5COUT1_83 ));
// synopsys translate_off
defparam \led0_cnt[23] .cin0_used = "true";
defparam \led0_cnt[23] .cin1_used = "true";
defparam \led0_cnt[23] .cin_used = "true";
defparam \led0_cnt[23] .lut_mask = "3c3f";
defparam \led0_cnt[23] .operation_mode = "arithmetic";
defparam \led0_cnt[23] .output_mode = "reg_only";
defparam \led0_cnt[23] .register_cascade_mode = "off";
defparam \led0_cnt[23] .sum_lutc_input = "cin";
defparam \led0_cnt[23] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N8
maxii_lcell \led0_cnt[24] (
// Equation(s):
// led0_cnt[24] = DFFEAS(led0_cnt[24] $ ((((!(!\led0_cnt[20]~25  & \led0_cnt[23]~5 ) # (\led0_cnt[20]~25  & \led0_cnt[23]~5COUT1_83 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[24]~31  = CARRY((led0_cnt[24] & ((!\led0_cnt[23]~5 ))))
// \led0_cnt[24]~31COUT1_84  = CARRY((led0_cnt[24] & ((!\led0_cnt[23]~5COUT1_83 ))))

	.clk(\clk~combout ),
	.dataa(led0_cnt[24]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[20]~25 ),
	.cin0(\led0_cnt[23]~5 ),
	.cin1(\led0_cnt[23]~5COUT1_83 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[24]),
	.cout(),
	.cout0(\led0_cnt[24]~31 ),
	.cout1(\led0_cnt[24]~31COUT1_84 ));
// synopsys translate_off
defparam \led0_cnt[24] .cin0_used = "true";
defparam \led0_cnt[24] .cin1_used = "true";
defparam \led0_cnt[24] .cin_used = "true";
defparam \led0_cnt[24] .lut_mask = "a50a";
defparam \led0_cnt[24] .operation_mode = "arithmetic";
defparam \led0_cnt[24] .output_mode = "reg_only";
defparam \led0_cnt[24] .register_cascade_mode = "off";
defparam \led0_cnt[24] .sum_lutc_input = "cin";
defparam \led0_cnt[24] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N9
maxii_lcell \led0_cnt[25] (
// Equation(s):
// led0_cnt[25] = DFFEAS((led0_cnt[25] $ (((!\led0_cnt[20]~25  & \led0_cnt[24]~31 ) # (\led0_cnt[20]~25  & \led0_cnt[24]~31COUT1_84 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[25]~33  = CARRY(((!\led0_cnt[24]~31COUT1_84 ) # (!led0_cnt[25])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[25]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[20]~25 ),
	.cin0(\led0_cnt[24]~31 ),
	.cin1(\led0_cnt[24]~31COUT1_84 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[25]),
	.cout(\led0_cnt[25]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led0_cnt[25] .cin0_used = "true";
defparam \led0_cnt[25] .cin1_used = "true";
defparam \led0_cnt[25] .cin_used = "true";
defparam \led0_cnt[25] .lut_mask = "3c3f";
defparam \led0_cnt[25] .operation_mode = "arithmetic";
defparam \led0_cnt[25] .output_mode = "reg_only";
defparam \led0_cnt[25] .register_cascade_mode = "off";
defparam \led0_cnt[25] .sum_lutc_input = "cin";
defparam \led0_cnt[25] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N0
maxii_lcell \led0_cnt[26] (
// Equation(s):
// led0_cnt[26] = DFFEAS((led0_cnt[26] $ ((!\led0_cnt[25]~33 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[26]~7  = CARRY(((led0_cnt[26] & !\led0_cnt[25]~33 )))
// \led0_cnt[26]~7COUT1_85  = CARRY(((led0_cnt[26] & !\led0_cnt[25]~33 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[26]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[25]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[26]),
	.cout(),
	.cout0(\led0_cnt[26]~7 ),
	.cout1(\led0_cnt[26]~7COUT1_85 ));
// synopsys translate_off
defparam \led0_cnt[26] .cin_used = "true";
defparam \led0_cnt[26] .lut_mask = "c30c";
defparam \led0_cnt[26] .operation_mode = "arithmetic";
defparam \led0_cnt[26] .output_mode = "reg_only";
defparam \led0_cnt[26] .register_cascade_mode = "off";
defparam \led0_cnt[26] .sum_lutc_input = "cin";
defparam \led0_cnt[26] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y3_N4
maxii_lcell \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (led0_cnt[22] & (led0_cnt[23] & (led0_cnt[26] & led0_cnt[18])))

	.clk(gnd),
	.dataa(led0_cnt[22]),
	.datab(led0_cnt[23]),
	.datac(led0_cnt[26]),
	.datad(led0_cnt[18]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = "8000";
defparam \LessThan0~0 .operation_mode = "normal";
defparam \LessThan0~0 .output_mode = "comb_only";
defparam \LessThan0~0 .register_cascade_mode = "off";
defparam \LessThan0~0 .sum_lutc_input = "datac";
defparam \LessThan0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N1
maxii_lcell \led0_cnt[27] (
// Equation(s):
// led0_cnt[27] = DFFEAS((led0_cnt[27] $ (((!\led0_cnt[25]~33  & \led0_cnt[26]~7 ) # (\led0_cnt[25]~33  & \led0_cnt[26]~7COUT1_85 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[27]~29  = CARRY(((!\led0_cnt[26]~7 ) # (!led0_cnt[27])))
// \led0_cnt[27]~29COUT1_86  = CARRY(((!\led0_cnt[26]~7COUT1_85 ) # (!led0_cnt[27])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[27]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[25]~33 ),
	.cin0(\led0_cnt[26]~7 ),
	.cin1(\led0_cnt[26]~7COUT1_85 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[27]),
	.cout(),
	.cout0(\led0_cnt[27]~29 ),
	.cout1(\led0_cnt[27]~29COUT1_86 ));
// synopsys translate_off
defparam \led0_cnt[27] .cin0_used = "true";
defparam \led0_cnt[27] .cin1_used = "true";
defparam \led0_cnt[27] .cin_used = "true";
defparam \led0_cnt[27] .lut_mask = "3c3f";
defparam \led0_cnt[27] .operation_mode = "arithmetic";
defparam \led0_cnt[27] .output_mode = "reg_only";
defparam \led0_cnt[27] .register_cascade_mode = "off";
defparam \led0_cnt[27] .sum_lutc_input = "cin";
defparam \led0_cnt[27] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N2
maxii_lcell \led0_cnt[28] (
// Equation(s):
// led0_cnt[28] = DFFEAS((led0_cnt[28] $ ((!(!\led0_cnt[25]~33  & \led0_cnt[27]~29 ) # (\led0_cnt[25]~33  & \led0_cnt[27]~29COUT1_86 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[28]~35  = CARRY(((led0_cnt[28] & !\led0_cnt[27]~29 )))
// \led0_cnt[28]~35COUT1_87  = CARRY(((led0_cnt[28] & !\led0_cnt[27]~29COUT1_86 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led0_cnt[28]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[25]~33 ),
	.cin0(\led0_cnt[27]~29 ),
	.cin1(\led0_cnt[27]~29COUT1_86 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[28]),
	.cout(),
	.cout0(\led0_cnt[28]~35 ),
	.cout1(\led0_cnt[28]~35COUT1_87 ));
// synopsys translate_off
defparam \led0_cnt[28] .cin0_used = "true";
defparam \led0_cnt[28] .cin1_used = "true";
defparam \led0_cnt[28] .cin_used = "true";
defparam \led0_cnt[28] .lut_mask = "c30c";
defparam \led0_cnt[28] .operation_mode = "arithmetic";
defparam \led0_cnt[28] .output_mode = "reg_only";
defparam \led0_cnt[28] .register_cascade_mode = "off";
defparam \led0_cnt[28] .sum_lutc_input = "cin";
defparam \led0_cnt[28] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N3
maxii_lcell \led0_cnt[29] (
// Equation(s):
// led0_cnt[29] = DFFEAS(led0_cnt[29] $ (((((!\led0_cnt[25]~33  & \led0_cnt[28]~35 ) # (\led0_cnt[25]~33  & \led0_cnt[28]~35COUT1_87 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[29]~37  = CARRY(((!\led0_cnt[28]~35 )) # (!led0_cnt[29]))
// \led0_cnt[29]~37COUT1_88  = CARRY(((!\led0_cnt[28]~35COUT1_87 )) # (!led0_cnt[29]))

	.clk(\clk~combout ),
	.dataa(led0_cnt[29]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[25]~33 ),
	.cin0(\led0_cnt[28]~35 ),
	.cin1(\led0_cnt[28]~35COUT1_87 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[29]),
	.cout(),
	.cout0(\led0_cnt[29]~37 ),
	.cout1(\led0_cnt[29]~37COUT1_88 ));
// synopsys translate_off
defparam \led0_cnt[29] .cin0_used = "true";
defparam \led0_cnt[29] .cin1_used = "true";
defparam \led0_cnt[29] .cin_used = "true";
defparam \led0_cnt[29] .lut_mask = "5a5f";
defparam \led0_cnt[29] .operation_mode = "arithmetic";
defparam \led0_cnt[29] .output_mode = "reg_only";
defparam \led0_cnt[29] .register_cascade_mode = "off";
defparam \led0_cnt[29] .sum_lutc_input = "cin";
defparam \led0_cnt[29] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N4
maxii_lcell \led0_cnt[30] (
// Equation(s):
// led0_cnt[30] = DFFEAS(led0_cnt[30] $ ((((!(!\led0_cnt[25]~33  & \led0_cnt[29]~37 ) # (\led0_cnt[25]~33  & \led0_cnt[29]~37COUT1_88 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )
// \led0_cnt[30]~39  = CARRY((led0_cnt[30] & ((!\led0_cnt[29]~37COUT1_88 ))))

	.clk(\clk~combout ),
	.dataa(led0_cnt[30]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[25]~33 ),
	.cin0(\led0_cnt[29]~37 ),
	.cin1(\led0_cnt[29]~37COUT1_88 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[30]),
	.cout(\led0_cnt[30]~39 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led0_cnt[30] .cin0_used = "true";
defparam \led0_cnt[30] .cin1_used = "true";
defparam \led0_cnt[30] .cin_used = "true";
defparam \led0_cnt[30] .lut_mask = "a50a";
defparam \led0_cnt[30] .operation_mode = "arithmetic";
defparam \led0_cnt[30] .output_mode = "reg_only";
defparam \led0_cnt[30] .register_cascade_mode = "off";
defparam \led0_cnt[30] .sum_lutc_input = "cin";
defparam \led0_cnt[30] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N5
maxii_lcell \led0_cnt[31] (
// Equation(s):
// led0_cnt[31] = DFFEAS(led0_cnt[31] $ ((((\led0_cnt[30]~39 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan0~13_combout , )

	.clk(\clk~combout ),
	.dataa(led0_cnt[31]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan0~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led0_cnt[30]~39 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led0_cnt[31]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led0_cnt[31] .cin_used = "true";
defparam \led0_cnt[31] .lut_mask = "5a5a";
defparam \led0_cnt[31] .operation_mode = "normal";
defparam \led0_cnt[31] .output_mode = "reg_only";
defparam \led0_cnt[31] .register_cascade_mode = "off";
defparam \led0_cnt[31] .sum_lutc_input = "cin";
defparam \led0_cnt[31] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N6
maxii_lcell \LessThan0~7 (
// Equation(s):
// \LessThan0~7_combout  = (led0_cnt[30]) # ((led0_cnt[28]) # ((led0_cnt[31]) # (led0_cnt[29])))

	.clk(gnd),
	.dataa(led0_cnt[30]),
	.datab(led0_cnt[28]),
	.datac(led0_cnt[31]),
	.datad(led0_cnt[29]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~7 .lut_mask = "fffe";
defparam \LessThan0~7 .operation_mode = "normal";
defparam \LessThan0~7 .output_mode = "comb_only";
defparam \LessThan0~7 .register_cascade_mode = "off";
defparam \LessThan0~7 .sum_lutc_input = "datac";
defparam \LessThan0~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N3
maxii_lcell \LessThan0~4 (
// Equation(s):
// \LessThan0~4_combout  = ((led0_cnt[23] & (led0_cnt[26] & led0_cnt[22])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led0_cnt[23]),
	.datac(led0_cnt[26]),
	.datad(led0_cnt[22]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~4 .lut_mask = "c000";
defparam \LessThan0~4 .operation_mode = "normal";
defparam \LessThan0~4 .output_mode = "comb_only";
defparam \LessThan0~4 .register_cascade_mode = "off";
defparam \LessThan0~4 .sum_lutc_input = "datac";
defparam \LessThan0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N7
maxii_lcell \LessThan0~5 (
// Equation(s):
// \LessThan0~5_combout  = (\LessThan0~4_combout  & ((led0_cnt[21]) # ((led0_cnt[20]) # (led0_cnt[19]))))

	.clk(gnd),
	.dataa(led0_cnt[21]),
	.datab(led0_cnt[20]),
	.datac(led0_cnt[19]),
	.datad(\LessThan0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~5 .lut_mask = "fe00";
defparam \LessThan0~5 .operation_mode = "normal";
defparam \LessThan0~5 .output_mode = "comb_only";
defparam \LessThan0~5 .register_cascade_mode = "off";
defparam \LessThan0~5 .sum_lutc_input = "datac";
defparam \LessThan0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N9
maxii_lcell \LessThan0~6 (
// Equation(s):
// \LessThan0~6_combout  = (led0_cnt[27]) # ((led0_cnt[26] & ((led0_cnt[25]) # (led0_cnt[24]))))

	.clk(gnd),
	.dataa(led0_cnt[25]),
	.datab(led0_cnt[27]),
	.datac(led0_cnt[26]),
	.datad(led0_cnt[24]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~6 .lut_mask = "fcec";
defparam \LessThan0~6 .operation_mode = "normal";
defparam \LessThan0~6 .output_mode = "comb_only";
defparam \LessThan0~6 .register_cascade_mode = "off";
defparam \LessThan0~6 .sum_lutc_input = "datac";
defparam \LessThan0~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N3
maxii_lcell \LessThan0~2 (
// Equation(s):
// \LessThan0~2_combout  = (led0_cnt[14]) # ((led0_cnt[13] & (led0_cnt[12] & led0_cnt[11])))

	.clk(gnd),
	.dataa(led0_cnt[13]),
	.datab(led0_cnt[14]),
	.datac(led0_cnt[12]),
	.datad(led0_cnt[11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~2 .lut_mask = "eccc";
defparam \LessThan0~2 .operation_mode = "normal";
defparam \LessThan0~2 .output_mode = "comb_only";
defparam \LessThan0~2 .register_cascade_mode = "off";
defparam \LessThan0~2 .sum_lutc_input = "datac";
defparam \LessThan0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N8
maxii_lcell \LessThan0~1 (
// Equation(s):
// \LessThan0~1_combout  = (((led0_cnt[16]) # (led0_cnt[17])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(led0_cnt[16]),
	.datad(led0_cnt[17]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = "fff0";
defparam \LessThan0~1 .operation_mode = "normal";
defparam \LessThan0~1 .output_mode = "comb_only";
defparam \LessThan0~1 .register_cascade_mode = "off";
defparam \LessThan0~1 .sum_lutc_input = "datac";
defparam \LessThan0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N5
maxii_lcell \LessThan0~3 (
// Equation(s):
// \LessThan0~3_combout  = (\LessThan0~0_combout  & ((\LessThan0~1_combout ) # ((\LessThan0~2_combout  & led0_cnt[15]))))

	.clk(gnd),
	.dataa(\LessThan0~2_combout ),
	.datab(led0_cnt[15]),
	.datac(\LessThan0~0_combout ),
	.datad(\LessThan0~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~3 .lut_mask = "f080";
defparam \LessThan0~3 .operation_mode = "normal";
defparam \LessThan0~3 .output_mode = "comb_only";
defparam \LessThan0~3 .register_cascade_mode = "off";
defparam \LessThan0~3 .sum_lutc_input = "datac";
defparam \LessThan0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N6
maxii_lcell \LessThan0~8 (
// Equation(s):
// \LessThan0~8_combout  = (\LessThan0~7_combout ) # ((\LessThan0~5_combout ) # ((\LessThan0~6_combout ) # (\LessThan0~3_combout )))

	.clk(gnd),
	.dataa(\LessThan0~7_combout ),
	.datab(\LessThan0~5_combout ),
	.datac(\LessThan0~6_combout ),
	.datad(\LessThan0~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~8 .lut_mask = "fffe";
defparam \LessThan0~8 .operation_mode = "normal";
defparam \LessThan0~8 .output_mode = "comb_only";
defparam \LessThan0~8 .register_cascade_mode = "off";
defparam \LessThan0~8 .sum_lutc_input = "datac";
defparam \LessThan0~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N2
maxii_lcell \LessThan0~9 (
// Equation(s):
// \LessThan0~9_combout  = (led0_cnt[1]) # ((led0_cnt[3]) # ((led0_cnt[2]) # (led0_cnt[0])))

	.clk(gnd),
	.dataa(led0_cnt[1]),
	.datab(led0_cnt[3]),
	.datac(led0_cnt[2]),
	.datad(led0_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~9 .lut_mask = "fffe";
defparam \LessThan0~9 .operation_mode = "normal";
defparam \LessThan0~9 .output_mode = "comb_only";
defparam \LessThan0~9 .register_cascade_mode = "off";
defparam \LessThan0~9 .sum_lutc_input = "datac";
defparam \LessThan0~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N1
maxii_lcell \LessThan0~10 (
// Equation(s):
// \LessThan0~10_combout  = (led0_cnt[4]) # ((led0_cnt[5]) # ((led0_cnt[6]) # (led0_cnt[7])))

	.clk(gnd),
	.dataa(led0_cnt[4]),
	.datab(led0_cnt[5]),
	.datac(led0_cnt[6]),
	.datad(led0_cnt[7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~10 .lut_mask = "fffe";
defparam \LessThan0~10 .operation_mode = "normal";
defparam \LessThan0~10 .output_mode = "comb_only";
defparam \LessThan0~10 .register_cascade_mode = "off";
defparam \LessThan0~10 .sum_lutc_input = "datac";
defparam \LessThan0~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N2
maxii_lcell \LessThan0~11 (
// Equation(s):
// \LessThan0~11_combout  = (led0_cnt[9]) # ((led0_cnt[8]) # ((\LessThan0~9_combout ) # (\LessThan0~10_combout )))

	.clk(gnd),
	.dataa(led0_cnt[9]),
	.datab(led0_cnt[8]),
	.datac(\LessThan0~9_combout ),
	.datad(\LessThan0~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~11 .lut_mask = "fffe";
defparam \LessThan0~11 .operation_mode = "normal";
defparam \LessThan0~11 .output_mode = "comb_only";
defparam \LessThan0~11 .register_cascade_mode = "off";
defparam \LessThan0~11 .sum_lutc_input = "datac";
defparam \LessThan0~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N0
maxii_lcell \LessThan0~12 (
// Equation(s):
// \LessThan0~12_combout  = (led0_cnt[12] & (led0_cnt[13] & (led0_cnt[10] & \LessThan0~11_combout )))

	.clk(gnd),
	.dataa(led0_cnt[12]),
	.datab(led0_cnt[13]),
	.datac(led0_cnt[10]),
	.datad(\LessThan0~11_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~12 .lut_mask = "8000";
defparam \LessThan0~12 .operation_mode = "normal";
defparam \LessThan0~12 .output_mode = "comb_only";
defparam \LessThan0~12 .register_cascade_mode = "off";
defparam \LessThan0~12 .sum_lutc_input = "datac";
defparam \LessThan0~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N1
maxii_lcell \LessThan0~13 (
// Equation(s):
// \LessThan0~13_combout  = (\LessThan0~8_combout ) # ((\LessThan0~0_combout  & (led0_cnt[15] & \LessThan0~12_combout )))

	.clk(gnd),
	.dataa(\LessThan0~0_combout ),
	.datab(led0_cnt[15]),
	.datac(\LessThan0~8_combout ),
	.datad(\LessThan0~12_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~13 .lut_mask = "f8f0";
defparam \LessThan0~13 .operation_mode = "normal";
defparam \LessThan0~13 .output_mode = "comb_only";
defparam \LessThan0~13 .register_cascade_mode = "off";
defparam \LessThan0~13 .sum_lutc_input = "datac";
defparam \LessThan0~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N9
maxii_lcell led0_status(
// Equation(s):
// \led0_status~regout  = DFFEAS((\led0_status~regout  $ (((\LessThan0~13_combout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\led0_status~regout ),
	.datac(vcc),
	.datad(\LessThan0~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\led0_status~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam led0_status.lut_mask = "33cc";
defparam led0_status.operation_mode = "normal";
defparam led0_status.output_mode = "reg_only";
defparam led0_status.register_cascade_mode = "off";
defparam led0_status.sum_lutc_input = "datac";
defparam led0_status.synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N4
maxii_lcell \led1_cnt[0] (
// Equation(s):
// led1_cnt[0] = DFFEAS((!led1_cnt[0]), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[0]~5  = CARRY((led1_cnt[0]))

	.clk(\clk~combout ),
	.dataa(led1_cnt[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[0]),
	.cout(\led1_cnt[0]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led1_cnt[0] .lut_mask = "55aa";
defparam \led1_cnt[0] .operation_mode = "arithmetic";
defparam \led1_cnt[0] .output_mode = "reg_only";
defparam \led1_cnt[0] .register_cascade_mode = "off";
defparam \led1_cnt[0] .sum_lutc_input = "datac";
defparam \led1_cnt[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N5
maxii_lcell \led1_cnt[1] (
// Equation(s):
// led1_cnt[1] = DFFEAS(led1_cnt[1] $ ((((\led1_cnt[0]~5 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[1]~7  = CARRY(((!\led1_cnt[0]~5 )) # (!led1_cnt[1]))
// \led1_cnt[1]~7COUT1_65  = CARRY(((!\led1_cnt[0]~5 )) # (!led1_cnt[1]))

	.clk(\clk~combout ),
	.dataa(led1_cnt[1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[0]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[1]),
	.cout(),
	.cout0(\led1_cnt[1]~7 ),
	.cout1(\led1_cnt[1]~7COUT1_65 ));
// synopsys translate_off
defparam \led1_cnt[1] .cin_used = "true";
defparam \led1_cnt[1] .lut_mask = "5a5f";
defparam \led1_cnt[1] .operation_mode = "arithmetic";
defparam \led1_cnt[1] .output_mode = "reg_only";
defparam \led1_cnt[1] .register_cascade_mode = "off";
defparam \led1_cnt[1] .sum_lutc_input = "cin";
defparam \led1_cnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N6
maxii_lcell \led1_cnt[2] (
// Equation(s):
// led1_cnt[2] = DFFEAS(led1_cnt[2] $ ((((!(!\led1_cnt[0]~5  & \led1_cnt[1]~7 ) # (\led1_cnt[0]~5  & \led1_cnt[1]~7COUT1_65 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[2]~9  = CARRY((led1_cnt[2] & ((!\led1_cnt[1]~7 ))))
// \led1_cnt[2]~9COUT1_66  = CARRY((led1_cnt[2] & ((!\led1_cnt[1]~7COUT1_65 ))))

	.clk(\clk~combout ),
	.dataa(led1_cnt[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[0]~5 ),
	.cin0(\led1_cnt[1]~7 ),
	.cin1(\led1_cnt[1]~7COUT1_65 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[2]),
	.cout(),
	.cout0(\led1_cnt[2]~9 ),
	.cout1(\led1_cnt[2]~9COUT1_66 ));
// synopsys translate_off
defparam \led1_cnt[2] .cin0_used = "true";
defparam \led1_cnt[2] .cin1_used = "true";
defparam \led1_cnt[2] .cin_used = "true";
defparam \led1_cnt[2] .lut_mask = "a50a";
defparam \led1_cnt[2] .operation_mode = "arithmetic";
defparam \led1_cnt[2] .output_mode = "reg_only";
defparam \led1_cnt[2] .register_cascade_mode = "off";
defparam \led1_cnt[2] .sum_lutc_input = "cin";
defparam \led1_cnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N7
maxii_lcell \led1_cnt[3] (
// Equation(s):
// led1_cnt[3] = DFFEAS((led1_cnt[3] $ (((!\led1_cnt[0]~5  & \led1_cnt[2]~9 ) # (\led1_cnt[0]~5  & \led1_cnt[2]~9COUT1_66 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[3]~11  = CARRY(((!\led1_cnt[2]~9 ) # (!led1_cnt[3])))
// \led1_cnt[3]~11COUT1_67  = CARRY(((!\led1_cnt[2]~9COUT1_66 ) # (!led1_cnt[3])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[0]~5 ),
	.cin0(\led1_cnt[2]~9 ),
	.cin1(\led1_cnt[2]~9COUT1_66 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[3]),
	.cout(),
	.cout0(\led1_cnt[3]~11 ),
	.cout1(\led1_cnt[3]~11COUT1_67 ));
// synopsys translate_off
defparam \led1_cnt[3] .cin0_used = "true";
defparam \led1_cnt[3] .cin1_used = "true";
defparam \led1_cnt[3] .cin_used = "true";
defparam \led1_cnt[3] .lut_mask = "3c3f";
defparam \led1_cnt[3] .operation_mode = "arithmetic";
defparam \led1_cnt[3] .output_mode = "reg_only";
defparam \led1_cnt[3] .register_cascade_mode = "off";
defparam \led1_cnt[3] .sum_lutc_input = "cin";
defparam \led1_cnt[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N8
maxii_lcell \led1_cnt[4] (
// Equation(s):
// led1_cnt[4] = DFFEAS(led1_cnt[4] $ ((((!(!\led1_cnt[0]~5  & \led1_cnt[3]~11 ) # (\led1_cnt[0]~5  & \led1_cnt[3]~11COUT1_67 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[4]~15  = CARRY((led1_cnt[4] & ((!\led1_cnt[3]~11 ))))
// \led1_cnt[4]~15COUT1_68  = CARRY((led1_cnt[4] & ((!\led1_cnt[3]~11COUT1_67 ))))

	.clk(\clk~combout ),
	.dataa(led1_cnt[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[0]~5 ),
	.cin0(\led1_cnt[3]~11 ),
	.cin1(\led1_cnt[3]~11COUT1_67 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[4]),
	.cout(),
	.cout0(\led1_cnt[4]~15 ),
	.cout1(\led1_cnt[4]~15COUT1_68 ));
// synopsys translate_off
defparam \led1_cnt[4] .cin0_used = "true";
defparam \led1_cnt[4] .cin1_used = "true";
defparam \led1_cnt[4] .cin_used = "true";
defparam \led1_cnt[4] .lut_mask = "a50a";
defparam \led1_cnt[4] .operation_mode = "arithmetic";
defparam \led1_cnt[4] .output_mode = "reg_only";
defparam \led1_cnt[4] .register_cascade_mode = "off";
defparam \led1_cnt[4] .sum_lutc_input = "cin";
defparam \led1_cnt[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y4_N9
maxii_lcell \led1_cnt[5] (
// Equation(s):
// led1_cnt[5] = DFFEAS((led1_cnt[5] $ (((!\led1_cnt[0]~5  & \led1_cnt[4]~15 ) # (\led1_cnt[0]~5  & \led1_cnt[4]~15COUT1_68 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[5]~17  = CARRY(((!\led1_cnt[4]~15COUT1_68 ) # (!led1_cnt[5])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[0]~5 ),
	.cin0(\led1_cnt[4]~15 ),
	.cin1(\led1_cnt[4]~15COUT1_68 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[5]),
	.cout(\led1_cnt[5]~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led1_cnt[5] .cin0_used = "true";
defparam \led1_cnt[5] .cin1_used = "true";
defparam \led1_cnt[5] .cin_used = "true";
defparam \led1_cnt[5] .lut_mask = "3c3f";
defparam \led1_cnt[5] .operation_mode = "arithmetic";
defparam \led1_cnt[5] .output_mode = "reg_only";
defparam \led1_cnt[5] .register_cascade_mode = "off";
defparam \led1_cnt[5] .sum_lutc_input = "cin";
defparam \led1_cnt[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N0
maxii_lcell \led1_cnt[6] (
// Equation(s):
// led1_cnt[6] = DFFEAS((led1_cnt[6] $ ((!\led1_cnt[5]~17 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[6]~19  = CARRY(((led1_cnt[6] & !\led1_cnt[5]~17 )))
// \led1_cnt[6]~19COUT1_69  = CARRY(((led1_cnt[6] & !\led1_cnt[5]~17 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[5]~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[6]),
	.cout(),
	.cout0(\led1_cnt[6]~19 ),
	.cout1(\led1_cnt[6]~19COUT1_69 ));
// synopsys translate_off
defparam \led1_cnt[6] .cin_used = "true";
defparam \led1_cnt[6] .lut_mask = "c30c";
defparam \led1_cnt[6] .operation_mode = "arithmetic";
defparam \led1_cnt[6] .output_mode = "reg_only";
defparam \led1_cnt[6] .register_cascade_mode = "off";
defparam \led1_cnt[6] .sum_lutc_input = "cin";
defparam \led1_cnt[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N1
maxii_lcell \led1_cnt[7] (
// Equation(s):
// led1_cnt[7] = DFFEAS((led1_cnt[7] $ (((!\led1_cnt[5]~17  & \led1_cnt[6]~19 ) # (\led1_cnt[5]~17  & \led1_cnt[6]~19COUT1_69 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[7]~21  = CARRY(((!\led1_cnt[6]~19 ) # (!led1_cnt[7])))
// \led1_cnt[7]~21COUT1_70  = CARRY(((!\led1_cnt[6]~19COUT1_69 ) # (!led1_cnt[7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[5]~17 ),
	.cin0(\led1_cnt[6]~19 ),
	.cin1(\led1_cnt[6]~19COUT1_69 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[7]),
	.cout(),
	.cout0(\led1_cnt[7]~21 ),
	.cout1(\led1_cnt[7]~21COUT1_70 ));
// synopsys translate_off
defparam \led1_cnt[7] .cin0_used = "true";
defparam \led1_cnt[7] .cin1_used = "true";
defparam \led1_cnt[7] .cin_used = "true";
defparam \led1_cnt[7] .lut_mask = "3c3f";
defparam \led1_cnt[7] .operation_mode = "arithmetic";
defparam \led1_cnt[7] .output_mode = "reg_only";
defparam \led1_cnt[7] .register_cascade_mode = "off";
defparam \led1_cnt[7] .sum_lutc_input = "cin";
defparam \led1_cnt[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N2
maxii_lcell \led1_cnt[8] (
// Equation(s):
// led1_cnt[8] = DFFEAS((led1_cnt[8] $ ((!(!\led1_cnt[5]~17  & \led1_cnt[7]~21 ) # (\led1_cnt[5]~17  & \led1_cnt[7]~21COUT1_70 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[8]~13  = CARRY(((led1_cnt[8] & !\led1_cnt[7]~21 )))
// \led1_cnt[8]~13COUT1_71  = CARRY(((led1_cnt[8] & !\led1_cnt[7]~21COUT1_70 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[5]~17 ),
	.cin0(\led1_cnt[7]~21 ),
	.cin1(\led1_cnt[7]~21COUT1_70 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[8]),
	.cout(),
	.cout0(\led1_cnt[8]~13 ),
	.cout1(\led1_cnt[8]~13COUT1_71 ));
// synopsys translate_off
defparam \led1_cnt[8] .cin0_used = "true";
defparam \led1_cnt[8] .cin1_used = "true";
defparam \led1_cnt[8] .cin_used = "true";
defparam \led1_cnt[8] .lut_mask = "c30c";
defparam \led1_cnt[8] .operation_mode = "arithmetic";
defparam \led1_cnt[8] .output_mode = "reg_only";
defparam \led1_cnt[8] .register_cascade_mode = "off";
defparam \led1_cnt[8] .sum_lutc_input = "cin";
defparam \led1_cnt[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N3
maxii_lcell \led1_cnt[9] (
// Equation(s):
// led1_cnt[9] = DFFEAS(led1_cnt[9] $ (((((!\led1_cnt[5]~17  & \led1_cnt[8]~13 ) # (\led1_cnt[5]~17  & \led1_cnt[8]~13COUT1_71 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[9]~35  = CARRY(((!\led1_cnt[8]~13 )) # (!led1_cnt[9]))
// \led1_cnt[9]~35COUT1_72  = CARRY(((!\led1_cnt[8]~13COUT1_71 )) # (!led1_cnt[9]))

	.clk(\clk~combout ),
	.dataa(led1_cnt[9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[5]~17 ),
	.cin0(\led1_cnt[8]~13 ),
	.cin1(\led1_cnt[8]~13COUT1_71 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[9]),
	.cout(),
	.cout0(\led1_cnt[9]~35 ),
	.cout1(\led1_cnt[9]~35COUT1_72 ));
// synopsys translate_off
defparam \led1_cnt[9] .cin0_used = "true";
defparam \led1_cnt[9] .cin1_used = "true";
defparam \led1_cnt[9] .cin_used = "true";
defparam \led1_cnt[9] .lut_mask = "5a5f";
defparam \led1_cnt[9] .operation_mode = "arithmetic";
defparam \led1_cnt[9] .output_mode = "reg_only";
defparam \led1_cnt[9] .register_cascade_mode = "off";
defparam \led1_cnt[9] .sum_lutc_input = "cin";
defparam \led1_cnt[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N4
maxii_lcell \led1_cnt[10] (
// Equation(s):
// led1_cnt[10] = DFFEAS(led1_cnt[10] $ ((((!(!\led1_cnt[5]~17  & \led1_cnt[9]~35 ) # (\led1_cnt[5]~17  & \led1_cnt[9]~35COUT1_72 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[10]~39  = CARRY((led1_cnt[10] & ((!\led1_cnt[9]~35COUT1_72 ))))

	.clk(\clk~combout ),
	.dataa(led1_cnt[10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[5]~17 ),
	.cin0(\led1_cnt[9]~35 ),
	.cin1(\led1_cnt[9]~35COUT1_72 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[10]),
	.cout(\led1_cnt[10]~39 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led1_cnt[10] .cin0_used = "true";
defparam \led1_cnt[10] .cin1_used = "true";
defparam \led1_cnt[10] .cin_used = "true";
defparam \led1_cnt[10] .lut_mask = "a50a";
defparam \led1_cnt[10] .operation_mode = "arithmetic";
defparam \led1_cnt[10] .output_mode = "reg_only";
defparam \led1_cnt[10] .register_cascade_mode = "off";
defparam \led1_cnt[10] .sum_lutc_input = "cin";
defparam \led1_cnt[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N5
maxii_lcell \led1_cnt[11] (
// Equation(s):
// led1_cnt[11] = DFFEAS(led1_cnt[11] $ ((((\led1_cnt[10]~39 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[11]~25  = CARRY(((!\led1_cnt[10]~39 )) # (!led1_cnt[11]))
// \led1_cnt[11]~25COUT1_73  = CARRY(((!\led1_cnt[10]~39 )) # (!led1_cnt[11]))

	.clk(\clk~combout ),
	.dataa(led1_cnt[11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[10]~39 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[11]),
	.cout(),
	.cout0(\led1_cnt[11]~25 ),
	.cout1(\led1_cnt[11]~25COUT1_73 ));
// synopsys translate_off
defparam \led1_cnt[11] .cin_used = "true";
defparam \led1_cnt[11] .lut_mask = "5a5f";
defparam \led1_cnt[11] .operation_mode = "arithmetic";
defparam \led1_cnt[11] .output_mode = "reg_only";
defparam \led1_cnt[11] .register_cascade_mode = "off";
defparam \led1_cnt[11] .sum_lutc_input = "cin";
defparam \led1_cnt[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N6
maxii_lcell \led1_cnt[12] (
// Equation(s):
// led1_cnt[12] = DFFEAS(led1_cnt[12] $ ((((!(!\led1_cnt[10]~39  & \led1_cnt[11]~25 ) # (\led1_cnt[10]~39  & \led1_cnt[11]~25COUT1_73 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[12]~27  = CARRY((led1_cnt[12] & ((!\led1_cnt[11]~25 ))))
// \led1_cnt[12]~27COUT1_74  = CARRY((led1_cnt[12] & ((!\led1_cnt[11]~25COUT1_73 ))))

	.clk(\clk~combout ),
	.dataa(led1_cnt[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[10]~39 ),
	.cin0(\led1_cnt[11]~25 ),
	.cin1(\led1_cnt[11]~25COUT1_73 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[12]),
	.cout(),
	.cout0(\led1_cnt[12]~27 ),
	.cout1(\led1_cnt[12]~27COUT1_74 ));
// synopsys translate_off
defparam \led1_cnt[12] .cin0_used = "true";
defparam \led1_cnt[12] .cin1_used = "true";
defparam \led1_cnt[12] .cin_used = "true";
defparam \led1_cnt[12] .lut_mask = "a50a";
defparam \led1_cnt[12] .operation_mode = "arithmetic";
defparam \led1_cnt[12] .output_mode = "reg_only";
defparam \led1_cnt[12] .register_cascade_mode = "off";
defparam \led1_cnt[12] .sum_lutc_input = "cin";
defparam \led1_cnt[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N7
maxii_lcell \led1_cnt[13] (
// Equation(s):
// led1_cnt[13] = DFFEAS((led1_cnt[13] $ (((!\led1_cnt[10]~39  & \led1_cnt[12]~27 ) # (\led1_cnt[10]~39  & \led1_cnt[12]~27COUT1_74 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[13]~37  = CARRY(((!\led1_cnt[12]~27 ) # (!led1_cnt[13])))
// \led1_cnt[13]~37COUT1_75  = CARRY(((!\led1_cnt[12]~27COUT1_74 ) # (!led1_cnt[13])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[13]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[10]~39 ),
	.cin0(\led1_cnt[12]~27 ),
	.cin1(\led1_cnt[12]~27COUT1_74 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[13]),
	.cout(),
	.cout0(\led1_cnt[13]~37 ),
	.cout1(\led1_cnt[13]~37COUT1_75 ));
// synopsys translate_off
defparam \led1_cnt[13] .cin0_used = "true";
defparam \led1_cnt[13] .cin1_used = "true";
defparam \led1_cnt[13] .cin_used = "true";
defparam \led1_cnt[13] .lut_mask = "3c3f";
defparam \led1_cnt[13] .operation_mode = "arithmetic";
defparam \led1_cnt[13] .output_mode = "reg_only";
defparam \led1_cnt[13] .register_cascade_mode = "off";
defparam \led1_cnt[13] .sum_lutc_input = "cin";
defparam \led1_cnt[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N8
maxii_lcell \led1_cnt[14] (
// Equation(s):
// led1_cnt[14] = DFFEAS(led1_cnt[14] $ ((((!(!\led1_cnt[10]~39  & \led1_cnt[13]~37 ) # (\led1_cnt[10]~39  & \led1_cnt[13]~37COUT1_75 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[14]~23  = CARRY((led1_cnt[14] & ((!\led1_cnt[13]~37 ))))
// \led1_cnt[14]~23COUT1_76  = CARRY((led1_cnt[14] & ((!\led1_cnt[13]~37COUT1_75 ))))

	.clk(\clk~combout ),
	.dataa(led1_cnt[14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[10]~39 ),
	.cin0(\led1_cnt[13]~37 ),
	.cin1(\led1_cnt[13]~37COUT1_75 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[14]),
	.cout(),
	.cout0(\led1_cnt[14]~23 ),
	.cout1(\led1_cnt[14]~23COUT1_76 ));
// synopsys translate_off
defparam \led1_cnt[14] .cin0_used = "true";
defparam \led1_cnt[14] .cin1_used = "true";
defparam \led1_cnt[14] .cin_used = "true";
defparam \led1_cnt[14] .lut_mask = "a50a";
defparam \led1_cnt[14] .operation_mode = "arithmetic";
defparam \led1_cnt[14] .output_mode = "reg_only";
defparam \led1_cnt[14] .register_cascade_mode = "off";
defparam \led1_cnt[14] .sum_lutc_input = "cin";
defparam \led1_cnt[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y4_N9
maxii_lcell \led1_cnt[15] (
// Equation(s):
// led1_cnt[15] = DFFEAS((led1_cnt[15] $ (((!\led1_cnt[10]~39  & \led1_cnt[14]~23 ) # (\led1_cnt[10]~39  & \led1_cnt[14]~23COUT1_76 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[15]~41  = CARRY(((!\led1_cnt[14]~23COUT1_76 ) # (!led1_cnt[15])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[10]~39 ),
	.cin0(\led1_cnt[14]~23 ),
	.cin1(\led1_cnt[14]~23COUT1_76 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[15]),
	.cout(\led1_cnt[15]~41 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led1_cnt[15] .cin0_used = "true";
defparam \led1_cnt[15] .cin1_used = "true";
defparam \led1_cnt[15] .cin_used = "true";
defparam \led1_cnt[15] .lut_mask = "3c3f";
defparam \led1_cnt[15] .operation_mode = "arithmetic";
defparam \led1_cnt[15] .output_mode = "reg_only";
defparam \led1_cnt[15] .register_cascade_mode = "off";
defparam \led1_cnt[15] .sum_lutc_input = "cin";
defparam \led1_cnt[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N0
maxii_lcell \led1_cnt[16] (
// Equation(s):
// led1_cnt[16] = DFFEAS((led1_cnt[16] $ ((!\led1_cnt[15]~41 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[16]~43  = CARRY(((led1_cnt[16] & !\led1_cnt[15]~41 )))
// \led1_cnt[16]~43COUT1_77  = CARRY(((led1_cnt[16] & !\led1_cnt[15]~41 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[15]~41 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[16]),
	.cout(),
	.cout0(\led1_cnt[16]~43 ),
	.cout1(\led1_cnt[16]~43COUT1_77 ));
// synopsys translate_off
defparam \led1_cnt[16] .cin_used = "true";
defparam \led1_cnt[16] .lut_mask = "c30c";
defparam \led1_cnt[16] .operation_mode = "arithmetic";
defparam \led1_cnt[16] .output_mode = "reg_only";
defparam \led1_cnt[16] .register_cascade_mode = "off";
defparam \led1_cnt[16] .sum_lutc_input = "cin";
defparam \led1_cnt[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N1
maxii_lcell \led1_cnt[17] (
// Equation(s):
// led1_cnt[17] = DFFEAS((led1_cnt[17] $ (((!\led1_cnt[15]~41  & \led1_cnt[16]~43 ) # (\led1_cnt[15]~41  & \led1_cnt[16]~43COUT1_77 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[17]~29  = CARRY(((!\led1_cnt[16]~43 ) # (!led1_cnt[17])))
// \led1_cnt[17]~29COUT1_78  = CARRY(((!\led1_cnt[16]~43COUT1_77 ) # (!led1_cnt[17])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[15]~41 ),
	.cin0(\led1_cnt[16]~43 ),
	.cin1(\led1_cnt[16]~43COUT1_77 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[17]),
	.cout(),
	.cout0(\led1_cnt[17]~29 ),
	.cout1(\led1_cnt[17]~29COUT1_78 ));
// synopsys translate_off
defparam \led1_cnt[17] .cin0_used = "true";
defparam \led1_cnt[17] .cin1_used = "true";
defparam \led1_cnt[17] .cin_used = "true";
defparam \led1_cnt[17] .lut_mask = "3c3f";
defparam \led1_cnt[17] .operation_mode = "arithmetic";
defparam \led1_cnt[17] .output_mode = "reg_only";
defparam \led1_cnt[17] .register_cascade_mode = "off";
defparam \led1_cnt[17] .sum_lutc_input = "cin";
defparam \led1_cnt[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N2
maxii_lcell \led1_cnt[18] (
// Equation(s):
// led1_cnt[18] = DFFEAS((led1_cnt[18] $ ((!(!\led1_cnt[15]~41  & \led1_cnt[17]~29 ) # (\led1_cnt[15]~41  & \led1_cnt[17]~29COUT1_78 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[18]~59  = CARRY(((led1_cnt[18] & !\led1_cnt[17]~29 )))
// \led1_cnt[18]~59COUT1_79  = CARRY(((led1_cnt[18] & !\led1_cnt[17]~29COUT1_78 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[18]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[15]~41 ),
	.cin0(\led1_cnt[17]~29 ),
	.cin1(\led1_cnt[17]~29COUT1_78 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[18]),
	.cout(),
	.cout0(\led1_cnt[18]~59 ),
	.cout1(\led1_cnt[18]~59COUT1_79 ));
// synopsys translate_off
defparam \led1_cnt[18] .cin0_used = "true";
defparam \led1_cnt[18] .cin1_used = "true";
defparam \led1_cnt[18] .cin_used = "true";
defparam \led1_cnt[18] .lut_mask = "c30c";
defparam \led1_cnt[18] .operation_mode = "arithmetic";
defparam \led1_cnt[18] .output_mode = "reg_only";
defparam \led1_cnt[18] .register_cascade_mode = "off";
defparam \led1_cnt[18] .sum_lutc_input = "cin";
defparam \led1_cnt[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N3
maxii_lcell \led1_cnt[19] (
// Equation(s):
// led1_cnt[19] = DFFEAS(led1_cnt[19] $ (((((!\led1_cnt[15]~41  & \led1_cnt[18]~59 ) # (\led1_cnt[15]~41  & \led1_cnt[18]~59COUT1_79 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[19]~61  = CARRY(((!\led1_cnt[18]~59 )) # (!led1_cnt[19]))
// \led1_cnt[19]~61COUT1_80  = CARRY(((!\led1_cnt[18]~59COUT1_79 )) # (!led1_cnt[19]))

	.clk(\clk~combout ),
	.dataa(led1_cnt[19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[15]~41 ),
	.cin0(\led1_cnt[18]~59 ),
	.cin1(\led1_cnt[18]~59COUT1_79 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[19]),
	.cout(),
	.cout0(\led1_cnt[19]~61 ),
	.cout1(\led1_cnt[19]~61COUT1_80 ));
// synopsys translate_off
defparam \led1_cnt[19] .cin0_used = "true";
defparam \led1_cnt[19] .cin1_used = "true";
defparam \led1_cnt[19] .cin_used = "true";
defparam \led1_cnt[19] .lut_mask = "5a5f";
defparam \led1_cnt[19] .operation_mode = "arithmetic";
defparam \led1_cnt[19] .output_mode = "reg_only";
defparam \led1_cnt[19] .register_cascade_mode = "off";
defparam \led1_cnt[19] .sum_lutc_input = "cin";
defparam \led1_cnt[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N4
maxii_lcell \led1_cnt[20] (
// Equation(s):
// led1_cnt[20] = DFFEAS(led1_cnt[20] $ ((((!(!\led1_cnt[15]~41  & \led1_cnt[19]~61 ) # (\led1_cnt[15]~41  & \led1_cnt[19]~61COUT1_80 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[20]~63  = CARRY((led1_cnt[20] & ((!\led1_cnt[19]~61COUT1_80 ))))

	.clk(\clk~combout ),
	.dataa(led1_cnt[20]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[15]~41 ),
	.cin0(\led1_cnt[19]~61 ),
	.cin1(\led1_cnt[19]~61COUT1_80 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[20]),
	.cout(\led1_cnt[20]~63 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led1_cnt[20] .cin0_used = "true";
defparam \led1_cnt[20] .cin1_used = "true";
defparam \led1_cnt[20] .cin_used = "true";
defparam \led1_cnt[20] .lut_mask = "a50a";
defparam \led1_cnt[20] .operation_mode = "arithmetic";
defparam \led1_cnt[20] .output_mode = "reg_only";
defparam \led1_cnt[20] .register_cascade_mode = "off";
defparam \led1_cnt[20] .sum_lutc_input = "cin";
defparam \led1_cnt[20] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N5
maxii_lcell \led1_cnt[21] (
// Equation(s):
// led1_cnt[21] = DFFEAS(led1_cnt[21] $ ((((\led1_cnt[20]~63 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[21]~3  = CARRY(((!\led1_cnt[20]~63 )) # (!led1_cnt[21]))
// \led1_cnt[21]~3COUT1_81  = CARRY(((!\led1_cnt[20]~63 )) # (!led1_cnt[21]))

	.clk(\clk~combout ),
	.dataa(led1_cnt[21]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[20]~63 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[21]),
	.cout(),
	.cout0(\led1_cnt[21]~3 ),
	.cout1(\led1_cnt[21]~3COUT1_81 ));
// synopsys translate_off
defparam \led1_cnt[21] .cin_used = "true";
defparam \led1_cnt[21] .lut_mask = "5a5f";
defparam \led1_cnt[21] .operation_mode = "arithmetic";
defparam \led1_cnt[21] .output_mode = "reg_only";
defparam \led1_cnt[21] .register_cascade_mode = "off";
defparam \led1_cnt[21] .sum_lutc_input = "cin";
defparam \led1_cnt[21] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N6
maxii_lcell \led1_cnt[22] (
// Equation(s):
// led1_cnt[22] = DFFEAS(led1_cnt[22] $ ((((!(!\led1_cnt[20]~63  & \led1_cnt[21]~3 ) # (\led1_cnt[20]~63  & \led1_cnt[21]~3COUT1_81 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[22]~31  = CARRY((led1_cnt[22] & ((!\led1_cnt[21]~3 ))))
// \led1_cnt[22]~31COUT1_82  = CARRY((led1_cnt[22] & ((!\led1_cnt[21]~3COUT1_81 ))))

	.clk(\clk~combout ),
	.dataa(led1_cnt[22]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[20]~63 ),
	.cin0(\led1_cnt[21]~3 ),
	.cin1(\led1_cnt[21]~3COUT1_81 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[22]),
	.cout(),
	.cout0(\led1_cnt[22]~31 ),
	.cout1(\led1_cnt[22]~31COUT1_82 ));
// synopsys translate_off
defparam \led1_cnt[22] .cin0_used = "true";
defparam \led1_cnt[22] .cin1_used = "true";
defparam \led1_cnt[22] .cin_used = "true";
defparam \led1_cnt[22] .lut_mask = "a50a";
defparam \led1_cnt[22] .operation_mode = "arithmetic";
defparam \led1_cnt[22] .output_mode = "reg_only";
defparam \led1_cnt[22] .register_cascade_mode = "off";
defparam \led1_cnt[22] .sum_lutc_input = "cin";
defparam \led1_cnt[22] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N7
maxii_lcell \led1_cnt[23] (
// Equation(s):
// led1_cnt[23] = DFFEAS((led1_cnt[23] $ (((!\led1_cnt[20]~63  & \led1_cnt[22]~31 ) # (\led1_cnt[20]~63  & \led1_cnt[22]~31COUT1_82 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[23]~55  = CARRY(((!\led1_cnt[22]~31 ) # (!led1_cnt[23])))
// \led1_cnt[23]~55COUT1_83  = CARRY(((!\led1_cnt[22]~31COUT1_82 ) # (!led1_cnt[23])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[23]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[20]~63 ),
	.cin0(\led1_cnt[22]~31 ),
	.cin1(\led1_cnt[22]~31COUT1_82 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[23]),
	.cout(),
	.cout0(\led1_cnt[23]~55 ),
	.cout1(\led1_cnt[23]~55COUT1_83 ));
// synopsys translate_off
defparam \led1_cnt[23] .cin0_used = "true";
defparam \led1_cnt[23] .cin1_used = "true";
defparam \led1_cnt[23] .cin_used = "true";
defparam \led1_cnt[23] .lut_mask = "3c3f";
defparam \led1_cnt[23] .operation_mode = "arithmetic";
defparam \led1_cnt[23] .output_mode = "reg_only";
defparam \led1_cnt[23] .register_cascade_mode = "off";
defparam \led1_cnt[23] .sum_lutc_input = "cin";
defparam \led1_cnt[23] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N8
maxii_lcell \led1_cnt[24] (
// Equation(s):
// led1_cnt[24] = DFFEAS(led1_cnt[24] $ ((((!(!\led1_cnt[20]~63  & \led1_cnt[23]~55 ) # (\led1_cnt[20]~63  & \led1_cnt[23]~55COUT1_83 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[24]~57  = CARRY((led1_cnt[24] & ((!\led1_cnt[23]~55 ))))
// \led1_cnt[24]~57COUT1_84  = CARRY((led1_cnt[24] & ((!\led1_cnt[23]~55COUT1_83 ))))

	.clk(\clk~combout ),
	.dataa(led1_cnt[24]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[20]~63 ),
	.cin0(\led1_cnt[23]~55 ),
	.cin1(\led1_cnt[23]~55COUT1_83 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[24]),
	.cout(),
	.cout0(\led1_cnt[24]~57 ),
	.cout1(\led1_cnt[24]~57COUT1_84 ));
// synopsys translate_off
defparam \led1_cnt[24] .cin0_used = "true";
defparam \led1_cnt[24] .cin1_used = "true";
defparam \led1_cnt[24] .cin_used = "true";
defparam \led1_cnt[24] .lut_mask = "a50a";
defparam \led1_cnt[24] .operation_mode = "arithmetic";
defparam \led1_cnt[24] .output_mode = "reg_only";
defparam \led1_cnt[24] .register_cascade_mode = "off";
defparam \led1_cnt[24] .sum_lutc_input = "cin";
defparam \led1_cnt[24] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N9
maxii_lcell \led1_cnt[25] (
// Equation(s):
// led1_cnt[25] = DFFEAS((led1_cnt[25] $ (((!\led1_cnt[20]~63  & \led1_cnt[24]~57 ) # (\led1_cnt[20]~63  & \led1_cnt[24]~57COUT1_84 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[25]~33  = CARRY(((!\led1_cnt[24]~57COUT1_84 ) # (!led1_cnt[25])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[25]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[20]~63 ),
	.cin0(\led1_cnt[24]~57 ),
	.cin1(\led1_cnt[24]~57COUT1_84 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[25]),
	.cout(\led1_cnt[25]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led1_cnt[25] .cin0_used = "true";
defparam \led1_cnt[25] .cin1_used = "true";
defparam \led1_cnt[25] .cin_used = "true";
defparam \led1_cnt[25] .lut_mask = "3c3f";
defparam \led1_cnt[25] .operation_mode = "arithmetic";
defparam \led1_cnt[25] .output_mode = "reg_only";
defparam \led1_cnt[25] .register_cascade_mode = "off";
defparam \led1_cnt[25] .sum_lutc_input = "cin";
defparam \led1_cnt[25] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y4_N0
maxii_lcell \led1_cnt[26] (
// Equation(s):
// led1_cnt[26] = DFFEAS((led1_cnt[26] $ ((!\led1_cnt[25]~33 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[26]~45  = CARRY(((led1_cnt[26] & !\led1_cnt[25]~33 )))
// \led1_cnt[26]~45COUT1_85  = CARRY(((led1_cnt[26] & !\led1_cnt[25]~33 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[26]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[25]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[26]),
	.cout(),
	.cout0(\led1_cnt[26]~45 ),
	.cout1(\led1_cnt[26]~45COUT1_85 ));
// synopsys translate_off
defparam \led1_cnt[26] .cin_used = "true";
defparam \led1_cnt[26] .lut_mask = "c30c";
defparam \led1_cnt[26] .operation_mode = "arithmetic";
defparam \led1_cnt[26] .output_mode = "reg_only";
defparam \led1_cnt[26] .register_cascade_mode = "off";
defparam \led1_cnt[26] .sum_lutc_input = "cin";
defparam \led1_cnt[26] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y4_N1
maxii_lcell \led1_cnt[27] (
// Equation(s):
// led1_cnt[27] = DFFEAS((led1_cnt[27] $ (((!\led1_cnt[25]~33  & \led1_cnt[26]~45 ) # (\led1_cnt[25]~33  & \led1_cnt[26]~45COUT1_85 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[27]~47  = CARRY(((!\led1_cnt[26]~45 ) # (!led1_cnt[27])))
// \led1_cnt[27]~47COUT1_86  = CARRY(((!\led1_cnt[26]~45COUT1_85 ) # (!led1_cnt[27])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[27]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[25]~33 ),
	.cin0(\led1_cnt[26]~45 ),
	.cin1(\led1_cnt[26]~45COUT1_85 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[27]),
	.cout(),
	.cout0(\led1_cnt[27]~47 ),
	.cout1(\led1_cnt[27]~47COUT1_86 ));
// synopsys translate_off
defparam \led1_cnt[27] .cin0_used = "true";
defparam \led1_cnt[27] .cin1_used = "true";
defparam \led1_cnt[27] .cin_used = "true";
defparam \led1_cnt[27] .lut_mask = "3c3f";
defparam \led1_cnt[27] .operation_mode = "arithmetic";
defparam \led1_cnt[27] .output_mode = "reg_only";
defparam \led1_cnt[27] .register_cascade_mode = "off";
defparam \led1_cnt[27] .sum_lutc_input = "cin";
defparam \led1_cnt[27] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y4_N2
maxii_lcell \led1_cnt[28] (
// Equation(s):
// led1_cnt[28] = DFFEAS((led1_cnt[28] $ ((!(!\led1_cnt[25]~33  & \led1_cnt[27]~47 ) # (\led1_cnt[25]~33  & \led1_cnt[27]~47COUT1_86 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[28]~49  = CARRY(((led1_cnt[28] & !\led1_cnt[27]~47 )))
// \led1_cnt[28]~49COUT1_87  = CARRY(((led1_cnt[28] & !\led1_cnt[27]~47COUT1_86 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led1_cnt[28]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[25]~33 ),
	.cin0(\led1_cnt[27]~47 ),
	.cin1(\led1_cnt[27]~47COUT1_86 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[28]),
	.cout(),
	.cout0(\led1_cnt[28]~49 ),
	.cout1(\led1_cnt[28]~49COUT1_87 ));
// synopsys translate_off
defparam \led1_cnt[28] .cin0_used = "true";
defparam \led1_cnt[28] .cin1_used = "true";
defparam \led1_cnt[28] .cin_used = "true";
defparam \led1_cnt[28] .lut_mask = "c30c";
defparam \led1_cnt[28] .operation_mode = "arithmetic";
defparam \led1_cnt[28] .output_mode = "reg_only";
defparam \led1_cnt[28] .register_cascade_mode = "off";
defparam \led1_cnt[28] .sum_lutc_input = "cin";
defparam \led1_cnt[28] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y4_N3
maxii_lcell \led1_cnt[29] (
// Equation(s):
// led1_cnt[29] = DFFEAS(led1_cnt[29] $ (((((!\led1_cnt[25]~33  & \led1_cnt[28]~49 ) # (\led1_cnt[25]~33  & \led1_cnt[28]~49COUT1_87 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[29]~51  = CARRY(((!\led1_cnt[28]~49 )) # (!led1_cnt[29]))
// \led1_cnt[29]~51COUT1_88  = CARRY(((!\led1_cnt[28]~49COUT1_87 )) # (!led1_cnt[29]))

	.clk(\clk~combout ),
	.dataa(led1_cnt[29]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[25]~33 ),
	.cin0(\led1_cnt[28]~49 ),
	.cin1(\led1_cnt[28]~49COUT1_87 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[29]),
	.cout(),
	.cout0(\led1_cnt[29]~51 ),
	.cout1(\led1_cnt[29]~51COUT1_88 ));
// synopsys translate_off
defparam \led1_cnt[29] .cin0_used = "true";
defparam \led1_cnt[29] .cin1_used = "true";
defparam \led1_cnt[29] .cin_used = "true";
defparam \led1_cnt[29] .lut_mask = "5a5f";
defparam \led1_cnt[29] .operation_mode = "arithmetic";
defparam \led1_cnt[29] .output_mode = "reg_only";
defparam \led1_cnt[29] .register_cascade_mode = "off";
defparam \led1_cnt[29] .sum_lutc_input = "cin";
defparam \led1_cnt[29] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y4_N4
maxii_lcell \led1_cnt[30] (
// Equation(s):
// led1_cnt[30] = DFFEAS(led1_cnt[30] $ ((((!(!\led1_cnt[25]~33  & \led1_cnt[29]~51 ) # (\led1_cnt[25]~33  & \led1_cnt[29]~51COUT1_88 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )
// \led1_cnt[30]~53  = CARRY((led1_cnt[30] & ((!\led1_cnt[29]~51COUT1_88 ))))

	.clk(\clk~combout ),
	.dataa(led1_cnt[30]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[25]~33 ),
	.cin0(\led1_cnt[29]~51 ),
	.cin1(\led1_cnt[29]~51COUT1_88 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[30]),
	.cout(\led1_cnt[30]~53 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led1_cnt[30] .cin0_used = "true";
defparam \led1_cnt[30] .cin1_used = "true";
defparam \led1_cnt[30] .cin_used = "true";
defparam \led1_cnt[30] .lut_mask = "a50a";
defparam \led1_cnt[30] .operation_mode = "arithmetic";
defparam \led1_cnt[30] .output_mode = "reg_only";
defparam \led1_cnt[30] .register_cascade_mode = "off";
defparam \led1_cnt[30] .sum_lutc_input = "cin";
defparam \led1_cnt[30] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y4_N5
maxii_lcell \led1_cnt[31] (
// Equation(s):
// led1_cnt[31] = DFFEAS(led1_cnt[31] $ ((((\led1_cnt[30]~53 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan1~33_combout , )

	.clk(\clk~combout ),
	.dataa(led1_cnt[31]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan1~33_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led1_cnt[30]~53 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led1_cnt[31]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led1_cnt[31] .cin_used = "true";
defparam \led1_cnt[31] .lut_mask = "5a5a";
defparam \led1_cnt[31] .operation_mode = "normal";
defparam \led1_cnt[31] .output_mode = "reg_only";
defparam \led1_cnt[31] .register_cascade_mode = "off";
defparam \led1_cnt[31] .sum_lutc_input = "cin";
defparam \led1_cnt[31] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y4_N6
maxii_lcell \LessThan1~29 (
// Equation(s):
// \LessThan1~29_combout  = (led1_cnt[29]) # ((led1_cnt[27]) # ((led1_cnt[30]) # (led1_cnt[28])))

	.clk(gnd),
	.dataa(led1_cnt[29]),
	.datab(led1_cnt[27]),
	.datac(led1_cnt[30]),
	.datad(led1_cnt[28]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~29_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~29 .lut_mask = "fffe";
defparam \LessThan1~29 .operation_mode = "normal";
defparam \LessThan1~29 .output_mode = "comb_only";
defparam \LessThan1~29 .register_cascade_mode = "off";
defparam \LessThan1~29 .sum_lutc_input = "datac";
defparam \LessThan1~29 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N3
maxii_lcell \LessThan1~30 (
// Equation(s):
// \LessThan1~30_combout  = (led1_cnt[21] & ((led1_cnt[20]) # ((led1_cnt[18]) # (led1_cnt[19]))))

	.clk(gnd),
	.dataa(led1_cnt[20]),
	.datab(led1_cnt[18]),
	.datac(led1_cnt[21]),
	.datad(led1_cnt[19]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~30_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~30 .lut_mask = "f0e0";
defparam \LessThan1~30 .operation_mode = "normal";
defparam \LessThan1~30 .output_mode = "comb_only";
defparam \LessThan1~30 .register_cascade_mode = "off";
defparam \LessThan1~30 .sum_lutc_input = "datac";
defparam \LessThan1~30 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N8
maxii_lcell \LessThan1~31 (
// Equation(s):
// \LessThan1~31_combout  = (led1_cnt[24]) # ((led1_cnt[23]) # ((led1_cnt[22] & \LessThan1~30_combout )))

	.clk(gnd),
	.dataa(led1_cnt[24]),
	.datab(led1_cnt[22]),
	.datac(led1_cnt[23]),
	.datad(\LessThan1~30_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~31_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~31 .lut_mask = "fefa";
defparam \LessThan1~31 .operation_mode = "normal";
defparam \LessThan1~31 .output_mode = "comb_only";
defparam \LessThan1~31 .register_cascade_mode = "off";
defparam \LessThan1~31 .sum_lutc_input = "datac";
defparam \LessThan1~31 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N9
maxii_lcell \LessThan1~32 (
// Equation(s):
// \LessThan1~32_combout  = (led1_cnt[26]) # ((\LessThan1~29_combout ) # ((led1_cnt[25] & \LessThan1~31_combout )))

	.clk(gnd),
	.dataa(led1_cnt[26]),
	.datab(\LessThan1~29_combout ),
	.datac(led1_cnt[25]),
	.datad(\LessThan1~31_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~32_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~32 .lut_mask = "feee";
defparam \LessThan1~32 .operation_mode = "normal";
defparam \LessThan1~32 .output_mode = "comb_only";
defparam \LessThan1~32 .register_cascade_mode = "off";
defparam \LessThan1~32 .sum_lutc_input = "datac";
defparam \LessThan1~32 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N2
maxii_lcell \LessThan1~26 (
// Equation(s):
// \LessThan1~26_combout  = ((led1_cnt[14] & (led1_cnt[12] & led1_cnt[11])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led1_cnt[14]),
	.datac(led1_cnt[12]),
	.datad(led1_cnt[11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~26_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~26 .lut_mask = "c000";
defparam \LessThan1~26 .operation_mode = "normal";
defparam \LessThan1~26 .output_mode = "comb_only";
defparam \LessThan1~26 .register_cascade_mode = "off";
defparam \LessThan1~26 .sum_lutc_input = "datac";
defparam \LessThan1~26 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N7
maxii_lcell \LessThan1~27 (
// Equation(s):
// \LessThan1~27_combout  = (led1_cnt[17] & (led1_cnt[22] & (led1_cnt[25] & led1_cnt[9])))

	.clk(gnd),
	.dataa(led1_cnt[17]),
	.datab(led1_cnt[22]),
	.datac(led1_cnt[25]),
	.datad(led1_cnt[9]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~27_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~27 .lut_mask = "8000";
defparam \LessThan1~27 .operation_mode = "normal";
defparam \LessThan1~27 .output_mode = "comb_only";
defparam \LessThan1~27 .register_cascade_mode = "off";
defparam \LessThan1~27 .sum_lutc_input = "datac";
defparam \LessThan1~27 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N3
maxii_lcell \LessThan1~23 (
// Equation(s):
// \LessThan1~23_combout  = (led1_cnt[1]) # ((led1_cnt[3]) # ((led1_cnt[0]) # (led1_cnt[2])))

	.clk(gnd),
	.dataa(led1_cnt[1]),
	.datab(led1_cnt[3]),
	.datac(led1_cnt[0]),
	.datad(led1_cnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~23_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~23 .lut_mask = "fffe";
defparam \LessThan1~23 .operation_mode = "normal";
defparam \LessThan1~23 .output_mode = "comb_only";
defparam \LessThan1~23 .register_cascade_mode = "off";
defparam \LessThan1~23 .sum_lutc_input = "datac";
defparam \LessThan1~23 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N1
maxii_lcell \LessThan1~24 (
// Equation(s):
// \LessThan1~24_combout  = (led1_cnt[4]) # ((led1_cnt[5]) # ((led1_cnt[6]) # (led1_cnt[7])))

	.clk(gnd),
	.dataa(led1_cnt[4]),
	.datab(led1_cnt[5]),
	.datac(led1_cnt[6]),
	.datad(led1_cnt[7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~24_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~24 .lut_mask = "fffe";
defparam \LessThan1~24 .operation_mode = "normal";
defparam \LessThan1~24 .output_mode = "comb_only";
defparam \LessThan1~24 .register_cascade_mode = "off";
defparam \LessThan1~24 .sum_lutc_input = "datac";
defparam \LessThan1~24 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N6
maxii_lcell \LessThan1~25 (
// Equation(s):
// \LessThan1~25_combout  = ((led1_cnt[8]) # ((\LessThan1~23_combout ) # (\LessThan1~24_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(led1_cnt[8]),
	.datac(\LessThan1~23_combout ),
	.datad(\LessThan1~24_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~25_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~25 .lut_mask = "fffc";
defparam \LessThan1~25 .operation_mode = "normal";
defparam \LessThan1~25 .output_mode = "comb_only";
defparam \LessThan1~25 .register_cascade_mode = "off";
defparam \LessThan1~25 .sum_lutc_input = "datac";
defparam \LessThan1~25 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N4
maxii_lcell \LessThan1~28 (
// Equation(s):
// \LessThan1~28_combout  = (led1_cnt[21] & (\LessThan1~26_combout  & (\LessThan1~27_combout  & \LessThan1~25_combout )))

	.clk(gnd),
	.dataa(led1_cnt[21]),
	.datab(\LessThan1~26_combout ),
	.datac(\LessThan1~27_combout ),
	.datad(\LessThan1~25_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~28_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~28 .lut_mask = "8000";
defparam \LessThan1~28 .operation_mode = "normal";
defparam \LessThan1~28 .output_mode = "comb_only";
defparam \LessThan1~28 .register_cascade_mode = "off";
defparam \LessThan1~28 .sum_lutc_input = "datac";
defparam \LessThan1~28 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N0
maxii_lcell \LessThan1~9 (
// Equation(s):
// \LessThan1~9_combout  = (((led1_cnt[12] & led1_cnt[10])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(led1_cnt[12]),
	.datad(led1_cnt[10]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~9 .lut_mask = "f000";
defparam \LessThan1~9 .operation_mode = "normal";
defparam \LessThan1~9 .output_mode = "comb_only";
defparam \LessThan1~9 .register_cascade_mode = "off";
defparam \LessThan1~9 .sum_lutc_input = "datac";
defparam \LessThan1~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N0
maxii_lcell \LessThan1~6 (
// Equation(s):
// \LessThan1~6_combout  = (led1_cnt[14] & ((led1_cnt[13]) # ((led1_cnt[11] & \LessThan1~9_combout ))))

	.clk(gnd),
	.dataa(led1_cnt[11]),
	.datab(led1_cnt[13]),
	.datac(\LessThan1~9_combout ),
	.datad(led1_cnt[14]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~6 .lut_mask = "ec00";
defparam \LessThan1~6 .operation_mode = "normal";
defparam \LessThan1~6 .output_mode = "comb_only";
defparam \LessThan1~6 .register_cascade_mode = "off";
defparam \LessThan1~6 .sum_lutc_input = "datac";
defparam \LessThan1~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N1
maxii_lcell \LessThan1~3 (
// Equation(s):
// \LessThan1~3_combout  = (led1_cnt[25] & ((led1_cnt[16]) # ((led1_cnt[15]) # (\LessThan1~6_combout ))))

	.clk(gnd),
	.dataa(led1_cnt[16]),
	.datab(led1_cnt[15]),
	.datac(led1_cnt[25]),
	.datad(\LessThan1~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~3 .lut_mask = "f0e0";
defparam \LessThan1~3 .operation_mode = "normal";
defparam \LessThan1~3 .output_mode = "comb_only";
defparam \LessThan1~3 .register_cascade_mode = "off";
defparam \LessThan1~3 .sum_lutc_input = "datac";
defparam \LessThan1~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N2
maxii_lcell \LessThan1~34 (
// Equation(s):
// \LessThan1~34_combout  = (led1_cnt[21] & (led1_cnt[22] & (led1_cnt[17] & \LessThan1~3_combout )))

	.clk(gnd),
	.dataa(led1_cnt[21]),
	.datab(led1_cnt[22]),
	.datac(led1_cnt[17]),
	.datad(\LessThan1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~34_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~34 .lut_mask = "8000";
defparam \LessThan1~34 .operation_mode = "normal";
defparam \LessThan1~34 .output_mode = "comb_only";
defparam \LessThan1~34 .register_cascade_mode = "off";
defparam \LessThan1~34 .sum_lutc_input = "datac";
defparam \LessThan1~34 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N5
maxii_lcell \LessThan1~33 (
// Equation(s):
// \LessThan1~33_combout  = (led1_cnt[31]) # ((\LessThan1~32_combout ) # ((\LessThan1~28_combout ) # (\LessThan1~34_combout )))

	.clk(gnd),
	.dataa(led1_cnt[31]),
	.datab(\LessThan1~32_combout ),
	.datac(\LessThan1~28_combout ),
	.datad(\LessThan1~34_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan1~33_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan1~33 .lut_mask = "fffe";
defparam \LessThan1~33 .operation_mode = "normal";
defparam \LessThan1~33 .output_mode = "comb_only";
defparam \LessThan1~33 .register_cascade_mode = "off";
defparam \LessThan1~33 .sum_lutc_input = "datac";
defparam \LessThan1~33 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N7
maxii_lcell led1_status(
// Equation(s):
// \led1_status~regout  = DFFEAS(((\led1_status~regout  $ (\LessThan1~33_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\led1_status~regout ),
	.datad(\LessThan1~33_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\led1_status~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam led1_status.lut_mask = "0ff0";
defparam led1_status.operation_mode = "normal";
defparam led1_status.output_mode = "reg_only";
defparam led1_status.register_cascade_mode = "off";
defparam led1_status.sum_lutc_input = "datac";
defparam led1_status.synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N4
maxii_lcell \led2_cnt[0] (
// Equation(s):
// led2_cnt[0] = DFFEAS((!led2_cnt[0]), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[0]~21  = CARRY((led2_cnt[0]))

	.clk(\clk~combout ),
	.dataa(led2_cnt[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[0]),
	.cout(\led2_cnt[0]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led2_cnt[0] .lut_mask = "55aa";
defparam \led2_cnt[0] .operation_mode = "arithmetic";
defparam \led2_cnt[0] .output_mode = "reg_only";
defparam \led2_cnt[0] .register_cascade_mode = "off";
defparam \led2_cnt[0] .sum_lutc_input = "datac";
defparam \led2_cnt[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N5
maxii_lcell \led2_cnt[1] (
// Equation(s):
// led2_cnt[1] = DFFEAS(led2_cnt[1] $ ((((\led2_cnt[0]~21 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[1]~23  = CARRY(((!\led2_cnt[0]~21 )) # (!led2_cnt[1]))
// \led2_cnt[1]~23COUT1_65  = CARRY(((!\led2_cnt[0]~21 )) # (!led2_cnt[1]))

	.clk(\clk~combout ),
	.dataa(led2_cnt[1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[0]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[1]),
	.cout(),
	.cout0(\led2_cnt[1]~23 ),
	.cout1(\led2_cnt[1]~23COUT1_65 ));
// synopsys translate_off
defparam \led2_cnt[1] .cin_used = "true";
defparam \led2_cnt[1] .lut_mask = "5a5f";
defparam \led2_cnt[1] .operation_mode = "arithmetic";
defparam \led2_cnt[1] .output_mode = "reg_only";
defparam \led2_cnt[1] .register_cascade_mode = "off";
defparam \led2_cnt[1] .sum_lutc_input = "cin";
defparam \led2_cnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N6
maxii_lcell \led2_cnt[2] (
// Equation(s):
// led2_cnt[2] = DFFEAS((led2_cnt[2] $ ((!(!\led2_cnt[0]~21  & \led2_cnt[1]~23 ) # (\led2_cnt[0]~21  & \led2_cnt[1]~23COUT1_65 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[2]~25  = CARRY(((led2_cnt[2] & !\led2_cnt[1]~23 )))
// \led2_cnt[2]~25COUT1_66  = CARRY(((led2_cnt[2] & !\led2_cnt[1]~23COUT1_65 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[0]~21 ),
	.cin0(\led2_cnt[1]~23 ),
	.cin1(\led2_cnt[1]~23COUT1_65 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[2]),
	.cout(),
	.cout0(\led2_cnt[2]~25 ),
	.cout1(\led2_cnt[2]~25COUT1_66 ));
// synopsys translate_off
defparam \led2_cnt[2] .cin0_used = "true";
defparam \led2_cnt[2] .cin1_used = "true";
defparam \led2_cnt[2] .cin_used = "true";
defparam \led2_cnt[2] .lut_mask = "c30c";
defparam \led2_cnt[2] .operation_mode = "arithmetic";
defparam \led2_cnt[2] .output_mode = "reg_only";
defparam \led2_cnt[2] .register_cascade_mode = "off";
defparam \led2_cnt[2] .sum_lutc_input = "cin";
defparam \led2_cnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N7
maxii_lcell \led2_cnt[3] (
// Equation(s):
// led2_cnt[3] = DFFEAS((led2_cnt[3] $ (((!\led2_cnt[0]~21  & \led2_cnt[2]~25 ) # (\led2_cnt[0]~21  & \led2_cnt[2]~25COUT1_66 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[3]~27  = CARRY(((!\led2_cnt[2]~25 ) # (!led2_cnt[3])))
// \led2_cnt[3]~27COUT1_67  = CARRY(((!\led2_cnt[2]~25COUT1_66 ) # (!led2_cnt[3])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[0]~21 ),
	.cin0(\led2_cnt[2]~25 ),
	.cin1(\led2_cnt[2]~25COUT1_66 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[3]),
	.cout(),
	.cout0(\led2_cnt[3]~27 ),
	.cout1(\led2_cnt[3]~27COUT1_67 ));
// synopsys translate_off
defparam \led2_cnt[3] .cin0_used = "true";
defparam \led2_cnt[3] .cin1_used = "true";
defparam \led2_cnt[3] .cin_used = "true";
defparam \led2_cnt[3] .lut_mask = "3c3f";
defparam \led2_cnt[3] .operation_mode = "arithmetic";
defparam \led2_cnt[3] .output_mode = "reg_only";
defparam \led2_cnt[3] .register_cascade_mode = "off";
defparam \led2_cnt[3] .sum_lutc_input = "cin";
defparam \led2_cnt[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N8
maxii_lcell \led2_cnt[4] (
// Equation(s):
// led2_cnt[4] = DFFEAS(led2_cnt[4] $ ((((!(!\led2_cnt[0]~21  & \led2_cnt[3]~27 ) # (\led2_cnt[0]~21  & \led2_cnt[3]~27COUT1_67 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[4]~29  = CARRY((led2_cnt[4] & ((!\led2_cnt[3]~27 ))))
// \led2_cnt[4]~29COUT1_68  = CARRY((led2_cnt[4] & ((!\led2_cnt[3]~27COUT1_67 ))))

	.clk(\clk~combout ),
	.dataa(led2_cnt[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[0]~21 ),
	.cin0(\led2_cnt[3]~27 ),
	.cin1(\led2_cnt[3]~27COUT1_67 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[4]),
	.cout(),
	.cout0(\led2_cnt[4]~29 ),
	.cout1(\led2_cnt[4]~29COUT1_68 ));
// synopsys translate_off
defparam \led2_cnt[4] .cin0_used = "true";
defparam \led2_cnt[4] .cin1_used = "true";
defparam \led2_cnt[4] .cin_used = "true";
defparam \led2_cnt[4] .lut_mask = "a50a";
defparam \led2_cnt[4] .operation_mode = "arithmetic";
defparam \led2_cnt[4] .output_mode = "reg_only";
defparam \led2_cnt[4] .register_cascade_mode = "off";
defparam \led2_cnt[4] .sum_lutc_input = "cin";
defparam \led2_cnt[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N9
maxii_lcell \led2_cnt[5] (
// Equation(s):
// led2_cnt[5] = DFFEAS((led2_cnt[5] $ (((!\led2_cnt[0]~21  & \led2_cnt[4]~29 ) # (\led2_cnt[0]~21  & \led2_cnt[4]~29COUT1_68 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[5]~31  = CARRY(((!\led2_cnt[4]~29COUT1_68 ) # (!led2_cnt[5])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[0]~21 ),
	.cin0(\led2_cnt[4]~29 ),
	.cin1(\led2_cnt[4]~29COUT1_68 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[5]),
	.cout(\led2_cnt[5]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led2_cnt[5] .cin0_used = "true";
defparam \led2_cnt[5] .cin1_used = "true";
defparam \led2_cnt[5] .cin_used = "true";
defparam \led2_cnt[5] .lut_mask = "3c3f";
defparam \led2_cnt[5] .operation_mode = "arithmetic";
defparam \led2_cnt[5] .output_mode = "reg_only";
defparam \led2_cnt[5] .register_cascade_mode = "off";
defparam \led2_cnt[5] .sum_lutc_input = "cin";
defparam \led2_cnt[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N0
maxii_lcell \led2_cnt[6] (
// Equation(s):
// led2_cnt[6] = DFFEAS((led2_cnt[6] $ ((!\led2_cnt[5]~31 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[6]~33  = CARRY(((led2_cnt[6] & !\led2_cnt[5]~31 )))
// \led2_cnt[6]~33COUT1_69  = CARRY(((led2_cnt[6] & !\led2_cnt[5]~31 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[5]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[6]),
	.cout(),
	.cout0(\led2_cnt[6]~33 ),
	.cout1(\led2_cnt[6]~33COUT1_69 ));
// synopsys translate_off
defparam \led2_cnt[6] .cin_used = "true";
defparam \led2_cnt[6] .lut_mask = "c30c";
defparam \led2_cnt[6] .operation_mode = "arithmetic";
defparam \led2_cnt[6] .output_mode = "reg_only";
defparam \led2_cnt[6] .register_cascade_mode = "off";
defparam \led2_cnt[6] .sum_lutc_input = "cin";
defparam \led2_cnt[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N1
maxii_lcell \led2_cnt[7] (
// Equation(s):
// led2_cnt[7] = DFFEAS((led2_cnt[7] $ (((!\led2_cnt[5]~31  & \led2_cnt[6]~33 ) # (\led2_cnt[5]~31  & \led2_cnt[6]~33COUT1_69 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[7]~35  = CARRY(((!\led2_cnt[6]~33 ) # (!led2_cnt[7])))
// \led2_cnt[7]~35COUT1_70  = CARRY(((!\led2_cnt[6]~33COUT1_69 ) # (!led2_cnt[7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[5]~31 ),
	.cin0(\led2_cnt[6]~33 ),
	.cin1(\led2_cnt[6]~33COUT1_69 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[7]),
	.cout(),
	.cout0(\led2_cnt[7]~35 ),
	.cout1(\led2_cnt[7]~35COUT1_70 ));
// synopsys translate_off
defparam \led2_cnt[7] .cin0_used = "true";
defparam \led2_cnt[7] .cin1_used = "true";
defparam \led2_cnt[7] .cin_used = "true";
defparam \led2_cnt[7] .lut_mask = "3c3f";
defparam \led2_cnt[7] .operation_mode = "arithmetic";
defparam \led2_cnt[7] .output_mode = "reg_only";
defparam \led2_cnt[7] .register_cascade_mode = "off";
defparam \led2_cnt[7] .sum_lutc_input = "cin";
defparam \led2_cnt[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N2
maxii_lcell \led2_cnt[8] (
// Equation(s):
// led2_cnt[8] = DFFEAS((led2_cnt[8] $ ((!(!\led2_cnt[5]~31  & \led2_cnt[7]~35 ) # (\led2_cnt[5]~31  & \led2_cnt[7]~35COUT1_70 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[8]~5  = CARRY(((led2_cnt[8] & !\led2_cnt[7]~35 )))
// \led2_cnt[8]~5COUT1_71  = CARRY(((led2_cnt[8] & !\led2_cnt[7]~35COUT1_70 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[5]~31 ),
	.cin0(\led2_cnt[7]~35 ),
	.cin1(\led2_cnt[7]~35COUT1_70 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[8]),
	.cout(),
	.cout0(\led2_cnt[8]~5 ),
	.cout1(\led2_cnt[8]~5COUT1_71 ));
// synopsys translate_off
defparam \led2_cnt[8] .cin0_used = "true";
defparam \led2_cnt[8] .cin1_used = "true";
defparam \led2_cnt[8] .cin_used = "true";
defparam \led2_cnt[8] .lut_mask = "c30c";
defparam \led2_cnt[8] .operation_mode = "arithmetic";
defparam \led2_cnt[8] .output_mode = "reg_only";
defparam \led2_cnt[8] .register_cascade_mode = "off";
defparam \led2_cnt[8] .sum_lutc_input = "cin";
defparam \led2_cnt[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N3
maxii_lcell \led2_cnt[9] (
// Equation(s):
// led2_cnt[9] = DFFEAS(led2_cnt[9] $ (((((!\led2_cnt[5]~31  & \led2_cnt[8]~5 ) # (\led2_cnt[5]~31  & \led2_cnt[8]~5COUT1_71 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[9]~43  = CARRY(((!\led2_cnt[8]~5 )) # (!led2_cnt[9]))
// \led2_cnt[9]~43COUT1_72  = CARRY(((!\led2_cnt[8]~5COUT1_71 )) # (!led2_cnt[9]))

	.clk(\clk~combout ),
	.dataa(led2_cnt[9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[5]~31 ),
	.cin0(\led2_cnt[8]~5 ),
	.cin1(\led2_cnt[8]~5COUT1_71 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[9]),
	.cout(),
	.cout0(\led2_cnt[9]~43 ),
	.cout1(\led2_cnt[9]~43COUT1_72 ));
// synopsys translate_off
defparam \led2_cnt[9] .cin0_used = "true";
defparam \led2_cnt[9] .cin1_used = "true";
defparam \led2_cnt[9] .cin_used = "true";
defparam \led2_cnt[9] .lut_mask = "5a5f";
defparam \led2_cnt[9] .operation_mode = "arithmetic";
defparam \led2_cnt[9] .output_mode = "reg_only";
defparam \led2_cnt[9] .register_cascade_mode = "off";
defparam \led2_cnt[9] .sum_lutc_input = "cin";
defparam \led2_cnt[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N4
maxii_lcell \led2_cnt[10] (
// Equation(s):
// led2_cnt[10] = DFFEAS(led2_cnt[10] $ ((((!(!\led2_cnt[5]~31  & \led2_cnt[9]~43 ) # (\led2_cnt[5]~31  & \led2_cnt[9]~43COUT1_72 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[10]~7  = CARRY((led2_cnt[10] & ((!\led2_cnt[9]~43COUT1_72 ))))

	.clk(\clk~combout ),
	.dataa(led2_cnt[10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[5]~31 ),
	.cin0(\led2_cnt[9]~43 ),
	.cin1(\led2_cnt[9]~43COUT1_72 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[10]),
	.cout(\led2_cnt[10]~7 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led2_cnt[10] .cin0_used = "true";
defparam \led2_cnt[10] .cin1_used = "true";
defparam \led2_cnt[10] .cin_used = "true";
defparam \led2_cnt[10] .lut_mask = "a50a";
defparam \led2_cnt[10] .operation_mode = "arithmetic";
defparam \led2_cnt[10] .output_mode = "reg_only";
defparam \led2_cnt[10] .register_cascade_mode = "off";
defparam \led2_cnt[10] .sum_lutc_input = "cin";
defparam \led2_cnt[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N5
maxii_lcell \led2_cnt[11] (
// Equation(s):
// led2_cnt[11] = DFFEAS(led2_cnt[11] $ ((((\led2_cnt[10]~7 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[11]~9  = CARRY(((!\led2_cnt[10]~7 )) # (!led2_cnt[11]))
// \led2_cnt[11]~9COUT1_73  = CARRY(((!\led2_cnt[10]~7 )) # (!led2_cnt[11]))

	.clk(\clk~combout ),
	.dataa(led2_cnt[11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[10]~7 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[11]),
	.cout(),
	.cout0(\led2_cnt[11]~9 ),
	.cout1(\led2_cnt[11]~9COUT1_73 ));
// synopsys translate_off
defparam \led2_cnt[11] .cin_used = "true";
defparam \led2_cnt[11] .lut_mask = "5a5f";
defparam \led2_cnt[11] .operation_mode = "arithmetic";
defparam \led2_cnt[11] .output_mode = "reg_only";
defparam \led2_cnt[11] .register_cascade_mode = "off";
defparam \led2_cnt[11] .sum_lutc_input = "cin";
defparam \led2_cnt[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N6
maxii_lcell \led2_cnt[12] (
// Equation(s):
// led2_cnt[12] = DFFEAS(led2_cnt[12] $ ((((!(!\led2_cnt[10]~7  & \led2_cnt[11]~9 ) # (\led2_cnt[10]~7  & \led2_cnt[11]~9COUT1_73 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[12]~41  = CARRY((led2_cnt[12] & ((!\led2_cnt[11]~9 ))))
// \led2_cnt[12]~41COUT1_74  = CARRY((led2_cnt[12] & ((!\led2_cnt[11]~9COUT1_73 ))))

	.clk(\clk~combout ),
	.dataa(led2_cnt[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[10]~7 ),
	.cin0(\led2_cnt[11]~9 ),
	.cin1(\led2_cnt[11]~9COUT1_73 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[12]),
	.cout(),
	.cout0(\led2_cnt[12]~41 ),
	.cout1(\led2_cnt[12]~41COUT1_74 ));
// synopsys translate_off
defparam \led2_cnt[12] .cin0_used = "true";
defparam \led2_cnt[12] .cin1_used = "true";
defparam \led2_cnt[12] .cin_used = "true";
defparam \led2_cnt[12] .lut_mask = "a50a";
defparam \led2_cnt[12] .operation_mode = "arithmetic";
defparam \led2_cnt[12] .output_mode = "reg_only";
defparam \led2_cnt[12] .register_cascade_mode = "off";
defparam \led2_cnt[12] .sum_lutc_input = "cin";
defparam \led2_cnt[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N7
maxii_lcell \led2_cnt[13] (
// Equation(s):
// led2_cnt[13] = DFFEAS((led2_cnt[13] $ (((!\led2_cnt[10]~7  & \led2_cnt[12]~41 ) # (\led2_cnt[10]~7  & \led2_cnt[12]~41COUT1_74 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[13]~11  = CARRY(((!\led2_cnt[12]~41 ) # (!led2_cnt[13])))
// \led2_cnt[13]~11COUT1_75  = CARRY(((!\led2_cnt[12]~41COUT1_74 ) # (!led2_cnt[13])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[13]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[10]~7 ),
	.cin0(\led2_cnt[12]~41 ),
	.cin1(\led2_cnt[12]~41COUT1_74 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[13]),
	.cout(),
	.cout0(\led2_cnt[13]~11 ),
	.cout1(\led2_cnt[13]~11COUT1_75 ));
// synopsys translate_off
defparam \led2_cnt[13] .cin0_used = "true";
defparam \led2_cnt[13] .cin1_used = "true";
defparam \led2_cnt[13] .cin_used = "true";
defparam \led2_cnt[13] .lut_mask = "3c3f";
defparam \led2_cnt[13] .operation_mode = "arithmetic";
defparam \led2_cnt[13] .output_mode = "reg_only";
defparam \led2_cnt[13] .register_cascade_mode = "off";
defparam \led2_cnt[13] .sum_lutc_input = "cin";
defparam \led2_cnt[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N8
maxii_lcell \led2_cnt[14] (
// Equation(s):
// led2_cnt[14] = DFFEAS(led2_cnt[14] $ ((((!(!\led2_cnt[10]~7  & \led2_cnt[13]~11 ) # (\led2_cnt[10]~7  & \led2_cnt[13]~11COUT1_75 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[14]~37  = CARRY((led2_cnt[14] & ((!\led2_cnt[13]~11 ))))
// \led2_cnt[14]~37COUT1_76  = CARRY((led2_cnt[14] & ((!\led2_cnt[13]~11COUT1_75 ))))

	.clk(\clk~combout ),
	.dataa(led2_cnt[14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[10]~7 ),
	.cin0(\led2_cnt[13]~11 ),
	.cin1(\led2_cnt[13]~11COUT1_75 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[14]),
	.cout(),
	.cout0(\led2_cnt[14]~37 ),
	.cout1(\led2_cnt[14]~37COUT1_76 ));
// synopsys translate_off
defparam \led2_cnt[14] .cin0_used = "true";
defparam \led2_cnt[14] .cin1_used = "true";
defparam \led2_cnt[14] .cin_used = "true";
defparam \led2_cnt[14] .lut_mask = "a50a";
defparam \led2_cnt[14] .operation_mode = "arithmetic";
defparam \led2_cnt[14] .output_mode = "reg_only";
defparam \led2_cnt[14] .register_cascade_mode = "off";
defparam \led2_cnt[14] .sum_lutc_input = "cin";
defparam \led2_cnt[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N9
maxii_lcell \led2_cnt[15] (
// Equation(s):
// led2_cnt[15] = DFFEAS((led2_cnt[15] $ (((!\led2_cnt[10]~7  & \led2_cnt[14]~37 ) # (\led2_cnt[10]~7  & \led2_cnt[14]~37COUT1_76 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[15]~39  = CARRY(((!\led2_cnt[14]~37COUT1_76 ) # (!led2_cnt[15])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[10]~7 ),
	.cin0(\led2_cnt[14]~37 ),
	.cin1(\led2_cnt[14]~37COUT1_76 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[15]),
	.cout(\led2_cnt[15]~39 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led2_cnt[15] .cin0_used = "true";
defparam \led2_cnt[15] .cin1_used = "true";
defparam \led2_cnt[15] .cin_used = "true";
defparam \led2_cnt[15] .lut_mask = "3c3f";
defparam \led2_cnt[15] .operation_mode = "arithmetic";
defparam \led2_cnt[15] .output_mode = "reg_only";
defparam \led2_cnt[15] .register_cascade_mode = "off";
defparam \led2_cnt[15] .sum_lutc_input = "cin";
defparam \led2_cnt[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N0
maxii_lcell \led2_cnt[16] (
// Equation(s):
// led2_cnt[16] = DFFEAS((led2_cnt[16] $ ((!\led2_cnt[15]~39 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[16]~13  = CARRY(((led2_cnt[16] & !\led2_cnt[15]~39 )))
// \led2_cnt[16]~13COUT1_77  = CARRY(((led2_cnt[16] & !\led2_cnt[15]~39 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[15]~39 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[16]),
	.cout(),
	.cout0(\led2_cnt[16]~13 ),
	.cout1(\led2_cnt[16]~13COUT1_77 ));
// synopsys translate_off
defparam \led2_cnt[16] .cin_used = "true";
defparam \led2_cnt[16] .lut_mask = "c30c";
defparam \led2_cnt[16] .operation_mode = "arithmetic";
defparam \led2_cnt[16] .output_mode = "reg_only";
defparam \led2_cnt[16] .register_cascade_mode = "off";
defparam \led2_cnt[16] .sum_lutc_input = "cin";
defparam \led2_cnt[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N1
maxii_lcell \led2_cnt[17] (
// Equation(s):
// led2_cnt[17] = DFFEAS((led2_cnt[17] $ (((!\led2_cnt[15]~39  & \led2_cnt[16]~13 ) # (\led2_cnt[15]~39  & \led2_cnt[16]~13COUT1_77 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[17]~45  = CARRY(((!\led2_cnt[16]~13 ) # (!led2_cnt[17])))
// \led2_cnt[17]~45COUT1_78  = CARRY(((!\led2_cnt[16]~13COUT1_77 ) # (!led2_cnt[17])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[15]~39 ),
	.cin0(\led2_cnt[16]~13 ),
	.cin1(\led2_cnt[16]~13COUT1_77 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[17]),
	.cout(),
	.cout0(\led2_cnt[17]~45 ),
	.cout1(\led2_cnt[17]~45COUT1_78 ));
// synopsys translate_off
defparam \led2_cnt[17] .cin0_used = "true";
defparam \led2_cnt[17] .cin1_used = "true";
defparam \led2_cnt[17] .cin_used = "true";
defparam \led2_cnt[17] .lut_mask = "3c3f";
defparam \led2_cnt[17] .operation_mode = "arithmetic";
defparam \led2_cnt[17] .output_mode = "reg_only";
defparam \led2_cnt[17] .register_cascade_mode = "off";
defparam \led2_cnt[17] .sum_lutc_input = "cin";
defparam \led2_cnt[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N2
maxii_lcell \led2_cnt[18] (
// Equation(s):
// led2_cnt[18] = DFFEAS((led2_cnt[18] $ ((!(!\led2_cnt[15]~39  & \led2_cnt[17]~45 ) # (\led2_cnt[15]~39  & \led2_cnt[17]~45COUT1_78 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[18]~47  = CARRY(((led2_cnt[18] & !\led2_cnt[17]~45 )))
// \led2_cnt[18]~47COUT1_79  = CARRY(((led2_cnt[18] & !\led2_cnt[17]~45COUT1_78 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[18]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[15]~39 ),
	.cin0(\led2_cnt[17]~45 ),
	.cin1(\led2_cnt[17]~45COUT1_78 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[18]),
	.cout(),
	.cout0(\led2_cnt[18]~47 ),
	.cout1(\led2_cnt[18]~47COUT1_79 ));
// synopsys translate_off
defparam \led2_cnt[18] .cin0_used = "true";
defparam \led2_cnt[18] .cin1_used = "true";
defparam \led2_cnt[18] .cin_used = "true";
defparam \led2_cnt[18] .lut_mask = "c30c";
defparam \led2_cnt[18] .operation_mode = "arithmetic";
defparam \led2_cnt[18] .output_mode = "reg_only";
defparam \led2_cnt[18] .register_cascade_mode = "off";
defparam \led2_cnt[18] .sum_lutc_input = "cin";
defparam \led2_cnt[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N3
maxii_lcell \led2_cnt[19] (
// Equation(s):
// led2_cnt[19] = DFFEAS(led2_cnt[19] $ (((((!\led2_cnt[15]~39  & \led2_cnt[18]~47 ) # (\led2_cnt[15]~39  & \led2_cnt[18]~47COUT1_79 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[19]~49  = CARRY(((!\led2_cnt[18]~47 )) # (!led2_cnt[19]))
// \led2_cnt[19]~49COUT1_80  = CARRY(((!\led2_cnt[18]~47COUT1_79 )) # (!led2_cnt[19]))

	.clk(\clk~combout ),
	.dataa(led2_cnt[19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[15]~39 ),
	.cin0(\led2_cnt[18]~47 ),
	.cin1(\led2_cnt[18]~47COUT1_79 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[19]),
	.cout(),
	.cout0(\led2_cnt[19]~49 ),
	.cout1(\led2_cnt[19]~49COUT1_80 ));
// synopsys translate_off
defparam \led2_cnt[19] .cin0_used = "true";
defparam \led2_cnt[19] .cin1_used = "true";
defparam \led2_cnt[19] .cin_used = "true";
defparam \led2_cnt[19] .lut_mask = "5a5f";
defparam \led2_cnt[19] .operation_mode = "arithmetic";
defparam \led2_cnt[19] .output_mode = "reg_only";
defparam \led2_cnt[19] .register_cascade_mode = "off";
defparam \led2_cnt[19] .sum_lutc_input = "cin";
defparam \led2_cnt[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N4
maxii_lcell \led2_cnt[20] (
// Equation(s):
// led2_cnt[20] = DFFEAS(led2_cnt[20] $ ((((!(!\led2_cnt[15]~39  & \led2_cnt[19]~49 ) # (\led2_cnt[15]~39  & \led2_cnt[19]~49COUT1_80 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[20]~15  = CARRY((led2_cnt[20] & ((!\led2_cnt[19]~49COUT1_80 ))))

	.clk(\clk~combout ),
	.dataa(led2_cnt[20]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[15]~39 ),
	.cin0(\led2_cnt[19]~49 ),
	.cin1(\led2_cnt[19]~49COUT1_80 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[20]),
	.cout(\led2_cnt[20]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led2_cnt[20] .cin0_used = "true";
defparam \led2_cnt[20] .cin1_used = "true";
defparam \led2_cnt[20] .cin_used = "true";
defparam \led2_cnt[20] .lut_mask = "a50a";
defparam \led2_cnt[20] .operation_mode = "arithmetic";
defparam \led2_cnt[20] .output_mode = "reg_only";
defparam \led2_cnt[20] .register_cascade_mode = "off";
defparam \led2_cnt[20] .sum_lutc_input = "cin";
defparam \led2_cnt[20] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N5
maxii_lcell \led2_cnt[21] (
// Equation(s):
// led2_cnt[21] = DFFEAS(led2_cnt[21] $ ((((\led2_cnt[20]~15 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[21]~17  = CARRY(((!\led2_cnt[20]~15 )) # (!led2_cnt[21]))
// \led2_cnt[21]~17COUT1_81  = CARRY(((!\led2_cnt[20]~15 )) # (!led2_cnt[21]))

	.clk(\clk~combout ),
	.dataa(led2_cnt[21]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[20]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[21]),
	.cout(),
	.cout0(\led2_cnt[21]~17 ),
	.cout1(\led2_cnt[21]~17COUT1_81 ));
// synopsys translate_off
defparam \led2_cnt[21] .cin_used = "true";
defparam \led2_cnt[21] .lut_mask = "5a5f";
defparam \led2_cnt[21] .operation_mode = "arithmetic";
defparam \led2_cnt[21] .output_mode = "reg_only";
defparam \led2_cnt[21] .register_cascade_mode = "off";
defparam \led2_cnt[21] .sum_lutc_input = "cin";
defparam \led2_cnt[21] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N6
maxii_lcell \led2_cnt[22] (
// Equation(s):
// led2_cnt[22] = DFFEAS(led2_cnt[22] $ ((((!(!\led2_cnt[20]~15  & \led2_cnt[21]~17 ) # (\led2_cnt[20]~15  & \led2_cnt[21]~17COUT1_81 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[22]~53  = CARRY((led2_cnt[22] & ((!\led2_cnt[21]~17 ))))
// \led2_cnt[22]~53COUT1_82  = CARRY((led2_cnt[22] & ((!\led2_cnt[21]~17COUT1_81 ))))

	.clk(\clk~combout ),
	.dataa(led2_cnt[22]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[20]~15 ),
	.cin0(\led2_cnt[21]~17 ),
	.cin1(\led2_cnt[21]~17COUT1_81 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[22]),
	.cout(),
	.cout0(\led2_cnt[22]~53 ),
	.cout1(\led2_cnt[22]~53COUT1_82 ));
// synopsys translate_off
defparam \led2_cnt[22] .cin0_used = "true";
defparam \led2_cnt[22] .cin1_used = "true";
defparam \led2_cnt[22] .cin_used = "true";
defparam \led2_cnt[22] .lut_mask = "a50a";
defparam \led2_cnt[22] .operation_mode = "arithmetic";
defparam \led2_cnt[22] .output_mode = "reg_only";
defparam \led2_cnt[22] .register_cascade_mode = "off";
defparam \led2_cnt[22] .sum_lutc_input = "cin";
defparam \led2_cnt[22] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N7
maxii_lcell \led2_cnt[23] (
// Equation(s):
// led2_cnt[23] = DFFEAS((led2_cnt[23] $ (((!\led2_cnt[20]~15  & \led2_cnt[22]~53 ) # (\led2_cnt[20]~15  & \led2_cnt[22]~53COUT1_82 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[23]~55  = CARRY(((!\led2_cnt[22]~53 ) # (!led2_cnt[23])))
// \led2_cnt[23]~55COUT1_83  = CARRY(((!\led2_cnt[22]~53COUT1_82 ) # (!led2_cnt[23])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[23]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[20]~15 ),
	.cin0(\led2_cnt[22]~53 ),
	.cin1(\led2_cnt[22]~53COUT1_82 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[23]),
	.cout(),
	.cout0(\led2_cnt[23]~55 ),
	.cout1(\led2_cnt[23]~55COUT1_83 ));
// synopsys translate_off
defparam \led2_cnt[23] .cin0_used = "true";
defparam \led2_cnt[23] .cin1_used = "true";
defparam \led2_cnt[23] .cin_used = "true";
defparam \led2_cnt[23] .lut_mask = "3c3f";
defparam \led2_cnt[23] .operation_mode = "arithmetic";
defparam \led2_cnt[23] .output_mode = "reg_only";
defparam \led2_cnt[23] .register_cascade_mode = "off";
defparam \led2_cnt[23] .sum_lutc_input = "cin";
defparam \led2_cnt[23] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N8
maxii_lcell \led2_cnt[24] (
// Equation(s):
// led2_cnt[24] = DFFEAS(led2_cnt[24] $ ((((!(!\led2_cnt[20]~15  & \led2_cnt[23]~55 ) # (\led2_cnt[20]~15  & \led2_cnt[23]~55COUT1_83 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[24]~19  = CARRY((led2_cnt[24] & ((!\led2_cnt[23]~55 ))))
// \led2_cnt[24]~19COUT1_84  = CARRY((led2_cnt[24] & ((!\led2_cnt[23]~55COUT1_83 ))))

	.clk(\clk~combout ),
	.dataa(led2_cnt[24]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[20]~15 ),
	.cin0(\led2_cnt[23]~55 ),
	.cin1(\led2_cnt[23]~55COUT1_83 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[24]),
	.cout(),
	.cout0(\led2_cnt[24]~19 ),
	.cout1(\led2_cnt[24]~19COUT1_84 ));
// synopsys translate_off
defparam \led2_cnt[24] .cin0_used = "true";
defparam \led2_cnt[24] .cin1_used = "true";
defparam \led2_cnt[24] .cin_used = "true";
defparam \led2_cnt[24] .lut_mask = "a50a";
defparam \led2_cnt[24] .operation_mode = "arithmetic";
defparam \led2_cnt[24] .output_mode = "reg_only";
defparam \led2_cnt[24] .register_cascade_mode = "off";
defparam \led2_cnt[24] .sum_lutc_input = "cin";
defparam \led2_cnt[24] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y1_N9
maxii_lcell \led2_cnt[25] (
// Equation(s):
// led2_cnt[25] = DFFEAS((led2_cnt[25] $ (((!\led2_cnt[20]~15  & \led2_cnt[24]~19 ) # (\led2_cnt[20]~15  & \led2_cnt[24]~19COUT1_84 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[25]~51  = CARRY(((!\led2_cnt[24]~19COUT1_84 ) # (!led2_cnt[25])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[25]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[20]~15 ),
	.cin0(\led2_cnt[24]~19 ),
	.cin1(\led2_cnt[24]~19COUT1_84 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[25]),
	.cout(\led2_cnt[25]~51 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led2_cnt[25] .cin0_used = "true";
defparam \led2_cnt[25] .cin1_used = "true";
defparam \led2_cnt[25] .cin_used = "true";
defparam \led2_cnt[25] .lut_mask = "3c3f";
defparam \led2_cnt[25] .operation_mode = "arithmetic";
defparam \led2_cnt[25] .output_mode = "reg_only";
defparam \led2_cnt[25] .register_cascade_mode = "off";
defparam \led2_cnt[25] .sum_lutc_input = "cin";
defparam \led2_cnt[25] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N0
maxii_lcell \led2_cnt[26] (
// Equation(s):
// led2_cnt[26] = DFFEAS((led2_cnt[26] $ ((!\led2_cnt[25]~51 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[26]~57  = CARRY(((led2_cnt[26] & !\led2_cnt[25]~51 )))
// \led2_cnt[26]~57COUT1_85  = CARRY(((led2_cnt[26] & !\led2_cnt[25]~51 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[26]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[25]~51 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[26]),
	.cout(),
	.cout0(\led2_cnt[26]~57 ),
	.cout1(\led2_cnt[26]~57COUT1_85 ));
// synopsys translate_off
defparam \led2_cnt[26] .cin_used = "true";
defparam \led2_cnt[26] .lut_mask = "c30c";
defparam \led2_cnt[26] .operation_mode = "arithmetic";
defparam \led2_cnt[26] .output_mode = "reg_only";
defparam \led2_cnt[26] .register_cascade_mode = "off";
defparam \led2_cnt[26] .sum_lutc_input = "cin";
defparam \led2_cnt[26] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N1
maxii_lcell \led2_cnt[27] (
// Equation(s):
// led2_cnt[27] = DFFEAS((led2_cnt[27] $ (((!\led2_cnt[25]~51  & \led2_cnt[26]~57 ) # (\led2_cnt[25]~51  & \led2_cnt[26]~57COUT1_85 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[27]~59  = CARRY(((!\led2_cnt[26]~57 ) # (!led2_cnt[27])))
// \led2_cnt[27]~59COUT1_86  = CARRY(((!\led2_cnt[26]~57COUT1_85 ) # (!led2_cnt[27])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[27]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[25]~51 ),
	.cin0(\led2_cnt[26]~57 ),
	.cin1(\led2_cnt[26]~57COUT1_85 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[27]),
	.cout(),
	.cout0(\led2_cnt[27]~59 ),
	.cout1(\led2_cnt[27]~59COUT1_86 ));
// synopsys translate_off
defparam \led2_cnt[27] .cin0_used = "true";
defparam \led2_cnt[27] .cin1_used = "true";
defparam \led2_cnt[27] .cin_used = "true";
defparam \led2_cnt[27] .lut_mask = "3c3f";
defparam \led2_cnt[27] .operation_mode = "arithmetic";
defparam \led2_cnt[27] .output_mode = "reg_only";
defparam \led2_cnt[27] .register_cascade_mode = "off";
defparam \led2_cnt[27] .sum_lutc_input = "cin";
defparam \led2_cnt[27] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N2
maxii_lcell \led2_cnt[28] (
// Equation(s):
// led2_cnt[28] = DFFEAS((led2_cnt[28] $ ((!(!\led2_cnt[25]~51  & \led2_cnt[27]~59 ) # (\led2_cnt[25]~51  & \led2_cnt[27]~59COUT1_86 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[28]~61  = CARRY(((led2_cnt[28] & !\led2_cnt[27]~59 )))
// \led2_cnt[28]~61COUT1_87  = CARRY(((led2_cnt[28] & !\led2_cnt[27]~59COUT1_86 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led2_cnt[28]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[25]~51 ),
	.cin0(\led2_cnt[27]~59 ),
	.cin1(\led2_cnt[27]~59COUT1_86 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[28]),
	.cout(),
	.cout0(\led2_cnt[28]~61 ),
	.cout1(\led2_cnt[28]~61COUT1_87 ));
// synopsys translate_off
defparam \led2_cnt[28] .cin0_used = "true";
defparam \led2_cnt[28] .cin1_used = "true";
defparam \led2_cnt[28] .cin_used = "true";
defparam \led2_cnt[28] .lut_mask = "c30c";
defparam \led2_cnt[28] .operation_mode = "arithmetic";
defparam \led2_cnt[28] .output_mode = "reg_only";
defparam \led2_cnt[28] .register_cascade_mode = "off";
defparam \led2_cnt[28] .sum_lutc_input = "cin";
defparam \led2_cnt[28] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N3
maxii_lcell \led2_cnt[29] (
// Equation(s):
// led2_cnt[29] = DFFEAS(led2_cnt[29] $ (((((!\led2_cnt[25]~51  & \led2_cnt[28]~61 ) # (\led2_cnt[25]~51  & \led2_cnt[28]~61COUT1_87 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[29]~63  = CARRY(((!\led2_cnt[28]~61 )) # (!led2_cnt[29]))
// \led2_cnt[29]~63COUT1_88  = CARRY(((!\led2_cnt[28]~61COUT1_87 )) # (!led2_cnt[29]))

	.clk(\clk~combout ),
	.dataa(led2_cnt[29]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[25]~51 ),
	.cin0(\led2_cnt[28]~61 ),
	.cin1(\led2_cnt[28]~61COUT1_87 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[29]),
	.cout(),
	.cout0(\led2_cnt[29]~63 ),
	.cout1(\led2_cnt[29]~63COUT1_88 ));
// synopsys translate_off
defparam \led2_cnt[29] .cin0_used = "true";
defparam \led2_cnt[29] .cin1_used = "true";
defparam \led2_cnt[29] .cin_used = "true";
defparam \led2_cnt[29] .lut_mask = "5a5f";
defparam \led2_cnt[29] .operation_mode = "arithmetic";
defparam \led2_cnt[29] .output_mode = "reg_only";
defparam \led2_cnt[29] .register_cascade_mode = "off";
defparam \led2_cnt[29] .sum_lutc_input = "cin";
defparam \led2_cnt[29] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N4
maxii_lcell \led2_cnt[30] (
// Equation(s):
// led2_cnt[30] = DFFEAS(led2_cnt[30] $ ((((!(!\led2_cnt[25]~51  & \led2_cnt[29]~63 ) # (\led2_cnt[25]~51  & \led2_cnt[29]~63COUT1_88 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )
// \led2_cnt[30]~1  = CARRY((led2_cnt[30] & ((!\led2_cnt[29]~63COUT1_88 ))))

	.clk(\clk~combout ),
	.dataa(led2_cnt[30]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[25]~51 ),
	.cin0(\led2_cnt[29]~63 ),
	.cin1(\led2_cnt[29]~63COUT1_88 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[30]),
	.cout(\led2_cnt[30]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led2_cnt[30] .cin0_used = "true";
defparam \led2_cnt[30] .cin1_used = "true";
defparam \led2_cnt[30] .cin_used = "true";
defparam \led2_cnt[30] .lut_mask = "a50a";
defparam \led2_cnt[30] .operation_mode = "arithmetic";
defparam \led2_cnt[30] .output_mode = "reg_only";
defparam \led2_cnt[30] .register_cascade_mode = "off";
defparam \led2_cnt[30] .sum_lutc_input = "cin";
defparam \led2_cnt[30] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N5
maxii_lcell \led2_cnt[31] (
// Equation(s):
// led2_cnt[31] = DFFEAS(led2_cnt[31] $ ((((\led2_cnt[30]~1 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan2~13_combout , )

	.clk(\clk~combout ),
	.dataa(led2_cnt[31]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan2~13_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led2_cnt[30]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led2_cnt[31]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led2_cnt[31] .cin_used = "true";
defparam \led2_cnt[31] .lut_mask = "5a5a";
defparam \led2_cnt[31] .operation_mode = "normal";
defparam \led2_cnt[31] .output_mode = "reg_only";
defparam \led2_cnt[31] .register_cascade_mode = "off";
defparam \led2_cnt[31] .sum_lutc_input = "cin";
defparam \led2_cnt[31] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y1_N8
maxii_lcell \LessThan2~11 (
// Equation(s):
// \LessThan2~11_combout  = (led2_cnt[29]) # ((led2_cnt[27]) # ((led2_cnt[26]) # (led2_cnt[28])))

	.clk(gnd),
	.dataa(led2_cnt[29]),
	.datab(led2_cnt[27]),
	.datac(led2_cnt[26]),
	.datad(led2_cnt[28]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~11 .lut_mask = "fffe";
defparam \LessThan2~11 .operation_mode = "normal";
defparam \LessThan2~11 .output_mode = "comb_only";
defparam \LessThan2~11 .register_cascade_mode = "off";
defparam \LessThan2~11 .sum_lutc_input = "datac";
defparam \LessThan2~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N0
maxii_lcell \LessThan2~10 (
// Equation(s):
// \LessThan2~10_combout  = (led2_cnt[25]) # ((led2_cnt[24] & ((led2_cnt[22]) # (led2_cnt[23]))))

	.clk(gnd),
	.dataa(led2_cnt[24]),
	.datab(led2_cnt[22]),
	.datac(led2_cnt[23]),
	.datad(led2_cnt[25]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~10 .lut_mask = "ffa8";
defparam \LessThan2~10 .operation_mode = "normal";
defparam \LessThan2~10 .output_mode = "comb_only";
defparam \LessThan2~10 .register_cascade_mode = "off";
defparam \LessThan2~10 .sum_lutc_input = "datac";
defparam \LessThan2~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N9
maxii_lcell \LessThan2~8 (
// Equation(s):
// \LessThan2~8_combout  = ((led2_cnt[21] & (led2_cnt[24] & led2_cnt[20])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led2_cnt[21]),
	.datac(led2_cnt[24]),
	.datad(led2_cnt[20]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~8 .lut_mask = "c000";
defparam \LessThan2~8 .operation_mode = "normal";
defparam \LessThan2~8 .output_mode = "comb_only";
defparam \LessThan2~8 .register_cascade_mode = "off";
defparam \LessThan2~8 .sum_lutc_input = "datac";
defparam \LessThan2~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N5
maxii_lcell \LessThan2~9 (
// Equation(s):
// \LessThan2~9_combout  = (\LessThan2~8_combout  & ((led2_cnt[19]) # ((led2_cnt[18]) # (led2_cnt[17]))))

	.clk(gnd),
	.dataa(led2_cnt[19]),
	.datab(led2_cnt[18]),
	.datac(led2_cnt[17]),
	.datad(\LessThan2~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~9 .lut_mask = "fe00";
defparam \LessThan2~9 .operation_mode = "normal";
defparam \LessThan2~9 .output_mode = "comb_only";
defparam \LessThan2~9 .register_cascade_mode = "off";
defparam \LessThan2~9 .sum_lutc_input = "datac";
defparam \LessThan2~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N1
maxii_lcell \LessThan2~6 (
// Equation(s):
// \LessThan2~6_combout  = (led2_cnt[12]) # ((led2_cnt[9] & (led2_cnt[10] & led2_cnt[11])))

	.clk(gnd),
	.dataa(led2_cnt[9]),
	.datab(led2_cnt[10]),
	.datac(led2_cnt[12]),
	.datad(led2_cnt[11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~6 .lut_mask = "f8f0";
defparam \LessThan2~6 .operation_mode = "normal";
defparam \LessThan2~6 .output_mode = "comb_only";
defparam \LessThan2~6 .register_cascade_mode = "off";
defparam \LessThan2~6 .sum_lutc_input = "datac";
defparam \LessThan2~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N2
maxii_lcell \LessThan2~5 (
// Equation(s):
// \LessThan2~5_combout  = (((led2_cnt[15]) # (led2_cnt[14])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(led2_cnt[15]),
	.datad(led2_cnt[14]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~5 .lut_mask = "fff0";
defparam \LessThan2~5 .operation_mode = "normal";
defparam \LessThan2~5 .output_mode = "comb_only";
defparam \LessThan2~5 .register_cascade_mode = "off";
defparam \LessThan2~5 .sum_lutc_input = "datac";
defparam \LessThan2~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N1
maxii_lcell \LessThan2~0 (
// Equation(s):
// \LessThan2~0_combout  = (led2_cnt[24] & (led2_cnt[21] & (led2_cnt[16] & led2_cnt[20])))

	.clk(gnd),
	.dataa(led2_cnt[24]),
	.datab(led2_cnt[21]),
	.datac(led2_cnt[16]),
	.datad(led2_cnt[20]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~0 .lut_mask = "8000";
defparam \LessThan2~0 .operation_mode = "normal";
defparam \LessThan2~0 .output_mode = "comb_only";
defparam \LessThan2~0 .register_cascade_mode = "off";
defparam \LessThan2~0 .sum_lutc_input = "datac";
defparam \LessThan2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N3
maxii_lcell \LessThan2~7 (
// Equation(s):
// \LessThan2~7_combout  = (\LessThan2~0_combout  & ((\LessThan2~5_combout ) # ((\LessThan2~6_combout  & led2_cnt[13]))))

	.clk(gnd),
	.dataa(\LessThan2~6_combout ),
	.datab(led2_cnt[13]),
	.datac(\LessThan2~5_combout ),
	.datad(\LessThan2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~7 .lut_mask = "f800";
defparam \LessThan2~7 .operation_mode = "normal";
defparam \LessThan2~7 .output_mode = "comb_only";
defparam \LessThan2~7 .register_cascade_mode = "off";
defparam \LessThan2~7 .sum_lutc_input = "datac";
defparam \LessThan2~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N6
maxii_lcell \LessThan2~12 (
// Equation(s):
// \LessThan2~12_combout  = (\LessThan2~11_combout ) # ((\LessThan2~10_combout ) # ((\LessThan2~9_combout ) # (\LessThan2~7_combout )))

	.clk(gnd),
	.dataa(\LessThan2~11_combout ),
	.datab(\LessThan2~10_combout ),
	.datac(\LessThan2~9_combout ),
	.datad(\LessThan2~7_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~12 .lut_mask = "fffe";
defparam \LessThan2~12 .operation_mode = "normal";
defparam \LessThan2~12 .output_mode = "comb_only";
defparam \LessThan2~12 .register_cascade_mode = "off";
defparam \LessThan2~12 .sum_lutc_input = "datac";
defparam \LessThan2~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N0
maxii_lcell \LessThan2~1 (
// Equation(s):
// \LessThan2~1_combout  = (led2_cnt[0]) # ((led2_cnt[3]) # ((led2_cnt[1]) # (led2_cnt[2])))

	.clk(gnd),
	.dataa(led2_cnt[0]),
	.datab(led2_cnt[3]),
	.datac(led2_cnt[1]),
	.datad(led2_cnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~1 .lut_mask = "fffe";
defparam \LessThan2~1 .operation_mode = "normal";
defparam \LessThan2~1 .output_mode = "comb_only";
defparam \LessThan2~1 .register_cascade_mode = "off";
defparam \LessThan2~1 .sum_lutc_input = "datac";
defparam \LessThan2~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y1_N3
maxii_lcell \LessThan2~2 (
// Equation(s):
// \LessThan2~2_combout  = (led2_cnt[4]) # ((led2_cnt[5]) # ((led2_cnt[6]) # (led2_cnt[7])))

	.clk(gnd),
	.dataa(led2_cnt[4]),
	.datab(led2_cnt[5]),
	.datac(led2_cnt[6]),
	.datad(led2_cnt[7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~2 .lut_mask = "fffe";
defparam \LessThan2~2 .operation_mode = "normal";
defparam \LessThan2~2 .output_mode = "comb_only";
defparam \LessThan2~2 .register_cascade_mode = "off";
defparam \LessThan2~2 .sum_lutc_input = "datac";
defparam \LessThan2~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N2
maxii_lcell \LessThan2~3 (
// Equation(s):
// \LessThan2~3_combout  = (led2_cnt[13] & (\LessThan2~0_combout  & ((\LessThan2~1_combout ) # (\LessThan2~2_combout ))))

	.clk(gnd),
	.dataa(\LessThan2~1_combout ),
	.datab(led2_cnt[13]),
	.datac(\LessThan2~2_combout ),
	.datad(\LessThan2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~3 .lut_mask = "c800";
defparam \LessThan2~3 .operation_mode = "normal";
defparam \LessThan2~3 .output_mode = "comb_only";
defparam \LessThan2~3 .register_cascade_mode = "off";
defparam \LessThan2~3 .sum_lutc_input = "datac";
defparam \LessThan2~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N7
maxii_lcell \LessThan2~4 (
// Equation(s):
// \LessThan2~4_combout  = (led2_cnt[11] & (led2_cnt[8] & (led2_cnt[10] & \LessThan2~3_combout )))

	.clk(gnd),
	.dataa(led2_cnt[11]),
	.datab(led2_cnt[8]),
	.datac(led2_cnt[10]),
	.datad(\LessThan2~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~4 .lut_mask = "8000";
defparam \LessThan2~4 .operation_mode = "normal";
defparam \LessThan2~4 .output_mode = "comb_only";
defparam \LessThan2~4 .register_cascade_mode = "off";
defparam \LessThan2~4 .sum_lutc_input = "datac";
defparam \LessThan2~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N8
maxii_lcell \LessThan2~13 (
// Equation(s):
// \LessThan2~13_combout  = (led2_cnt[31]) # ((led2_cnt[30]) # ((\LessThan2~12_combout ) # (\LessThan2~4_combout )))

	.clk(gnd),
	.dataa(led2_cnt[31]),
	.datab(led2_cnt[30]),
	.datac(\LessThan2~12_combout ),
	.datad(\LessThan2~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~13 .lut_mask = "fffe";
defparam \LessThan2~13 .operation_mode = "normal";
defparam \LessThan2~13 .output_mode = "comb_only";
defparam \LessThan2~13 .register_cascade_mode = "off";
defparam \LessThan2~13 .sum_lutc_input = "datac";
defparam \LessThan2~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y1_N4
maxii_lcell led2_status(
// Equation(s):
// \led2_status~regout  = DFFEAS(((\led2_status~regout  $ (\LessThan2~13_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\led2_status~regout ),
	.datad(\LessThan2~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\led2_status~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam led2_status.lut_mask = "0ff0";
defparam led2_status.operation_mode = "normal";
defparam led2_status.output_mode = "reg_only";
defparam led2_status.register_cascade_mode = "off";
defparam led2_status.sum_lutc_input = "datac";
defparam led2_status.synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N4
maxii_lcell \led3_cnt[0] (
// Equation(s):
// led3_cnt[0] = DFFEAS((!led3_cnt[0]), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[0]~23  = CARRY((led3_cnt[0]))

	.clk(\clk~combout ),
	.dataa(led3_cnt[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[0]),
	.cout(\led3_cnt[0]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led3_cnt[0] .lut_mask = "55aa";
defparam \led3_cnt[0] .operation_mode = "arithmetic";
defparam \led3_cnt[0] .output_mode = "reg_only";
defparam \led3_cnt[0] .register_cascade_mode = "off";
defparam \led3_cnt[0] .sum_lutc_input = "datac";
defparam \led3_cnt[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N5
maxii_lcell \led3_cnt[1] (
// Equation(s):
// led3_cnt[1] = DFFEAS(led3_cnt[1] $ ((((\led3_cnt[0]~23 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[1]~25  = CARRY(((!\led3_cnt[0]~23 )) # (!led3_cnt[1]))
// \led3_cnt[1]~25COUT1_65  = CARRY(((!\led3_cnt[0]~23 )) # (!led3_cnt[1]))

	.clk(\clk~combout ),
	.dataa(led3_cnt[1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[0]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[1]),
	.cout(),
	.cout0(\led3_cnt[1]~25 ),
	.cout1(\led3_cnt[1]~25COUT1_65 ));
// synopsys translate_off
defparam \led3_cnt[1] .cin_used = "true";
defparam \led3_cnt[1] .lut_mask = "5a5f";
defparam \led3_cnt[1] .operation_mode = "arithmetic";
defparam \led3_cnt[1] .output_mode = "reg_only";
defparam \led3_cnt[1] .register_cascade_mode = "off";
defparam \led3_cnt[1] .sum_lutc_input = "cin";
defparam \led3_cnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N6
maxii_lcell \led3_cnt[2] (
// Equation(s):
// led3_cnt[2] = DFFEAS(led3_cnt[2] $ ((((!(!\led3_cnt[0]~23  & \led3_cnt[1]~25 ) # (\led3_cnt[0]~23  & \led3_cnt[1]~25COUT1_65 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[2]~27  = CARRY((led3_cnt[2] & ((!\led3_cnt[1]~25 ))))
// \led3_cnt[2]~27COUT1_66  = CARRY((led3_cnt[2] & ((!\led3_cnt[1]~25COUT1_65 ))))

	.clk(\clk~combout ),
	.dataa(led3_cnt[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[0]~23 ),
	.cin0(\led3_cnt[1]~25 ),
	.cin1(\led3_cnt[1]~25COUT1_65 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[2]),
	.cout(),
	.cout0(\led3_cnt[2]~27 ),
	.cout1(\led3_cnt[2]~27COUT1_66 ));
// synopsys translate_off
defparam \led3_cnt[2] .cin0_used = "true";
defparam \led3_cnt[2] .cin1_used = "true";
defparam \led3_cnt[2] .cin_used = "true";
defparam \led3_cnt[2] .lut_mask = "a50a";
defparam \led3_cnt[2] .operation_mode = "arithmetic";
defparam \led3_cnt[2] .output_mode = "reg_only";
defparam \led3_cnt[2] .register_cascade_mode = "off";
defparam \led3_cnt[2] .sum_lutc_input = "cin";
defparam \led3_cnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N7
maxii_lcell \led3_cnt[3] (
// Equation(s):
// led3_cnt[3] = DFFEAS((led3_cnt[3] $ (((!\led3_cnt[0]~23  & \led3_cnt[2]~27 ) # (\led3_cnt[0]~23  & \led3_cnt[2]~27COUT1_66 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[3]~29  = CARRY(((!\led3_cnt[2]~27 ) # (!led3_cnt[3])))
// \led3_cnt[3]~29COUT1_67  = CARRY(((!\led3_cnt[2]~27COUT1_66 ) # (!led3_cnt[3])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[0]~23 ),
	.cin0(\led3_cnt[2]~27 ),
	.cin1(\led3_cnt[2]~27COUT1_66 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[3]),
	.cout(),
	.cout0(\led3_cnt[3]~29 ),
	.cout1(\led3_cnt[3]~29COUT1_67 ));
// synopsys translate_off
defparam \led3_cnt[3] .cin0_used = "true";
defparam \led3_cnt[3] .cin1_used = "true";
defparam \led3_cnt[3] .cin_used = "true";
defparam \led3_cnt[3] .lut_mask = "3c3f";
defparam \led3_cnt[3] .operation_mode = "arithmetic";
defparam \led3_cnt[3] .output_mode = "reg_only";
defparam \led3_cnt[3] .register_cascade_mode = "off";
defparam \led3_cnt[3] .sum_lutc_input = "cin";
defparam \led3_cnt[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N8
maxii_lcell \led3_cnt[4] (
// Equation(s):
// led3_cnt[4] = DFFEAS(led3_cnt[4] $ ((((!(!\led3_cnt[0]~23  & \led3_cnt[3]~29 ) # (\led3_cnt[0]~23  & \led3_cnt[3]~29COUT1_67 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[4]~31  = CARRY((led3_cnt[4] & ((!\led3_cnt[3]~29 ))))
// \led3_cnt[4]~31COUT1_68  = CARRY((led3_cnt[4] & ((!\led3_cnt[3]~29COUT1_67 ))))

	.clk(\clk~combout ),
	.dataa(led3_cnt[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[0]~23 ),
	.cin0(\led3_cnt[3]~29 ),
	.cin1(\led3_cnt[3]~29COUT1_67 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[4]),
	.cout(),
	.cout0(\led3_cnt[4]~31 ),
	.cout1(\led3_cnt[4]~31COUT1_68 ));
// synopsys translate_off
defparam \led3_cnt[4] .cin0_used = "true";
defparam \led3_cnt[4] .cin1_used = "true";
defparam \led3_cnt[4] .cin_used = "true";
defparam \led3_cnt[4] .lut_mask = "a50a";
defparam \led3_cnt[4] .operation_mode = "arithmetic";
defparam \led3_cnt[4] .output_mode = "reg_only";
defparam \led3_cnt[4] .register_cascade_mode = "off";
defparam \led3_cnt[4] .sum_lutc_input = "cin";
defparam \led3_cnt[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N9
maxii_lcell \led3_cnt[5] (
// Equation(s):
// led3_cnt[5] = DFFEAS((led3_cnt[5] $ (((!\led3_cnt[0]~23  & \led3_cnt[4]~31 ) # (\led3_cnt[0]~23  & \led3_cnt[4]~31COUT1_68 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[5]~33  = CARRY(((!\led3_cnt[4]~31COUT1_68 ) # (!led3_cnt[5])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[0]~23 ),
	.cin0(\led3_cnt[4]~31 ),
	.cin1(\led3_cnt[4]~31COUT1_68 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[5]),
	.cout(\led3_cnt[5]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led3_cnt[5] .cin0_used = "true";
defparam \led3_cnt[5] .cin1_used = "true";
defparam \led3_cnt[5] .cin_used = "true";
defparam \led3_cnt[5] .lut_mask = "3c3f";
defparam \led3_cnt[5] .operation_mode = "arithmetic";
defparam \led3_cnt[5] .output_mode = "reg_only";
defparam \led3_cnt[5] .register_cascade_mode = "off";
defparam \led3_cnt[5] .sum_lutc_input = "cin";
defparam \led3_cnt[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N0
maxii_lcell \led3_cnt[6] (
// Equation(s):
// led3_cnt[6] = DFFEAS((led3_cnt[6] $ ((!\led3_cnt[5]~33 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[6]~35  = CARRY(((led3_cnt[6] & !\led3_cnt[5]~33 )))
// \led3_cnt[6]~35COUT1_69  = CARRY(((led3_cnt[6] & !\led3_cnt[5]~33 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[5]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[6]),
	.cout(),
	.cout0(\led3_cnt[6]~35 ),
	.cout1(\led3_cnt[6]~35COUT1_69 ));
// synopsys translate_off
defparam \led3_cnt[6] .cin_used = "true";
defparam \led3_cnt[6] .lut_mask = "c30c";
defparam \led3_cnt[6] .operation_mode = "arithmetic";
defparam \led3_cnt[6] .output_mode = "reg_only";
defparam \led3_cnt[6] .register_cascade_mode = "off";
defparam \led3_cnt[6] .sum_lutc_input = "cin";
defparam \led3_cnt[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N1
maxii_lcell \led3_cnt[7] (
// Equation(s):
// led3_cnt[7] = DFFEAS((led3_cnt[7] $ (((!\led3_cnt[5]~33  & \led3_cnt[6]~35 ) # (\led3_cnt[5]~33  & \led3_cnt[6]~35COUT1_69 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[7]~9  = CARRY(((!\led3_cnt[6]~35 ) # (!led3_cnt[7])))
// \led3_cnt[7]~9COUT1_70  = CARRY(((!\led3_cnt[6]~35COUT1_69 ) # (!led3_cnt[7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[5]~33 ),
	.cin0(\led3_cnt[6]~35 ),
	.cin1(\led3_cnt[6]~35COUT1_69 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[7]),
	.cout(),
	.cout0(\led3_cnt[7]~9 ),
	.cout1(\led3_cnt[7]~9COUT1_70 ));
// synopsys translate_off
defparam \led3_cnt[7] .cin0_used = "true";
defparam \led3_cnt[7] .cin1_used = "true";
defparam \led3_cnt[7] .cin_used = "true";
defparam \led3_cnt[7] .lut_mask = "3c3f";
defparam \led3_cnt[7] .operation_mode = "arithmetic";
defparam \led3_cnt[7] .output_mode = "reg_only";
defparam \led3_cnt[7] .register_cascade_mode = "off";
defparam \led3_cnt[7] .sum_lutc_input = "cin";
defparam \led3_cnt[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N2
maxii_lcell \led3_cnt[8] (
// Equation(s):
// led3_cnt[8] = DFFEAS((led3_cnt[8] $ ((!(!\led3_cnt[5]~33  & \led3_cnt[7]~9 ) # (\led3_cnt[5]~33  & \led3_cnt[7]~9COUT1_70 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[8]~43  = CARRY(((led3_cnt[8] & !\led3_cnt[7]~9 )))
// \led3_cnt[8]~43COUT1_71  = CARRY(((led3_cnt[8] & !\led3_cnt[7]~9COUT1_70 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[5]~33 ),
	.cin0(\led3_cnt[7]~9 ),
	.cin1(\led3_cnt[7]~9COUT1_70 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[8]),
	.cout(),
	.cout0(\led3_cnt[8]~43 ),
	.cout1(\led3_cnt[8]~43COUT1_71 ));
// synopsys translate_off
defparam \led3_cnt[8] .cin0_used = "true";
defparam \led3_cnt[8] .cin1_used = "true";
defparam \led3_cnt[8] .cin_used = "true";
defparam \led3_cnt[8] .lut_mask = "c30c";
defparam \led3_cnt[8] .operation_mode = "arithmetic";
defparam \led3_cnt[8] .output_mode = "reg_only";
defparam \led3_cnt[8] .register_cascade_mode = "off";
defparam \led3_cnt[8] .sum_lutc_input = "cin";
defparam \led3_cnt[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N3
maxii_lcell \led3_cnt[9] (
// Equation(s):
// led3_cnt[9] = DFFEAS(led3_cnt[9] $ (((((!\led3_cnt[5]~33  & \led3_cnt[8]~43 ) # (\led3_cnt[5]~33  & \led3_cnt[8]~43COUT1_71 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[9]~17  = CARRY(((!\led3_cnt[8]~43 )) # (!led3_cnt[9]))
// \led3_cnt[9]~17COUT1_72  = CARRY(((!\led3_cnt[8]~43COUT1_71 )) # (!led3_cnt[9]))

	.clk(\clk~combout ),
	.dataa(led3_cnt[9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[5]~33 ),
	.cin0(\led3_cnt[8]~43 ),
	.cin1(\led3_cnt[8]~43COUT1_71 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[9]),
	.cout(),
	.cout0(\led3_cnt[9]~17 ),
	.cout1(\led3_cnt[9]~17COUT1_72 ));
// synopsys translate_off
defparam \led3_cnt[9] .cin0_used = "true";
defparam \led3_cnt[9] .cin1_used = "true";
defparam \led3_cnt[9] .cin_used = "true";
defparam \led3_cnt[9] .lut_mask = "5a5f";
defparam \led3_cnt[9] .operation_mode = "arithmetic";
defparam \led3_cnt[9] .output_mode = "reg_only";
defparam \led3_cnt[9] .register_cascade_mode = "off";
defparam \led3_cnt[9] .sum_lutc_input = "cin";
defparam \led3_cnt[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N4
maxii_lcell \led3_cnt[10] (
// Equation(s):
// led3_cnt[10] = DFFEAS(led3_cnt[10] $ ((((!(!\led3_cnt[5]~33  & \led3_cnt[9]~17 ) # (\led3_cnt[5]~33  & \led3_cnt[9]~17COUT1_72 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[10]~7  = CARRY((led3_cnt[10] & ((!\led3_cnt[9]~17COUT1_72 ))))

	.clk(\clk~combout ),
	.dataa(led3_cnt[10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[5]~33 ),
	.cin0(\led3_cnt[9]~17 ),
	.cin1(\led3_cnt[9]~17COUT1_72 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[10]),
	.cout(\led3_cnt[10]~7 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led3_cnt[10] .cin0_used = "true";
defparam \led3_cnt[10] .cin1_used = "true";
defparam \led3_cnt[10] .cin_used = "true";
defparam \led3_cnt[10] .lut_mask = "a50a";
defparam \led3_cnt[10] .operation_mode = "arithmetic";
defparam \led3_cnt[10] .output_mode = "reg_only";
defparam \led3_cnt[10] .register_cascade_mode = "off";
defparam \led3_cnt[10] .sum_lutc_input = "cin";
defparam \led3_cnt[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N5
maxii_lcell \led3_cnt[11] (
// Equation(s):
// led3_cnt[11] = DFFEAS(led3_cnt[11] $ ((((\led3_cnt[10]~7 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[11]~41  = CARRY(((!\led3_cnt[10]~7 )) # (!led3_cnt[11]))
// \led3_cnt[11]~41COUT1_73  = CARRY(((!\led3_cnt[10]~7 )) # (!led3_cnt[11]))

	.clk(\clk~combout ),
	.dataa(led3_cnt[11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[10]~7 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[11]),
	.cout(),
	.cout0(\led3_cnt[11]~41 ),
	.cout1(\led3_cnt[11]~41COUT1_73 ));
// synopsys translate_off
defparam \led3_cnt[11] .cin_used = "true";
defparam \led3_cnt[11] .lut_mask = "5a5f";
defparam \led3_cnt[11] .operation_mode = "arithmetic";
defparam \led3_cnt[11] .output_mode = "reg_only";
defparam \led3_cnt[11] .register_cascade_mode = "off";
defparam \led3_cnt[11] .sum_lutc_input = "cin";
defparam \led3_cnt[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N6
maxii_lcell \led3_cnt[12] (
// Equation(s):
// led3_cnt[12] = DFFEAS(led3_cnt[12] $ ((((!(!\led3_cnt[10]~7  & \led3_cnt[11]~41 ) # (\led3_cnt[10]~7  & \led3_cnt[11]~41COUT1_73 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[12]~13  = CARRY((led3_cnt[12] & ((!\led3_cnt[11]~41 ))))
// \led3_cnt[12]~13COUT1_74  = CARRY((led3_cnt[12] & ((!\led3_cnt[11]~41COUT1_73 ))))

	.clk(\clk~combout ),
	.dataa(led3_cnt[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[10]~7 ),
	.cin0(\led3_cnt[11]~41 ),
	.cin1(\led3_cnt[11]~41COUT1_73 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[12]),
	.cout(),
	.cout0(\led3_cnt[12]~13 ),
	.cout1(\led3_cnt[12]~13COUT1_74 ));
// synopsys translate_off
defparam \led3_cnt[12] .cin0_used = "true";
defparam \led3_cnt[12] .cin1_used = "true";
defparam \led3_cnt[12] .cin_used = "true";
defparam \led3_cnt[12] .lut_mask = "a50a";
defparam \led3_cnt[12] .operation_mode = "arithmetic";
defparam \led3_cnt[12] .output_mode = "reg_only";
defparam \led3_cnt[12] .register_cascade_mode = "off";
defparam \led3_cnt[12] .sum_lutc_input = "cin";
defparam \led3_cnt[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N7
maxii_lcell \led3_cnt[13] (
// Equation(s):
// led3_cnt[13] = DFFEAS((led3_cnt[13] $ (((!\led3_cnt[10]~7  & \led3_cnt[12]~13 ) # (\led3_cnt[10]~7  & \led3_cnt[12]~13COUT1_74 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[13]~37  = CARRY(((!\led3_cnt[12]~13 ) # (!led3_cnt[13])))
// \led3_cnt[13]~37COUT1_75  = CARRY(((!\led3_cnt[12]~13COUT1_74 ) # (!led3_cnt[13])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[13]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[10]~7 ),
	.cin0(\led3_cnt[12]~13 ),
	.cin1(\led3_cnt[12]~13COUT1_74 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[13]),
	.cout(),
	.cout0(\led3_cnt[13]~37 ),
	.cout1(\led3_cnt[13]~37COUT1_75 ));
// synopsys translate_off
defparam \led3_cnt[13] .cin0_used = "true";
defparam \led3_cnt[13] .cin1_used = "true";
defparam \led3_cnt[13] .cin_used = "true";
defparam \led3_cnt[13] .lut_mask = "3c3f";
defparam \led3_cnt[13] .operation_mode = "arithmetic";
defparam \led3_cnt[13] .output_mode = "reg_only";
defparam \led3_cnt[13] .register_cascade_mode = "off";
defparam \led3_cnt[13] .sum_lutc_input = "cin";
defparam \led3_cnt[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N8
maxii_lcell \led3_cnt[14] (
// Equation(s):
// led3_cnt[14] = DFFEAS(led3_cnt[14] $ ((((!(!\led3_cnt[10]~7  & \led3_cnt[13]~37 ) # (\led3_cnt[10]~7  & \led3_cnt[13]~37COUT1_75 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[14]~39  = CARRY((led3_cnt[14] & ((!\led3_cnt[13]~37 ))))
// \led3_cnt[14]~39COUT1_76  = CARRY((led3_cnt[14] & ((!\led3_cnt[13]~37COUT1_75 ))))

	.clk(\clk~combout ),
	.dataa(led3_cnt[14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[10]~7 ),
	.cin0(\led3_cnt[13]~37 ),
	.cin1(\led3_cnt[13]~37COUT1_75 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[14]),
	.cout(),
	.cout0(\led3_cnt[14]~39 ),
	.cout1(\led3_cnt[14]~39COUT1_76 ));
// synopsys translate_off
defparam \led3_cnt[14] .cin0_used = "true";
defparam \led3_cnt[14] .cin1_used = "true";
defparam \led3_cnt[14] .cin_used = "true";
defparam \led3_cnt[14] .lut_mask = "a50a";
defparam \led3_cnt[14] .operation_mode = "arithmetic";
defparam \led3_cnt[14] .output_mode = "reg_only";
defparam \led3_cnt[14] .register_cascade_mode = "off";
defparam \led3_cnt[14] .sum_lutc_input = "cin";
defparam \led3_cnt[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N9
maxii_lcell \led3_cnt[15] (
// Equation(s):
// led3_cnt[15] = DFFEAS((led3_cnt[15] $ (((!\led3_cnt[10]~7  & \led3_cnt[14]~39 ) # (\led3_cnt[10]~7  & \led3_cnt[14]~39COUT1_76 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[15]~15  = CARRY(((!\led3_cnt[14]~39COUT1_76 ) # (!led3_cnt[15])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[10]~7 ),
	.cin0(\led3_cnt[14]~39 ),
	.cin1(\led3_cnt[14]~39COUT1_76 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[15]),
	.cout(\led3_cnt[15]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led3_cnt[15] .cin0_used = "true";
defparam \led3_cnt[15] .cin1_used = "true";
defparam \led3_cnt[15] .cin_used = "true";
defparam \led3_cnt[15] .lut_mask = "3c3f";
defparam \led3_cnt[15] .operation_mode = "arithmetic";
defparam \led3_cnt[15] .output_mode = "reg_only";
defparam \led3_cnt[15] .register_cascade_mode = "off";
defparam \led3_cnt[15] .sum_lutc_input = "cin";
defparam \led3_cnt[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N0
maxii_lcell \led3_cnt[16] (
// Equation(s):
// led3_cnt[16] = DFFEAS((led3_cnt[16] $ ((!\led3_cnt[15]~15 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[16]~59  = CARRY(((led3_cnt[16] & !\led3_cnt[15]~15 )))
// \led3_cnt[16]~59COUT1_77  = CARRY(((led3_cnt[16] & !\led3_cnt[15]~15 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[15]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[16]),
	.cout(),
	.cout0(\led3_cnt[16]~59 ),
	.cout1(\led3_cnt[16]~59COUT1_77 ));
// synopsys translate_off
defparam \led3_cnt[16] .cin_used = "true";
defparam \led3_cnt[16] .lut_mask = "c30c";
defparam \led3_cnt[16] .operation_mode = "arithmetic";
defparam \led3_cnt[16] .output_mode = "reg_only";
defparam \led3_cnt[16] .register_cascade_mode = "off";
defparam \led3_cnt[16] .sum_lutc_input = "cin";
defparam \led3_cnt[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N1
maxii_lcell \led3_cnt[17] (
// Equation(s):
// led3_cnt[17] = DFFEAS((led3_cnt[17] $ (((!\led3_cnt[15]~15  & \led3_cnt[16]~59 ) # (\led3_cnt[15]~15  & \led3_cnt[16]~59COUT1_77 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[17]~61  = CARRY(((!\led3_cnt[16]~59 ) # (!led3_cnt[17])))
// \led3_cnt[17]~61COUT1_78  = CARRY(((!\led3_cnt[16]~59COUT1_77 ) # (!led3_cnt[17])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[15]~15 ),
	.cin0(\led3_cnt[16]~59 ),
	.cin1(\led3_cnt[16]~59COUT1_77 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[17]),
	.cout(),
	.cout0(\led3_cnt[17]~61 ),
	.cout1(\led3_cnt[17]~61COUT1_78 ));
// synopsys translate_off
defparam \led3_cnt[17] .cin0_used = "true";
defparam \led3_cnt[17] .cin1_used = "true";
defparam \led3_cnt[17] .cin_used = "true";
defparam \led3_cnt[17] .lut_mask = "3c3f";
defparam \led3_cnt[17] .operation_mode = "arithmetic";
defparam \led3_cnt[17] .output_mode = "reg_only";
defparam \led3_cnt[17] .register_cascade_mode = "off";
defparam \led3_cnt[17] .sum_lutc_input = "cin";
defparam \led3_cnt[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N2
maxii_lcell \led3_cnt[18] (
// Equation(s):
// led3_cnt[18] = DFFEAS((led3_cnt[18] $ ((!(!\led3_cnt[15]~15  & \led3_cnt[17]~61 ) # (\led3_cnt[15]~15  & \led3_cnt[17]~61COUT1_78 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[18]~63  = CARRY(((led3_cnt[18] & !\led3_cnt[17]~61 )))
// \led3_cnt[18]~63COUT1_79  = CARRY(((led3_cnt[18] & !\led3_cnt[17]~61COUT1_78 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[18]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[15]~15 ),
	.cin0(\led3_cnt[17]~61 ),
	.cin1(\led3_cnt[17]~61COUT1_78 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[18]),
	.cout(),
	.cout0(\led3_cnt[18]~63 ),
	.cout1(\led3_cnt[18]~63COUT1_79 ));
// synopsys translate_off
defparam \led3_cnt[18] .cin0_used = "true";
defparam \led3_cnt[18] .cin1_used = "true";
defparam \led3_cnt[18] .cin_used = "true";
defparam \led3_cnt[18] .lut_mask = "c30c";
defparam \led3_cnt[18] .operation_mode = "arithmetic";
defparam \led3_cnt[18] .output_mode = "reg_only";
defparam \led3_cnt[18] .register_cascade_mode = "off";
defparam \led3_cnt[18] .sum_lutc_input = "cin";
defparam \led3_cnt[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N3
maxii_lcell \led3_cnt[19] (
// Equation(s):
// led3_cnt[19] = DFFEAS(led3_cnt[19] $ (((((!\led3_cnt[15]~15  & \led3_cnt[18]~63 ) # (\led3_cnt[15]~15  & \led3_cnt[18]~63COUT1_79 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[19]~19  = CARRY(((!\led3_cnt[18]~63 )) # (!led3_cnt[19]))
// \led3_cnt[19]~19COUT1_80  = CARRY(((!\led3_cnt[18]~63COUT1_79 )) # (!led3_cnt[19]))

	.clk(\clk~combout ),
	.dataa(led3_cnt[19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[15]~15 ),
	.cin0(\led3_cnt[18]~63 ),
	.cin1(\led3_cnt[18]~63COUT1_79 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[19]),
	.cout(),
	.cout0(\led3_cnt[19]~19 ),
	.cout1(\led3_cnt[19]~19COUT1_80 ));
// synopsys translate_off
defparam \led3_cnt[19] .cin0_used = "true";
defparam \led3_cnt[19] .cin1_used = "true";
defparam \led3_cnt[19] .cin_used = "true";
defparam \led3_cnt[19] .lut_mask = "5a5f";
defparam \led3_cnt[19] .operation_mode = "arithmetic";
defparam \led3_cnt[19] .output_mode = "reg_only";
defparam \led3_cnt[19] .register_cascade_mode = "off";
defparam \led3_cnt[19] .sum_lutc_input = "cin";
defparam \led3_cnt[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N4
maxii_lcell \led3_cnt[20] (
// Equation(s):
// led3_cnt[20] = DFFEAS(led3_cnt[20] $ ((((!(!\led3_cnt[15]~15  & \led3_cnt[19]~19 ) # (\led3_cnt[15]~15  & \led3_cnt[19]~19COUT1_80 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[20]~21  = CARRY((led3_cnt[20] & ((!\led3_cnt[19]~19COUT1_80 ))))

	.clk(\clk~combout ),
	.dataa(led3_cnt[20]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[15]~15 ),
	.cin0(\led3_cnt[19]~19 ),
	.cin1(\led3_cnt[19]~19COUT1_80 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[20]),
	.cout(\led3_cnt[20]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led3_cnt[20] .cin0_used = "true";
defparam \led3_cnt[20] .cin1_used = "true";
defparam \led3_cnt[20] .cin_used = "true";
defparam \led3_cnt[20] .lut_mask = "a50a";
defparam \led3_cnt[20] .operation_mode = "arithmetic";
defparam \led3_cnt[20] .output_mode = "reg_only";
defparam \led3_cnt[20] .register_cascade_mode = "off";
defparam \led3_cnt[20] .sum_lutc_input = "cin";
defparam \led3_cnt[20] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N5
maxii_lcell \led3_cnt[21] (
// Equation(s):
// led3_cnt[21] = DFFEAS(led3_cnt[21] $ ((((\led3_cnt[20]~21 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[21]~55  = CARRY(((!\led3_cnt[20]~21 )) # (!led3_cnt[21]))
// \led3_cnt[21]~55COUT1_81  = CARRY(((!\led3_cnt[20]~21 )) # (!led3_cnt[21]))

	.clk(\clk~combout ),
	.dataa(led3_cnt[21]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[20]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[21]),
	.cout(),
	.cout0(\led3_cnt[21]~55 ),
	.cout1(\led3_cnt[21]~55COUT1_81 ));
// synopsys translate_off
defparam \led3_cnt[21] .cin_used = "true";
defparam \led3_cnt[21] .lut_mask = "5a5f";
defparam \led3_cnt[21] .operation_mode = "arithmetic";
defparam \led3_cnt[21] .output_mode = "reg_only";
defparam \led3_cnt[21] .register_cascade_mode = "off";
defparam \led3_cnt[21] .sum_lutc_input = "cin";
defparam \led3_cnt[21] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N6
maxii_lcell \led3_cnt[22] (
// Equation(s):
// led3_cnt[22] = DFFEAS(led3_cnt[22] $ ((((!(!\led3_cnt[20]~21  & \led3_cnt[21]~55 ) # (\led3_cnt[20]~21  & \led3_cnt[21]~55COUT1_81 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[22]~57  = CARRY((led3_cnt[22] & ((!\led3_cnt[21]~55 ))))
// \led3_cnt[22]~57COUT1_82  = CARRY((led3_cnt[22] & ((!\led3_cnt[21]~55COUT1_81 ))))

	.clk(\clk~combout ),
	.dataa(led3_cnt[22]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[20]~21 ),
	.cin0(\led3_cnt[21]~55 ),
	.cin1(\led3_cnt[21]~55COUT1_81 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[22]),
	.cout(),
	.cout0(\led3_cnt[22]~57 ),
	.cout1(\led3_cnt[22]~57COUT1_82 ));
// synopsys translate_off
defparam \led3_cnt[22] .cin0_used = "true";
defparam \led3_cnt[22] .cin1_used = "true";
defparam \led3_cnt[22] .cin_used = "true";
defparam \led3_cnt[22] .lut_mask = "a50a";
defparam \led3_cnt[22] .operation_mode = "arithmetic";
defparam \led3_cnt[22] .output_mode = "reg_only";
defparam \led3_cnt[22] .register_cascade_mode = "off";
defparam \led3_cnt[22] .sum_lutc_input = "cin";
defparam \led3_cnt[22] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N7
maxii_lcell \led3_cnt[23] (
// Equation(s):
// led3_cnt[23] = DFFEAS((led3_cnt[23] $ (((!\led3_cnt[20]~21  & \led3_cnt[22]~57 ) # (\led3_cnt[20]~21  & \led3_cnt[22]~57COUT1_82 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[23]~11  = CARRY(((!\led3_cnt[22]~57 ) # (!led3_cnt[23])))
// \led3_cnt[23]~11COUT1_83  = CARRY(((!\led3_cnt[22]~57COUT1_82 ) # (!led3_cnt[23])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[23]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[20]~21 ),
	.cin0(\led3_cnt[22]~57 ),
	.cin1(\led3_cnt[22]~57COUT1_82 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[23]),
	.cout(),
	.cout0(\led3_cnt[23]~11 ),
	.cout1(\led3_cnt[23]~11COUT1_83 ));
// synopsys translate_off
defparam \led3_cnt[23] .cin0_used = "true";
defparam \led3_cnt[23] .cin1_used = "true";
defparam \led3_cnt[23] .cin_used = "true";
defparam \led3_cnt[23] .lut_mask = "3c3f";
defparam \led3_cnt[23] .operation_mode = "arithmetic";
defparam \led3_cnt[23] .output_mode = "reg_only";
defparam \led3_cnt[23] .register_cascade_mode = "off";
defparam \led3_cnt[23] .sum_lutc_input = "cin";
defparam \led3_cnt[23] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N8
maxii_lcell \led3_cnt[24] (
// Equation(s):
// led3_cnt[24] = DFFEAS(led3_cnt[24] $ ((((!(!\led3_cnt[20]~21  & \led3_cnt[23]~11 ) # (\led3_cnt[20]~21  & \led3_cnt[23]~11COUT1_83 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[24]~45  = CARRY((led3_cnt[24] & ((!\led3_cnt[23]~11 ))))
// \led3_cnt[24]~45COUT1_84  = CARRY((led3_cnt[24] & ((!\led3_cnt[23]~11COUT1_83 ))))

	.clk(\clk~combout ),
	.dataa(led3_cnt[24]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[20]~21 ),
	.cin0(\led3_cnt[23]~11 ),
	.cin1(\led3_cnt[23]~11COUT1_83 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[24]),
	.cout(),
	.cout0(\led3_cnt[24]~45 ),
	.cout1(\led3_cnt[24]~45COUT1_84 ));
// synopsys translate_off
defparam \led3_cnt[24] .cin0_used = "true";
defparam \led3_cnt[24] .cin1_used = "true";
defparam \led3_cnt[24] .cin_used = "true";
defparam \led3_cnt[24] .lut_mask = "a50a";
defparam \led3_cnt[24] .operation_mode = "arithmetic";
defparam \led3_cnt[24] .output_mode = "reg_only";
defparam \led3_cnt[24] .register_cascade_mode = "off";
defparam \led3_cnt[24] .sum_lutc_input = "cin";
defparam \led3_cnt[24] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N9
maxii_lcell \led3_cnt[25] (
// Equation(s):
// led3_cnt[25] = DFFEAS((led3_cnt[25] $ (((!\led3_cnt[20]~21  & \led3_cnt[24]~45 ) # (\led3_cnt[20]~21  & \led3_cnt[24]~45COUT1_84 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[25]~47  = CARRY(((!\led3_cnt[24]~45COUT1_84 ) # (!led3_cnt[25])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[25]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[20]~21 ),
	.cin0(\led3_cnt[24]~45 ),
	.cin1(\led3_cnt[24]~45COUT1_84 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[25]),
	.cout(\led3_cnt[25]~47 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led3_cnt[25] .cin0_used = "true";
defparam \led3_cnt[25] .cin1_used = "true";
defparam \led3_cnt[25] .cin_used = "true";
defparam \led3_cnt[25] .lut_mask = "3c3f";
defparam \led3_cnt[25] .operation_mode = "arithmetic";
defparam \led3_cnt[25] .output_mode = "reg_only";
defparam \led3_cnt[25] .register_cascade_mode = "off";
defparam \led3_cnt[25] .sum_lutc_input = "cin";
defparam \led3_cnt[25] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N0
maxii_lcell \led3_cnt[26] (
// Equation(s):
// led3_cnt[26] = DFFEAS((led3_cnt[26] $ ((!\led3_cnt[25]~47 ))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[26]~49  = CARRY(((led3_cnt[26] & !\led3_cnt[25]~47 )))
// \led3_cnt[26]~49COUT1_85  = CARRY(((led3_cnt[26] & !\led3_cnt[25]~47 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[26]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[25]~47 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[26]),
	.cout(),
	.cout0(\led3_cnt[26]~49 ),
	.cout1(\led3_cnt[26]~49COUT1_85 ));
// synopsys translate_off
defparam \led3_cnt[26] .cin_used = "true";
defparam \led3_cnt[26] .lut_mask = "c30c";
defparam \led3_cnt[26] .operation_mode = "arithmetic";
defparam \led3_cnt[26] .output_mode = "reg_only";
defparam \led3_cnt[26] .register_cascade_mode = "off";
defparam \led3_cnt[26] .sum_lutc_input = "cin";
defparam \led3_cnt[26] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N1
maxii_lcell \led3_cnt[27] (
// Equation(s):
// led3_cnt[27] = DFFEAS((led3_cnt[27] $ (((!\led3_cnt[25]~47  & \led3_cnt[26]~49 ) # (\led3_cnt[25]~47  & \led3_cnt[26]~49COUT1_85 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[27]~51  = CARRY(((!\led3_cnt[26]~49 ) # (!led3_cnt[27])))
// \led3_cnt[27]~51COUT1_86  = CARRY(((!\led3_cnt[26]~49COUT1_85 ) # (!led3_cnt[27])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[27]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[25]~47 ),
	.cin0(\led3_cnt[26]~49 ),
	.cin1(\led3_cnt[26]~49COUT1_85 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[27]),
	.cout(),
	.cout0(\led3_cnt[27]~51 ),
	.cout1(\led3_cnt[27]~51COUT1_86 ));
// synopsys translate_off
defparam \led3_cnt[27] .cin0_used = "true";
defparam \led3_cnt[27] .cin1_used = "true";
defparam \led3_cnt[27] .cin_used = "true";
defparam \led3_cnt[27] .lut_mask = "3c3f";
defparam \led3_cnt[27] .operation_mode = "arithmetic";
defparam \led3_cnt[27] .output_mode = "reg_only";
defparam \led3_cnt[27] .register_cascade_mode = "off";
defparam \led3_cnt[27] .sum_lutc_input = "cin";
defparam \led3_cnt[27] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N2
maxii_lcell \led3_cnt[28] (
// Equation(s):
// led3_cnt[28] = DFFEAS((led3_cnt[28] $ ((!(!\led3_cnt[25]~47  & \led3_cnt[27]~51 ) # (\led3_cnt[25]~47  & \led3_cnt[27]~51COUT1_86 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[28]~53  = CARRY(((led3_cnt[28] & !\led3_cnt[27]~51 )))
// \led3_cnt[28]~53COUT1_87  = CARRY(((led3_cnt[28] & !\led3_cnt[27]~51COUT1_86 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(led3_cnt[28]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[25]~47 ),
	.cin0(\led3_cnt[27]~51 ),
	.cin1(\led3_cnt[27]~51COUT1_86 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[28]),
	.cout(),
	.cout0(\led3_cnt[28]~53 ),
	.cout1(\led3_cnt[28]~53COUT1_87 ));
// synopsys translate_off
defparam \led3_cnt[28] .cin0_used = "true";
defparam \led3_cnt[28] .cin1_used = "true";
defparam \led3_cnt[28] .cin_used = "true";
defparam \led3_cnt[28] .lut_mask = "c30c";
defparam \led3_cnt[28] .operation_mode = "arithmetic";
defparam \led3_cnt[28] .output_mode = "reg_only";
defparam \led3_cnt[28] .register_cascade_mode = "off";
defparam \led3_cnt[28] .sum_lutc_input = "cin";
defparam \led3_cnt[28] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N3
maxii_lcell \led3_cnt[29] (
// Equation(s):
// led3_cnt[29] = DFFEAS(led3_cnt[29] $ (((((!\led3_cnt[25]~47  & \led3_cnt[28]~53 ) # (\led3_cnt[25]~47  & \led3_cnt[28]~53COUT1_87 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[29]~1  = CARRY(((!\led3_cnt[28]~53 )) # (!led3_cnt[29]))
// \led3_cnt[29]~1COUT1_88  = CARRY(((!\led3_cnt[28]~53COUT1_87 )) # (!led3_cnt[29]))

	.clk(\clk~combout ),
	.dataa(led3_cnt[29]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[25]~47 ),
	.cin0(\led3_cnt[28]~53 ),
	.cin1(\led3_cnt[28]~53COUT1_87 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[29]),
	.cout(),
	.cout0(\led3_cnt[29]~1 ),
	.cout1(\led3_cnt[29]~1COUT1_88 ));
// synopsys translate_off
defparam \led3_cnt[29] .cin0_used = "true";
defparam \led3_cnt[29] .cin1_used = "true";
defparam \led3_cnt[29] .cin_used = "true";
defparam \led3_cnt[29] .lut_mask = "5a5f";
defparam \led3_cnt[29] .operation_mode = "arithmetic";
defparam \led3_cnt[29] .output_mode = "reg_only";
defparam \led3_cnt[29] .register_cascade_mode = "off";
defparam \led3_cnt[29] .sum_lutc_input = "cin";
defparam \led3_cnt[29] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N4
maxii_lcell \led3_cnt[30] (
// Equation(s):
// led3_cnt[30] = DFFEAS(led3_cnt[30] $ ((((!(!\led3_cnt[25]~47  & \led3_cnt[29]~1 ) # (\led3_cnt[25]~47  & \led3_cnt[29]~1COUT1_88 ))))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )
// \led3_cnt[30]~3  = CARRY((led3_cnt[30] & ((!\led3_cnt[29]~1COUT1_88 ))))

	.clk(\clk~combout ),
	.dataa(led3_cnt[30]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[25]~47 ),
	.cin0(\led3_cnt[29]~1 ),
	.cin1(\led3_cnt[29]~1COUT1_88 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[30]),
	.cout(\led3_cnt[30]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led3_cnt[30] .cin0_used = "true";
defparam \led3_cnt[30] .cin1_used = "true";
defparam \led3_cnt[30] .cin_used = "true";
defparam \led3_cnt[30] .lut_mask = "a50a";
defparam \led3_cnt[30] .operation_mode = "arithmetic";
defparam \led3_cnt[30] .output_mode = "reg_only";
defparam \led3_cnt[30] .register_cascade_mode = "off";
defparam \led3_cnt[30] .sum_lutc_input = "cin";
defparam \led3_cnt[30] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N5
maxii_lcell \led3_cnt[31] (
// Equation(s):
// led3_cnt[31] = DFFEAS(led3_cnt[31] $ ((((\led3_cnt[30]~3 )))), GLOBAL(\clk~combout ), VCC, , , , , \LessThan3~14_combout , )

	.clk(\clk~combout ),
	.dataa(led3_cnt[31]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\LessThan3~14_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\led3_cnt[30]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(led3_cnt[31]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led3_cnt[31] .cin_used = "true";
defparam \led3_cnt[31] .lut_mask = "5a5a";
defparam \led3_cnt[31] .operation_mode = "normal";
defparam \led3_cnt[31] .output_mode = "reg_only";
defparam \led3_cnt[31] .register_cascade_mode = "off";
defparam \led3_cnt[31] .sum_lutc_input = "cin";
defparam \led3_cnt[31] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N9
maxii_lcell \LessThan3~5 (
// Equation(s):
// \LessThan3~5_combout  = ((led3_cnt[23] & (led3_cnt[19] & led3_cnt[20])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led3_cnt[23]),
	.datac(led3_cnt[19]),
	.datad(led3_cnt[20]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~5 .lut_mask = "c000";
defparam \LessThan3~5 .operation_mode = "normal";
defparam \LessThan3~5 .output_mode = "comb_only";
defparam \LessThan3~5 .register_cascade_mode = "off";
defparam \LessThan3~5 .sum_lutc_input = "datac";
defparam \LessThan3~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N8
maxii_lcell \LessThan3~6 (
// Equation(s):
// \LessThan3~6_combout  = (led3_cnt[15] & (\LessThan3~5_combout  & ((led3_cnt[14]) # (led3_cnt[13]))))

	.clk(gnd),
	.dataa(led3_cnt[15]),
	.datab(led3_cnt[14]),
	.datac(led3_cnt[13]),
	.datad(\LessThan3~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~6 .lut_mask = "a800";
defparam \LessThan3~6 .operation_mode = "normal";
defparam \LessThan3~6 .output_mode = "comb_only";
defparam \LessThan3~6 .register_cascade_mode = "off";
defparam \LessThan3~6 .sum_lutc_input = "datac";
defparam \LessThan3~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N0
maxii_lcell \LessThan3~7 (
// Equation(s):
// \LessThan3~7_combout  = (led3_cnt[11]) # ((led3_cnt[9] & (led3_cnt[8] & led3_cnt[10])))

	.clk(gnd),
	.dataa(led3_cnt[9]),
	.datab(led3_cnt[11]),
	.datac(led3_cnt[8]),
	.datad(led3_cnt[10]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~7 .lut_mask = "eccc";
defparam \LessThan3~7 .operation_mode = "normal";
defparam \LessThan3~7 .output_mode = "comb_only";
defparam \LessThan3~7 .register_cascade_mode = "off";
defparam \LessThan3~7 .sum_lutc_input = "datac";
defparam \LessThan3~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N3
maxii_lcell \LessThan3~0 (
// Equation(s):
// \LessThan3~0_combout  = ((led3_cnt[15] & (led3_cnt[12] & led3_cnt[23])))

	.clk(gnd),
	.dataa(vcc),
	.datab(led3_cnt[15]),
	.datac(led3_cnt[12]),
	.datad(led3_cnt[23]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~0 .lut_mask = "c000";
defparam \LessThan3~0 .operation_mode = "normal";
defparam \LessThan3~0 .output_mode = "comb_only";
defparam \LessThan3~0 .register_cascade_mode = "off";
defparam \LessThan3~0 .sum_lutc_input = "datac";
defparam \LessThan3~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N7
maxii_lcell \LessThan3~8 (
// Equation(s):
// \LessThan3~8_combout  = (\LessThan3~7_combout  & (led3_cnt[19] & (\LessThan3~0_combout  & led3_cnt[20])))

	.clk(gnd),
	.dataa(\LessThan3~7_combout ),
	.datab(led3_cnt[19]),
	.datac(\LessThan3~0_combout ),
	.datad(led3_cnt[20]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~8 .lut_mask = "8000";
defparam \LessThan3~8 .operation_mode = "normal";
defparam \LessThan3~8 .output_mode = "comb_only";
defparam \LessThan3~8 .register_cascade_mode = "off";
defparam \LessThan3~8 .sum_lutc_input = "datac";
defparam \LessThan3~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N5
maxii_lcell \LessThan3~9 (
// Equation(s):
// \LessThan3~9_combout  = (led3_cnt[28]) # ((led3_cnt[25]) # ((led3_cnt[27]) # (led3_cnt[26])))

	.clk(gnd),
	.dataa(led3_cnt[28]),
	.datab(led3_cnt[25]),
	.datac(led3_cnt[27]),
	.datad(led3_cnt[26]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~9 .lut_mask = "fffe";
defparam \LessThan3~9 .operation_mode = "normal";
defparam \LessThan3~9 .output_mode = "comb_only";
defparam \LessThan3~9 .register_cascade_mode = "off";
defparam \LessThan3~9 .sum_lutc_input = "datac";
defparam \LessThan3~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N7
maxii_lcell \LessThan3~10 (
// Equation(s):
// \LessThan3~10_combout  = (led3_cnt[19] & ((led3_cnt[18]) # ((led3_cnt[17]) # (led3_cnt[16]))))

	.clk(gnd),
	.dataa(led3_cnt[19]),
	.datab(led3_cnt[18]),
	.datac(led3_cnt[17]),
	.datad(led3_cnt[16]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~10 .lut_mask = "aaa8";
defparam \LessThan3~10 .operation_mode = "normal";
defparam \LessThan3~10 .output_mode = "comb_only";
defparam \LessThan3~10 .register_cascade_mode = "off";
defparam \LessThan3~10 .sum_lutc_input = "datac";
defparam \LessThan3~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N8
maxii_lcell \LessThan3~11 (
// Equation(s):
// \LessThan3~11_combout  = (led3_cnt[21]) # ((led3_cnt[22]) # ((led3_cnt[20] & \LessThan3~10_combout )))

	.clk(gnd),
	.dataa(led3_cnt[20]),
	.datab(led3_cnt[21]),
	.datac(led3_cnt[22]),
	.datad(\LessThan3~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~11 .lut_mask = "fefc";
defparam \LessThan3~11 .operation_mode = "normal";
defparam \LessThan3~11 .output_mode = "comb_only";
defparam \LessThan3~11 .register_cascade_mode = "off";
defparam \LessThan3~11 .sum_lutc_input = "datac";
defparam \LessThan3~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y2_N9
maxii_lcell \LessThan3~12 (
// Equation(s):
// \LessThan3~12_combout  = (led3_cnt[24]) # ((\LessThan3~9_combout ) # ((led3_cnt[23] & \LessThan3~11_combout )))

	.clk(gnd),
	.dataa(led3_cnt[24]),
	.datab(led3_cnt[23]),
	.datac(\LessThan3~9_combout ),
	.datad(\LessThan3~11_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~12 .lut_mask = "fefa";
defparam \LessThan3~12 .operation_mode = "normal";
defparam \LessThan3~12 .output_mode = "comb_only";
defparam \LessThan3~12 .register_cascade_mode = "off";
defparam \LessThan3~12 .sum_lutc_input = "datac";
defparam \LessThan3~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N1
maxii_lcell \LessThan3~1 (
// Equation(s):
// \LessThan3~1_combout  = (led3_cnt[1]) # ((led3_cnt[3]) # ((led3_cnt[0]) # (led3_cnt[2])))

	.clk(gnd),
	.dataa(led3_cnt[1]),
	.datab(led3_cnt[3]),
	.datac(led3_cnt[0]),
	.datad(led3_cnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~1 .lut_mask = "fffe";
defparam \LessThan3~1 .operation_mode = "normal";
defparam \LessThan3~1 .output_mode = "comb_only";
defparam \LessThan3~1 .register_cascade_mode = "off";
defparam \LessThan3~1 .sum_lutc_input = "datac";
defparam \LessThan3~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N2
maxii_lcell \LessThan3~2 (
// Equation(s):
// \LessThan3~2_combout  = (led3_cnt[6]) # ((led3_cnt[4]) # ((led3_cnt[5]) # (\LessThan3~1_combout )))

	.clk(gnd),
	.dataa(led3_cnt[6]),
	.datab(led3_cnt[4]),
	.datac(led3_cnt[5]),
	.datad(\LessThan3~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~2 .lut_mask = "fffe";
defparam \LessThan3~2 .operation_mode = "normal";
defparam \LessThan3~2 .output_mode = "comb_only";
defparam \LessThan3~2 .register_cascade_mode = "off";
defparam \LessThan3~2 .sum_lutc_input = "datac";
defparam \LessThan3~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N3
maxii_lcell \LessThan3~3 (
// Equation(s):
// \LessThan3~3_combout  = (led3_cnt[20] & (led3_cnt[9] & (led3_cnt[19] & \LessThan3~2_combout )))

	.clk(gnd),
	.dataa(led3_cnt[20]),
	.datab(led3_cnt[9]),
	.datac(led3_cnt[19]),
	.datad(\LessThan3~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~3 .lut_mask = "8000";
defparam \LessThan3~3 .operation_mode = "normal";
defparam \LessThan3~3 .output_mode = "comb_only";
defparam \LessThan3~3 .register_cascade_mode = "off";
defparam \LessThan3~3 .sum_lutc_input = "datac";
defparam \LessThan3~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N4
maxii_lcell \LessThan3~4 (
// Equation(s):
// \LessThan3~4_combout  = (led3_cnt[7] & (led3_cnt[10] & (\LessThan3~0_combout  & \LessThan3~3_combout )))

	.clk(gnd),
	.dataa(led3_cnt[7]),
	.datab(led3_cnt[10]),
	.datac(\LessThan3~0_combout ),
	.datad(\LessThan3~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~4 .lut_mask = "8000";
defparam \LessThan3~4 .operation_mode = "normal";
defparam \LessThan3~4 .output_mode = "comb_only";
defparam \LessThan3~4 .register_cascade_mode = "off";
defparam \LessThan3~4 .sum_lutc_input = "datac";
defparam \LessThan3~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N5
maxii_lcell \LessThan3~13 (
// Equation(s):
// \LessThan3~13_combout  = (\LessThan3~6_combout ) # ((\LessThan3~8_combout ) # ((\LessThan3~12_combout ) # (\LessThan3~4_combout )))

	.clk(gnd),
	.dataa(\LessThan3~6_combout ),
	.datab(\LessThan3~8_combout ),
	.datac(\LessThan3~12_combout ),
	.datad(\LessThan3~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~13 .lut_mask = "fffe";
defparam \LessThan3~13 .operation_mode = "normal";
defparam \LessThan3~13 .output_mode = "comb_only";
defparam \LessThan3~13 .register_cascade_mode = "off";
defparam \LessThan3~13 .sum_lutc_input = "datac";
defparam \LessThan3~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N6
maxii_lcell \LessThan3~14 (
// Equation(s):
// \LessThan3~14_combout  = (led3_cnt[31]) # ((led3_cnt[29]) # ((led3_cnt[30]) # (\LessThan3~13_combout )))

	.clk(gnd),
	.dataa(led3_cnt[31]),
	.datab(led3_cnt[29]),
	.datac(led3_cnt[30]),
	.datad(\LessThan3~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan3~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan3~14 .lut_mask = "fffe";
defparam \LessThan3~14 .operation_mode = "normal";
defparam \LessThan3~14 .output_mode = "comb_only";
defparam \LessThan3~14 .register_cascade_mode = "off";
defparam \LessThan3~14 .sum_lutc_input = "datac";
defparam \LessThan3~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N1
maxii_lcell led3_status(
// Equation(s):
// \led3_status~regout  = DFFEAS((\led3_status~regout  $ ((\LessThan3~14_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\led3_status~regout ),
	.datac(\LessThan3~14_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\led3_status~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam led3_status.lut_mask = "3c3c";
defparam led3_status.operation_mode = "normal";
defparam led3_status.output_mode = "reg_only";
defparam led3_status.register_cascade_mode = "off";
defparam led3_status.sum_lutc_input = "datac";
defparam led3_status.synch_mode = "off";
// synopsys translate_on

// Location: PIN_50,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \led0~I (
	.datain(\led0_status~regout ),
	.oe(vcc),
	.combout(),
	.padio(led0));
// synopsys translate_off
defparam \led0~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_49,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \led1~I (
	.datain(\led1_status~regout ),
	.oe(vcc),
	.combout(),
	.padio(led1));
// synopsys translate_off
defparam \led1~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_48,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \led2~I (
	.datain(\led2_status~regout ),
	.oe(vcc),
	.combout(),
	.padio(led2));
// synopsys translate_off
defparam \led2~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_47,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \led3~I (
	.datain(\led3_status~regout ),
	.oe(vcc),
	.combout(),
	.padio(led3));
// synopsys translate_off
defparam \led3~I .operation_mode = "output";
// synopsys translate_on

endmodule
